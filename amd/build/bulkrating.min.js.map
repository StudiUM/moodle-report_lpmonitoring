{"version":3,"sources":["../src/bulkrating.js"],"names":["define","$","ajax","notification","BulkRating","templateid","document","ready","trigger","on","saveHandler","bind","compid","data","toggleClass","prop","find","prototype","scalesvalues","forcerating","self","requests","each","push","value","val","JSON","stringify","call","methodname","args","defaultscalesvalues","done","context","attr","show","fail","exception","init"],"mappings":"AAuBAA,OAAM,kCAAC,CAAC,QAAD,CACH,WADG,CAEH,mBAFG,CAAD,CAGF,SAASC,CAAT,CAAYC,CAAZ,CAAkBC,CAAlB,CAAgC,CAM5B,GAAIC,CAAAA,CAAU,CAAG,SAASC,CAAT,CAAqB,CAClC,KAAKA,UAAL,CAAkBA,CAAlB,CAEAJ,CAAC,CAACK,QAAD,CAAD,CAAYC,KAAZ,CAAkB,UAAW,CACzBN,CAAC,CAAC,mBAAD,CAAD,CAAuBO,OAAvB,CAA+B,OAA/B,CACH,CAFD,EAGAP,CAAC,CAACK,QAAD,CAAD,CAAYG,EAAZ,CAAe,QAAf,CAAyB,mBAAzB,CAA8C,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAA9C,EACAV,CAAC,CAACK,QAAD,CAAD,CAAYG,EAAZ,CAAe,QAAf,CAAyB,sCAAzB,CAAiE,UAAW,CACxE,GAAIG,CAAAA,CAAM,CAAGX,CAAC,CAAC,IAAD,CAAD,CAAQY,IAAR,CAAa,QAAb,CAAb,CACAZ,CAAC,CAAC,qBAAuBW,CAAxB,CAAD,CAAiCE,WAAjC,CAA6C,kBAA7C,EACA,GAAIb,CAAC,CAAC,IAAD,CAAD,CAAQc,IAAR,CAAa,SAAb,CAAJ,CAA6B,CACzBd,CAAC,CAAC,qBAAuBW,CAAxB,CAAD,CAAiCI,IAAjC,CAAsC,OAAtC,EAA+CD,IAA/C,CAAoD,UAApD,IACH,CAFD,IAEO,CACHd,CAAC,CAAC,qBAAuBW,CAAxB,CAAD,CAAiCI,IAAjC,CAAsC,OAAtC,EAA+CD,IAA/C,CAAoD,UAApD,IACH,CACJ,CARD,CASH,CAhBD,CAmBAX,CAAU,CAACa,SAAX,CAAqBZ,UAArB,CAAkC,IAAlC,CASAD,CAAU,CAACa,SAAX,CAAqBP,WAArB,CAAmC,UAAW,IACtCQ,CAAAA,CAAY,CAAG,EADuB,CAEtCC,CAAW,GAF2B,CAGtCC,CAAI,CAAG,IAH+B,CAItCC,CAJsC,CAM1CpB,CAAC,CAAC,sDAAD,CAAD,CAA0DqB,IAA1D,CAA+D,UAAY,CACvE,GAAIV,CAAAA,CAAM,CAAGX,CAAC,CAAC,IAAD,CAAD,CAAQY,IAAR,CAAa,QAAb,CAAb,CACAK,CAAY,CAACK,IAAb,CAAkB,CAACX,MAAM,CAAGA,CAAV,CAAkBY,KAAK,CAAGvB,CAAC,CAAC,IAAD,CAAD,CAAQwB,GAAR,EAA1B,CAAlB,CACH,CAHD,EAIA,GAAIxB,CAAC,CAAC,+CAAD,CAAD,CAAiDc,IAAjD,CAAsD,SAAtD,CAAJ,CAAsE,CAClEI,CAAW,GACd,CACDD,CAAY,CAAGQ,IAAI,CAACC,SAAL,CAAeT,CAAf,CAAf,CACAG,CAAQ,CAAGnB,CAAI,CAAC0B,IAAL,CAAU,CAAC,CAClBC,UAAU,CAAE,qCADM,CAElBC,IAAI,CAAE,CACFzB,UAAU,CAAEe,CAAI,CAACf,UADf,CAEF0B,mBAAmB,CAAEb,CAFnB,CAGFC,WAAW,CAAEA,CAHX,CAFY,CAAD,CAAV,CAAX,CASAE,CAAQ,CAAC,CAAD,CAAR,CAAYW,IAAZ,CAAiB,SAASC,CAAT,CAAkB,CAC/B,GAAIA,CAAJ,CAAa,CACThC,CAAC,CAAC,sCAAD,CAAD,CAA0CiC,IAA1C,CAA+C,UAA/C,KACAjC,CAAC,CAAC,uBAAD,CAAD,CAA2BkC,IAA3B,EACH,CACJ,CALD,EAKGC,IALH,CAKQjC,CAAY,CAACkC,SALrB,EAOA,QACH,CA/BD,CAiCA,MAAO,CAQHC,IAAI,CAAE,cAASjC,CAAT,CAAqB,CACvB,MAAO,IAAID,CAAAA,CAAJ,CAAeC,CAAf,CACV,CAVE,CAaV,CAnFC,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Bulk rating.\n *\n * @module     report_lpmonitoring/bulkrating\n * @author     Issam Taboubi <issam.taboubi@umontreal.ca>\n * @copyright  2019 Université de Montréal\n */\n\ndefine(['jquery',\n    'core/ajax',\n    'core/notification'],\n    function($, ajax, notification) {\n\n        /**\n         * Default scales values object.\n         * @param {Number} templateid The template id\n         */\n        var BulkRating = function(templateid) {\n            this.templateid = templateid;\n            // Clear form inputs.\n            $(document).ready(function() {\n                $('#savescalesvalues').trigger('reset');\n            });\n            $(document).on('submit', '#savescalesvalues', this.saveHandler.bind(this));\n            $(document).on('change', '.donotapplybulk input[type=checkbox]', function() {\n                var compid = $(this).data('compid');\n                $('#rating_table_comp' + compid).toggleClass(\"enabled disabled\");\n                if ($(this).prop('checked')) {\n                    $('#rating_table_comp' + compid).find('input').prop('disabled', true);\n                } else {\n                    $('#rating_table_comp' + compid).find('input').prop('disabled', false);\n                }\n            });\n        };\n\n        /** @var {Number} The template id. */\n        BulkRating.prototype.templateid = null;\n\n        /**\n         * Triggered when form is submitted.\n         *\n         * @name   saveHandler\n         * @return {Void}\n         * @function\n         */\n        BulkRating.prototype.saveHandler = function() {\n            var scalesvalues = [];\n            var forcerating = false;\n            var self = this,\n                requests;\n\n            $('#savescalesvalues .enabled input[type=radio]:checked').each(function () {\n                var compid = $(this).data('compid');\n                scalesvalues.push({compid : compid, value : $(this).val()});\n            });\n            if ($('#savescalesvalues input[name=\"forcerating\"]').prop('checked')) {\n                forcerating = true;\n            }\n            scalesvalues = JSON.stringify(scalesvalues);\n            requests = ajax.call([{\n                methodname: 'report_lpmonitoring_add_rating_task',\n                args: {\n                    templateid: self.templateid,\n                    defaultscalesvalues: scalesvalues,\n                    forcerating: forcerating\n                }\n            }]);\n\n            requests[0].done(function(context) {\n                if (context) {\n                    $('#savescalesvalues input[type=submit]').attr('disabled', true);\n                    $('#msg-success-cmrating').show();\n                }\n            }).fail(notification.exception);\n\n            return false;\n        };\n\n        return {\n            /**\n             * Main initialisation.\n             *\n             * @param {Number} templateid The template id.\n             * @return {BulkRating} A new instance of BulkRating.\n             * @method init\n             */\n            init: function(templateid) {\n                return new BulkRating(templateid);\n            }\n        };\n\n    });\n"],"file":"bulkrating.min.js"}