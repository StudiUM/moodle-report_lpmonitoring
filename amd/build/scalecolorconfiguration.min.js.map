{"version":3,"sources":["../src/scalecolorconfiguration.js"],"names":["define","$","templates","ajax","notification","str","fieldsettoggler","ScaleColorConfiguration","frameworkSelector","scaleSelector","scaleValuesSelector","on","frameworkChangeHandler","bind","change","scaleChangeHandler","document","saveHandler","init","prototype","frameworkid","scaleid","e","self","requests","target","val","prop","updateScaleHeader","show","call","methodname","args","competencyframeworkid","done","context","buildScaleOptions","loadScaleConfiguration","hide","fail","exception","get_string","noscaleavailable","remove","append","text","selector","getElementById","scale","options","selectedIndex","s","each","key","value","name","id","attr","colorpicker","render","html","js","runTemplateJS","colors","valuescaleid","configid","push","color","JSON","stringify","scaleconfiguration","trigger","addNotification","message","type","animate","scrollTop"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Scale color configuration.\n *\n * @module     report_lpmonitoring/scalecolorconfiguration\n * @author     Issam Taboubi <issam.taboubi@umontreal.ca>\n * @copyright  2016 Université de Montréal\n */\n\ndefine(['jquery',\n    'core/templates',\n    'core/ajax',\n    'core/notification',\n    'core/str',\n    'report_lpmonitoring/fieldsettoggler',\n    'report_lpmonitoring/bootstrap-colorpicker'],\n    function($, templates, ajax, notification, str, fieldsettoggler) {\n\n        /**\n         * Scale color config object.\n         * @param {String} frameworkSelector The framework select box selector.\n         * @param {String} scaleSelector The scale select box selector.\n         * @param {String} scaleValuesSelector The scaleValuesSelector selector.\n         */\n        var ScaleColorConfiguration = function(frameworkSelector, scaleSelector, scaleValuesSelector) {\n            this.frameworkSelector = frameworkSelector;\n            this.scaleSelector = scaleSelector;\n            this.scaleValuesSelector = scaleValuesSelector;\n\n            $(frameworkSelector).on('change', this.frameworkChangeHandler.bind(this)).change();\n            $(scaleSelector).on('change', this.scaleChangeHandler.bind(this)).change();\n            $(document).on('submit', '#savecolor', this.saveHandler.bind(this));\n\n            // Allow collapse of block panels.\n            fieldsettoggler.init();\n        };\n\n        /** @var {Number} The framework ID. */\n        ScaleColorConfiguration.prototype.frameworkid = null;\n        /** @var {Number} The scale. */\n        ScaleColorConfiguration.prototype.scaleid = null;\n\n        /** @var {String} The framework select box selector. */\n        ScaleColorConfiguration.prototype.frameworkSelector = null;\n        /** @var {String} The scale select box selector. */\n        ScaleColorConfiguration.prototype.scaleSelector = null;\n        /** @var {String} The scaleValuesSelector selector. */\n        ScaleColorConfiguration.prototype.scaleValuesSelector = null;\n\n        /**\n         * Triggered when a frameworkid is selected.\n         *\n         * @name   frameworkChangeHandler\n         * @param  {Event} e\n         * @return {Void}\n         * @function\n         */\n        ScaleColorConfiguration.prototype.frameworkChangeHandler = function(e) {\n            var self = this,\n                    requests;\n\n            self.frameworkid = $(e.target).val();\n            if (self.frameworkid !== '') {\n                $(self.scaleSelector).prop('disabled', false);\n                self.updateScaleHeader();\n                $('#loaderscale').show();\n                requests = ajax.call([{\n                    methodname: 'report_lpmonitoring_get_scales_from_framework',\n                    args: {competencyframeworkid: self.frameworkid}\n                }]);\n\n                requests[0].done(function(context) {\n                    self.buildScaleOptions(context);\n                    self.updateScaleHeader();\n                    self.loadScaleConfiguration();\n                    $('#loaderscale').hide();\n                    $('#id_scale').show();\n                }).fail(notification.exception);\n            } else {\n                str.get_string('noscaleavailable', 'report_lpmonitoring').done(\n                    function(noscaleavailable) {\n                        $(self.scaleSelector).prop('disabled', true);\n                        $(self.scaleSelector + ' option').remove();\n                        $(self.scaleSelector).append($('<option>').text(noscaleavailable).val(''));\n                        self.updateScaleHeader();\n                        $('#loaderscale').hide();\n                        $('#id_scale').hide();\n                    }\n                );\n            }\n        };\n\n        /**\n         * Update scale header.\n         *\n         * @name   updateScaleHeader\n         * @return {Void}\n         * @function\n         */\n        ScaleColorConfiguration.prototype.updateScaleHeader = function() {\n            var selector = document.getElementById('scaleselector'),\n                    scale = selector.options[selector.selectedIndex].text;\n            str.get_string('colorsforscale', 'report_lpmonitoring', scale).done(function(s) {\n                $('#scaleheader').text(s);\n            });\n        };\n\n        /**\n         * Build options from scale.\n         *\n         * @name   buildScaleOptions\n         * @param  {Array} options\n         * @return {Void}\n         * @function\n         */\n        ScaleColorConfiguration.prototype.buildScaleOptions = function(options) {\n            var self = this;\n\n            // Reset options scales.\n            $(self.scaleSelector + ' option').remove();\n\n            $.each(options, function(key, value) {\n                $(self.scaleSelector).append($('<option>').text(value.name).val(value.id));\n            });\n\n            self.scaleid = $(self.scaleSelector + ' option:first-child').attr('value');\n        };\n\n        /**\n         * Triggered when a scale is selected.\n         *\n         * @name   scaleChangeHandler\n         * @param  {Event} e\n         * @return {Void}\n         * @function\n         */\n        ScaleColorConfiguration.prototype.scaleChangeHandler = function(e) {\n            var self = this;\n\n            self.scaleid = $(e.target).val();\n\n            if (self.scaleid) {\n                $(self.scaleSelector).prop('disabled', false);\n                self.updateScaleHeader();\n                $(\"#loaderscalevalues\").show();\n                self.loadScaleConfiguration();\n            } else {\n                $(self.scaleValuesSelector).hide();\n                $(\"#loaderscalevalues\").hide();\n            }\n        };\n\n        /**\n         * Triggered when a scale is selected.\n         *\n         * @name   scaleChangeHandler\n         * @return {Void}\n         * @function\n         */\n        ScaleColorConfiguration.prototype.loadScaleConfiguration = function() {\n            var self = this,\n                requests;\n            $('.scalevalue').colorpicker('destroy');\n            $(\"#loaderscalevalues\").show();\n            $('#submitScaleColorButton').prop('disabled', true);\n            $(self.scaleValuesSelector).hide();\n            requests = ajax.call([{\n                methodname: 'report_lpmonitoring_read_report_competency_config',\n                args: {competencyframeworkid: self.frameworkid,\n                    scaleid: self.scaleid}\n            }]);\n\n            requests[0].done(function(context) {\n                return templates.render('report_lpmonitoring/scalecolorconfigurationdetail', context).done(function(html, js) {\n                    $(self.scaleValuesSelector).html(html);\n                    templates.runTemplateJS(js);\n                    $(\"#loaderscalevalues\").hide();\n                    $(self.scaleValuesSelector).show();\n                    $('.scalevalue').colorpicker();\n                    $('#submitScaleColorButton').prop('disabled', false);\n                });\n            }).fail(notification.exception);\n        };\n\n        /**\n         * Triggered when a scale is selected.\n         *\n         * @name   scaleChangeHandler\n         * @return {Void}\n         * @function\n         */\n        ScaleColorConfiguration.prototype.saveHandler = function() {\n            var colors = [], valuescaleid = 0, configid = '0';\n            var methodname;\n            var self = this,\n                requests;\n\n            valuescaleid = 1;\n            $('#savecolor input[type=text]').each(function () {\n                if ($(this).val() !== '') {\n                    colors.push({id : valuescaleid, color : $(this).val()});\n                    valuescaleid++;\n                }\n            });\n            colors = JSON.stringify(colors);\n\n            configid = $('#savecolor input[name=configid]').val();\n            if (configid === '0') {\n                methodname = 'report_lpmonitoring_create_report_competency_config';\n            } else {\n                methodname = 'report_lpmonitoring_update_report_competency_config';\n            }\n\n            requests = ajax.call([{\n                methodname: methodname,\n                args: {competencyframeworkid: self.frameworkid,\n                    scaleid: self.scaleid,\n                    scaleconfiguration: colors}\n            }]);\n\n            requests[0].done(function(context) {\n                if (configid === '0') {\n                    $('#savecolor input[name=configid]').val(context.id);\n                }\n                var selector = document.getElementById('scaleselector'),\n                    scale = selector.options[selector.selectedIndex].text;\n                str.get_string('colorsforscalesaved', 'report_lpmonitoring', scale).done(function(s) {\n                    $('.alert-success .close').trigger('click');\n                    notification.addNotification({\n                        message: s,\n                        type: \"success\"\n                    });\n                    $('html, body').animate({scrollTop : 0}, 500);\n                }).fail(notification.exception);\n            }).fail(notification.exception);\n\n            return false;\n        };\n\n        return {\n            /**\n             * Main initialisation.\n             *\n             * @param {String} frameworkSelector The framework select box selector.\n             * @param {String} scaleSelector The scale select box selector.\n             * @param {String} scaleValuesSelector The scaleValuesSelector selector.\n             * @return {ScaleColorConfiguration} A new instance of ScaleConfig.\n             * @method init\n             */\n            init: function(frameworkSelector, scaleSelector, scaleValuesSelector) {\n                return new ScaleColorConfiguration(frameworkSelector, scaleSelector, scaleValuesSelector);\n            }\n        };\n\n    });\n"],"file":"scalecolorconfiguration.min.js"}