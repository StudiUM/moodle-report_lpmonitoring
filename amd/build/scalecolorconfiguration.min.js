define("report_lpmonitoring/scalecolorconfiguration",["jquery","core/templates","core/ajax","core/notification","core/str","report_lpmonitoring/fieldsettoggler"],(function($,templates,ajax,notification,str,fieldsettoggler){var ScaleColorConfiguration=function(frameworkSelector,scaleSelector,scaleValuesSelector){this.frameworkSelector=frameworkSelector,this.scaleSelector=scaleSelector,this.scaleValuesSelector=scaleValuesSelector,$(frameworkSelector).on("change",this.frameworkChangeHandler.bind(this)).change(),$(scaleSelector).on("change",this.scaleChangeHandler.bind(this)).change(),$(document).on("submit","#savecolor",this.saveHandler.bind(this)),fieldsettoggler.init()};return ScaleColorConfiguration.prototype.frameworkid=null,ScaleColorConfiguration.prototype.scaleid=null,ScaleColorConfiguration.prototype.frameworkSelector=null,ScaleColorConfiguration.prototype.scaleSelector=null,ScaleColorConfiguration.prototype.scaleValuesSelector=null,ScaleColorConfiguration.prototype.frameworkChangeHandler=function(e){var self=this;self.frameworkid=$(e.target).val(),""!==self.frameworkid?($(self.scaleSelector).prop("disabled",!1),self.updateScaleHeader(),$("#loaderscale").show(),ajax.call([{methodname:"report_lpmonitoring_get_scales_from_framework",args:{competencyframeworkid:self.frameworkid}}])[0].done((function(context){self.buildScaleOptions(context),self.updateScaleHeader(),self.loadScaleConfiguration(),$("#loaderscale").hide(),$("#id_scale").show()})).fail(notification.exception)):str.get_string("noscaleavailable","report_lpmonitoring").done((function(noscaleavailable){$(self.scaleSelector).prop("disabled",!0),$(self.scaleSelector+" option").remove(),$(self.scaleSelector).append($("<option>").text(noscaleavailable).val("")),self.updateScaleHeader(),$("#loaderscale").hide(),$("#id_scale").hide()}))},ScaleColorConfiguration.prototype.updateScaleHeader=function(){var selector=document.getElementById("scaleselector"),scale=selector.options[selector.selectedIndex].text;str.get_string("colorsforscale","report_lpmonitoring",scale).done((function(s){$("#scaleheader").text(s)}))},ScaleColorConfiguration.prototype.buildScaleOptions=function(options){var self=this;$(self.scaleSelector+" option").remove(),$.each(options,(function(key,value){$(self.scaleSelector).append($("<option>").text(value.name).val(value.id))})),self.scaleid=$(self.scaleSelector+" option:first-child").attr("value")},ScaleColorConfiguration.prototype.scaleChangeHandler=function(e){this.scaleid=$(e.target).val(),this.scaleid?($(this.scaleSelector).prop("disabled",!1),this.updateScaleHeader(),$("#loaderscalevalues").show(),this.loadScaleConfiguration()):($(this.scaleValuesSelector).hide(),$("#loaderscalevalues").hide())},ScaleColorConfiguration.prototype.loadScaleConfiguration=function(){var self=this;$("#loaderscalevalues").show(),$("#submitScaleColorButton").prop("disabled",!0),$(self.scaleValuesSelector).hide(),ajax.call([{methodname:"report_lpmonitoring_read_report_competency_config",args:{competencyframeworkid:self.frameworkid,scaleid:self.scaleid}}])[0].done((function(context){return templates.render("report_lpmonitoring/scalecolorconfigurationdetail",context).done((function(html,js){$(self.scaleValuesSelector).html(html),templates.runTemplateJS(js),$("#loaderscalevalues").hide(),$(self.scaleValuesSelector).show(),$("#submitScaleColorButton").prop("disabled",!1)}))})).fail(notification.exception)},ScaleColorConfiguration.prototype.saveHandler=function(){var configid,methodname,colors=[],valuescaleid=0;return valuescaleid=1,$("#savecolor input[type=color]").each((function(){""!==$(this).val()&&(colors.push({id:valuescaleid,color:$(this).val()}),valuescaleid++)})),colors=JSON.stringify(colors),methodname="0"===(configid=$("#savecolor input[name=configid]").val())?"report_lpmonitoring_create_report_competency_config":"report_lpmonitoring_update_report_competency_config",ajax.call([{methodname:methodname,args:{competencyframeworkid:this.frameworkid,scaleid:this.scaleid,scaleconfiguration:colors}}])[0].done((function(context){"0"===configid&&$("#savecolor input[name=configid]").val(context.id);var selector=document.getElementById("scaleselector"),scale=selector.options[selector.selectedIndex].text;str.get_string("colorsforscalesaved","report_lpmonitoring",scale).done((function(s){$(".alert-success .close").trigger("click"),notification.addNotification({message:s,type:"success"}),$("html, body").animate({scrollTop:0},500)})).fail(notification.exception)})).fail(notification.exception),!1},{init:function(frameworkSelector,scaleSelector,scaleValuesSelector){return new ScaleColorConfiguration(frameworkSelector,scaleSelector,scaleValuesSelector)}}}));

//# sourceMappingURL=scalecolorconfiguration.min.js.map