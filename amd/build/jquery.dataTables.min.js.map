{"version":3,"sources":["../src/jquery.dataTables.js"],"names":["factory","define","amd","$","window","document","exports","module","root","require","jQuery","DataTable","options","sSelector","oOpts","api","_","rows","data","traditional","_Api","_fnSettingsFromNode","_ext","iApiIndex","fnAddData","redraw","isArray","isPlainObject","add","row","draw","flatten","toArray","fnAdjustColumnSizing","bRedraw","columns","adjust","settings","scroll","oScroll","sX","sY","_fnScrollDraw","fnClearTable","clear","fnClose","nTr","child","hide","fnDeleteRow","target","callback","aoData","remove","call","fnDestroy","destroy","fnDraw","complete","fnFilter","sInput","iColumn","bRegex","bSmart","bShowGlobal","bCaseInsensitive","search","column","fnGetData","src","col","type","nodeName","toLowerCase","cell","fnGetNodes","iRow","node","nodes","fnGetPosition","toUpperCase","index","columnVisible","fnIsOpen","isShown","fnOpen","mHtml","sClass","show","fnPageChange","mAction","page","fnSetColumnVis","iCol","bShow","visible","fnSettings","fnSort","aaSort","order","fnSortListener","nNode","fnCallback","listener","fnUpdate","mData","mRow","bAction","fnVersionCheck","_that","emptyInit","len","length","oApi","internal","fn","ext","_fnExternApiFunc","each","oInit","_fnExtend","i","iLen","sId","getAttribute","bInitHandedOff","defaults","$this","_fnLog","_fnCompatOpts","_fnCompatCols","_fnCamelToHungarian","extend","allSettings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","sTableId","id","splice","_unique","oSettings","models","style","width","push","dataTable","oLanguage","_fnLanguageCompat","aLengthMenu","iDisplayLength","_fnMap","oFeatures","_fnCallbackReg","fnDrawCallback","fnServerParams","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","bJQueryUI","oJUIClasses","sDom","renderer","header","classes","addClass","sTable","iInitDisplayStart","iDisplayStart","_iDisplayStart","iDeferLoading","bDeferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","sUrl","ajax","dataType","url","success","json","_fnInitialise","error","asStripeClasses","sStripeOdd","sStripeEven","stripeClasses","rowOne","children","find","eq","inArray","map","el","hasClass","removeClass","join","asDestroyStripes","slice","anThs","aoColumnsInit","nThead","getElementsByTagName","_fnDetectHeader","aoHeader","_fnGetUniqueThs","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","oDef","_fnColumnOptions","a","name","sort","filter","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSort","bSorted","aSort","_fnSortFlatten","sortedColumns","val","dir","_fnCallbackFire","_fnSortAria","_fnDataSource","bDeferRender","captions","_captionSide","css","thead","appendTo","tbody","nTBody","tfoot","sNoFooter","aoFooter","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","bInitialised","bStateSave","_fnSaveState","_fnLoadState","_api_register","_api_registerPlural","_re_dic","_re_new_lines","_re_html","_re_escape_regex","RegExp","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_isHtml","_htmlNumeric","html","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","start","end","_removeEmpty","j","k","again","util","throttle","freq","frequency","last","timer","that","now","Date","args","arguments","clearTimeout","setTimeout","apply","escapeRegex","_fnHungarianMap","o","match","newKey","key","indexOf","_hungarianMap","user","force","hungarianKey","charAt","lang","zeroRecords","sZeroRecords","sEmptyTable","sLoadingRecords","sInfoThousands","sThousands","decimal","sDecimal","_addNumericSort","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","dataSort","aDataSort","__browser","browser","n","position","top","left","scrollLeft","height","overflow","append","outer","inner","barWidth","offsetWidth","clientWidth","bScrollOversize","bScrollbarLeft","Math","round","offset","bBounding","getBoundingClientRect","oBrowser","iBarWidth","_fnReduce","inc","value","isSet","hasOwnProperty","nTh","oDefaults","oCol","oColumn","createElement","sTitle","innerHTML","idx","aoPreSearchCols","oOptions","th","sWidthOrig","attr","t","mDataProp","sType","_sManualType","className","iDataSort","mDataSrc","mRender","attrTest","_bAttrSrc","_setter","rowData","meta","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","sSortableNone","bAsc","bDesc","sSortingClass","sSortingClassJUI","sSortableAsc","sSortJUIAscAllowed","sSortableDesc","sSortJUIDescAllowed","sSortable","sSortJUI","_fnAdjustColumnSizing","bAutoWidth","_fnCalculateColumnWidths","sWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","vis","bVisible","sParam","_fnColumnTypes","types","detect","jen","ken","detectedType","cache","_fnGetCellData","aoColDefs","aoCols","jLen","kLen","def","aTargets","targets","aDataIn","anTds","oData","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","rowIdx","colIdx","iDraw","defaultContent","sDefaultContent","cellData","iDrawError","_fnSetCellData","__reArray","__reFn","_fnSplitObjNotation","str","mSource","fetchData","arrayNotation","funcNotation","innerSrc","substring","setData","b","aLast","_fnGetDataMaster","_fnClearTable","_fnDeleteIndex","iTarget","iTargetIndex","_fnInvalidate","cellWrite","childNodes","removeChild","firstChild","anCells","_aSortData","_aFilterData","cols","_fnRowAttributes","tds","td","contents","objectRead","setter","cellProcess","trim","nextSibling","rowNode","nTrIn","nTd","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","fnCreatedCell","setAttribute","tr","DT_RowClass","split","__rowc","concat","DT_RowAttr","DT_RowData","_fnBuildHead","createHeader","iTabIndex","_fnSortAttachListener","_fnRenderer","sHeaderTH","sFooterTH","nTf","_fnDrawHead","aoSource","bIncludeHidden","nLocalTr","aoLocal","aApplied","iColumns","iRowspan","iColspan","_fnDraw","aPreDraw","_fnProcessingDisplay","anRows","iRowCount","iStripes","iOpenRows","aoOpenRows","oLang","bServerSide","bDrawing","fnRecordsDisplay","iDisplayEnd","fnDisplayEnd","bDestroying","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","sStripe","_sRowStripe","sZero","fnRecordsTotal","sRowEmpty","body","detach","bFiltered","_fnReDraw","holdPosition","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","_fnAddOptionsHtml","table","holding","insertBefore","insert","sWrapper","nHolding","nTableWrapper","nTableReinsertBefore","aDom","featureNode","cOption","nNewNode","cNext","sAttr","sJUIHeader","sJUIFooter","aSplit","substr","parent","bPaginate","bLengthChange","_fnFeatureHtmlLength","_fnFeatureHtmlFilter","bProcessing","_fnFeatureHtmlProcessing","_fnFeatureHtmlTable","bInfo","_fnFeatureHtmlInfo","_fnFeatureHtmlPaginate","feature","aoFeatures","cFeature","fnInit","aanFeatures","replaceWith","aLayout","nTrs","nCell","l","iColShifted","bUnique","fnShiftCol","nHeader","aReturn","unique","bSortCellsTop","_fnBuildAjax","ajaxData","instance","jqXHR","newData","isFunction","baseAjax","sError","sServerMethod","xhr","ret","readyState","oAjaxData","fnServerData","sAjaxSource","bAjaxDataGet","_fnAjaxParameters","_fnAjaxUpdateDraw","columnCount","preSearch","preColSearch","dataProp","columnSearch","displayStart","displayLength","_iDisplayLength","param","sSearch","regex","sName","searchable","bSearchable","orderable","legacy","compat","modern","_fnAjaxDataSrc","recordsTotal","recordsFiltered","_bInitComplete","_fnInitComplete","dataSrc","sAjaxDataProp","tableId","language","previousSearch","input","sFilterInput","f","sFilter","searchFn","searchDelay","jqFilter","sSearchPlaceholder","on","_fnThrottle","e","keyCode","ev","activeElement","oInput","iForce","oPrevSearch","aoPrevSearch","fnSaveFilter","oFilter","fnRegex","bEscapeRegex","_fnFilter","_fnFilterColumn","_fnFilterCustom","filters","displayRows","merge","searchStr","smart","caseInsensitive","display","rpSearch","_fnFilterCreateSearch","test","prevSearch","displayMaster","invalidated","_fnFilterData","_sFilterRow","word","m","__filter_div","__filter_div_textContent","textContent","filterData","fomatters","wasInvalidated","is","toString","innerText","_fnSearchToCamel","obj","_fnSearchToHung","tid","sInfo","aoDrawCallback","_fnUpdateInfo","max","total","sInfoEmpty","sInfoFiltered","sInfoPostFix","_fnInfoMacros","fnInfoCallback","formatter","fnFormatNumber","all","ceil","iAjaxStart","deferLoading","_fnStringToCss","aData","_fnLengthChange","_fnLengthOverflow","menu","d2","lengths","select","sLengthSelect","Option","div","sLength","sLengthMenu","outerHTML","sPaginationType","plugin","pager","sPaging","p","visRecords","pages","buttons","_fnPageChange","action","records","floor","changed","r","sProcessing","scrollY","caption","captionSide","headerClone","cloneNode","footerClone","footer","_div","size","scroller","sScrollWrapper","sScrollHead","border","sScrollHeadInner","sXInner","removeAttr","sScrollBody","sScrollFoot","sScrollFootInner","scrollHead","scrollBody","scrollFoot","bCollapse","nScrollHead","nScrollBody","nScrollFoot","scrollXInner","divHeader","divHeaderStyle","divHeaderInner","divHeaderInnerStyle","divHeaderTable","divBodyEl","divBody","divBodyStyle","divFooter","divFooterInner","divFooterTable","tableEl","tableStyle","ie67","dtHeaderCells","headerTrgEls","footerTrgEls","headerSrcEls","footerSrcEls","headerCopy","footerCopy","headerWidths","footerWidths","headerContent","footerContent","correction","sanityWidth","zeroOut","nSizer","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","scrollBarVis","scrollHeight","clientHeight","clone","prependTo","_fnApplyToChildren","outerWidth","offsetHeight","nToSize","iOuterWidth","bScrolling","padding","scrollTop","an1","an2","nNode1","nNode2","nodeType","visibleColumns","headerCells","tableWidthAttr","tableContainer","userInputs","columnIdx","styleWidth","_fnConvertToWidth","tmpTable","margin","_fnGetWidestNode","sContentPadding","holder","right","bounding","_reszEvt","bindResize","sInstance","_fnGetMaxLenString","maxIdx","srcCol","fixed","aaSortingFixed","fixedObj","nestedSort","pre","post","_idx","aiOrig","oExtSort","formatters","sortCol","_fnSortData","x","y","dataA","dataB","label","nextSort","oAria","removeAttribute","sSortAscending","sSortDescending","_fnSortListener","nextSortIdx","next","bSortMulti","sortIdx","attachTo","_fnBindAction","shiftKey","oldSort","aLastSort","sortClass","sSortColumn","bSortClasses","customSort","sSortDataType","customData","state","time","oSavedState","fnStateSaveCallback","loaded","abStateLoad","duration","iStateDuration","oLoadedState","fnStateLoadCallback","level","msg","tn","sErrMode","errMode","alert","Error","console","log","mappedName","extender","breakRefs","blur","which","preventDefault","sStore","callbackArr","eventName","reverse","Event","trigger","result","host","__apiStruct","__arrayProto","Array","prototype","_toSettings","mixed","jq","tables","context","ctxSettings","selector","opts","Api","any","count","ctx","iterator","alwaysNew","items","item","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","shift","to$","toJQuery","unshift","scope","__dt_wrapper","struct","methodScoping","struc","methodExt","propExt","register","heir","method","registerPlural","pluralName","singularName","__table_selector","paging","info","__reload","one","abort","resetPaging","_selector_run","selectFn","res","selectorType","_selector_opts","_selector_first","inst","displayFiltered","__row_selector","run","sel","selInt","closest","rowObj","hash","thatIdx","loopRow","loopCells","newRows","modRows","__details_add","klass","addRow","created","colSpan","_details","_detailsShow","insertAfter","__details_remove","__details_display","__details_events","namespace","drawEvent","colvisEvent","destroyEvent","off","_child_obj","_child_mth","__columnData","r1","r2","__column_selector","names","visColumns","jqResult","__setColumnVis","calc","__cell_selector","allCells","fnSelector","rowSelector","columnSelector","set","caseInsen","versionCheck","version","aThis","aThat","iThis","iThat","isDataTable","fnIsDataTable","get","head","foot","fnTables","camelToHungarian","jqRows","orig","jqTable","jqTbody","jqWrapper","bJUI","sSortIcon","wrapper","sSortJUIWrapper","removedMethod","sDestroyWidth","arg1","arg2","arg3","arg4","token","plural","resolved","toFormat","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","min","builder","pageButton","sVersion","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","oStdClasses","oPagination","_stateDefault","_sortIcon","_headerFooter","extPagination","_numbers","numbers","numbers_length","half","DT_el","simple","full","simple_numbers","full_numbers","oPaginate","aria","btnDisplay","btnClass","counter","attach","container","button","clickHandler","sFirst","sPageButtonDisabled","sPrevious","sNext","sLast","sPageButtonActive","sPageButton","activeEl","empty","focus","parsed","string","__numericReplace","decimalPlace","re1","re2","Infinity","sSortAsc","sSortDesc","jqueryui","sSortJUIAsc","sSortJUIDesc","__htmlEscapeEntities","render","number","thousands","precision","prefix","postfix","negative","flo","toFixed","abs","intPart","floatPart","text","_fnNodeToDataIndex","_fnNodeToColumnIndex","_fnCalculateEnd","dataTableSettings","dataTableExt"],"mappings":"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","sourcesContent":["/*! DataTables 1.10.13-dev\n * ©2008-2015 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     DataTables\n * @description Paginate, search and order HTML tables\n * @version     1.10.13-dev\n * @file        jquery.dataTables.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2008-2015 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/\n\n(function (factory) {\n    \"use strict\";\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(['jquery'], function ($) {\n            return factory($, window, document);\n        });\n    }\n    else if (typeof exports === 'object') {\n        // CommonJS\n        module.exports = function (root, $) {\n            if (!root) {\n                // CommonJS environments without a window global must pass a\n                // root. This will give an error otherwise\n                root = window;\n            }\n\n            if (!$) {\n                $ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window\n                        require('jquery') :\n                        require('jquery')(root);\n            }\n\n            return factory($, root, root.document);\n        };\n    }\n    else {\n        // Browser\n        factory(jQuery, window, document);\n    }\n}\n(function ($, window, document, undefined) {\n    \"use strict\";\n\n    /**\n     * DataTables is a plug-in for the jQuery Javascript library. It is a highly\n     * flexible tool, based upon the foundations of progressive enhancement,\n     * which will add advanced interaction controls to any HTML table. For a\n     * full list of features please refer to\n     * [DataTables.net](href=\"http://datatables.net).\n     *\n     * Note that the `DataTable` object is not a global variable but is aliased\n     * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may\n     * be  accessed.\n     *\n     *  @class\n     *  @param {object} [init={}] Configuration object for DataTables. Options\n     *    are defined by {@link DataTable.defaults}\n     *  @requires jQuery 1.7+\n     *\n     *  @example\n     *    // Basic initialisation\n     *    $(document).ready( function {\n     *      $('#example').dataTable();\n     *    } );\n     *\n     *  @example\n     *    // Initialisation with configuration options - in this case, disable\n     *    // pagination and sorting.\n     *    $(document).ready( function {\n     *      $('#example').dataTable( {\n     *        \"paginate\": false,\n     *        \"sort\": false\n     *      } );\n     *    } );\n     */\n    var DataTable = function (options)\n    {\n        /**\n         * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n         * return the resulting jQuery object.\n         *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n         *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n         *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n         *    criterion (\"applied\") or all TR elements (i.e. no filter).\n         *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n         *    Can be either 'current', whereby the current sorting of the table is used, or\n         *    'original' whereby the original order the data was read into the table is used.\n         *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n         *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n         *    'current' and filter is 'applied', regardless of what they might be given as.\n         *  @returns {object} jQuery object, filtered by the given selector.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Highlight every second row\n         *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n         *    } );\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Filter to rows with 'Webkit' in them, add a background colour and then\n         *      // remove the filter, thus highlighting the 'Webkit' rows only.\n         *      oTable.fnFilter('Webkit');\n         *      oTable.$('tr', {\"search\": \"applied\"}).css('backgroundColor', 'blue');\n         *      oTable.fnFilter('');\n         *    } );\n         */\n        this.$ = function (sSelector, oOpts)\n        {\n            return this.api(true).$(sSelector, oOpts);\n        };\n\n        /**\n         * Almost identical to $ in operation, but in this case returns the data for the matched\n         * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n         * rather than any descendants, so the data can be obtained for the row/cell. If matching\n         * rows are found, the data returned is the original data array/object that was used to\n         * create the row (or a generated array if from a DOM source).\n         *\n         * This method is often useful in-combination with $ where both functions are given the\n         * same parameters and the array indexes will match identically.\n         *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n         *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n         *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n         *    criterion (\"applied\") or all elements (i.e. no filter).\n         *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n         *    Can be either 'current', whereby the current sorting of the table is used, or\n         *    'original' whereby the original order the data was read into the table is used.\n         *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n         *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be\n         *    'current' and filter is 'applied', regardless of what they might be given as.\n         *  @returns {array} Data for the matched elements. If any elements, as a result of the\n         *    selector, were not TR, TD or TH elements in the DataTable, they will have a null\n         *    entry in the array.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Get the data from the first row in the table\n         *      var data = oTable._('tr:first');\n         *\n         *      // Do something useful with the data\n         *      alert( \"First cell is: \"+data[0] );\n         *    } );\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Filter to 'Webkit' and get all data for\n         *      oTable.fnFilter('Webkit');\n         *      var data = oTable._('tr', {\"search\": \"applied\"});\n         *\n         *      // Do something with the data\n         *      alert( data.length+\" rows matched the search\" );\n         *    } );\n         */\n        this._ = function (sSelector, oOpts)\n        {\n            return this.api(true).rows(sSelector, oOpts).data();\n        };\n\n        /**\n         * Create a DataTables Api instance, with the currently selected tables for\n         * the Api's context.\n         * @param {boolean} [traditional=false] Set the API instance's context to be\n         *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was\n         *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),\n         *   or if all tables captured in the jQuery object should be used.\n         * @return {DataTables.Api}\n         */\n        this.api = function (traditional)\n        {\n            return traditional ?\n                    new _Api(\n                            _fnSettingsFromNode(this[ _ext.iApiIndex ])\n                            ) :\n                    new _Api(this);\n        };\n\n        /**\n         * Add a single new row or multiple rows of data to the table. Please note\n         * that this is suitable for client-side processing only - if you are using\n         * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n         * must add it to the data source, i.e. the server-side, through an Ajax call.\n         *  @param {array|object} data The data to be added to the table. This can be:\n         *    <ul>\n         *      <li>1D array of data - add a single row with the data provided</li>\n         *      <li>2D array of arrays - add multiple rows in a single call</li>\n         *      <li>object - data object when using <i>mData</i></li>\n         *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n         *    </ul>\n         *  @param {bool} [redraw=true] redraw the table or not\n         *  @returns {array} An array of integers, representing the list of indexes in\n         *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to\n         *    the table.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    // Global var for counter\n         *    var giCount = 2;\n         *\n         *    $(document).ready(function() {\n         *      $('#example').dataTable();\n         *    } );\n         *\n         *    function fnClickAddRow() {\n         *      $('#example').dataTable().fnAddData( [\n         *        giCount+\".1\",\n         *        giCount+\".2\",\n         *        giCount+\".3\",\n         *        giCount+\".4\" ]\n         *      );\n         *\n         *      giCount++;\n         *    }\n         */\n        this.fnAddData = function (data, redraw)\n        {\n            var api = this.api(true);\n\n            /* Check if we want to add multiple rows or not */\n            var rows = $.isArray(data) && ($.isArray(data[0]) || $.isPlainObject(data[0])) ?\n                    api.rows.add(data) :\n                    api.row.add(data);\n\n            if (redraw === undefined || redraw) {\n                api.draw();\n            }\n\n            return rows.flatten().toArray();\n        };\n\n        /**\n         * This function will make DataTables recalculate the column sizes, based on the data\n         * contained in the table and the sizes applied to the columns (in the DOM, CSS or\n         * through the sWidth parameter). This can be useful when the width of the table's\n         * parent element changes (for example a window resize).\n         *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable( {\n         *        \"sScrollY\": \"200px\",\n         *        \"bPaginate\": false\n         *      } );\n         *\n         *      $(window).on('resize', function () {\n         *        oTable.fnAdjustColumnSizing();\n         *      } );\n         *    } );\n         */\n        this.fnAdjustColumnSizing = function (bRedraw)\n        {\n            var api = this.api(true).columns.adjust();\n            var settings = api.settings()[0];\n            var scroll = settings.oScroll;\n\n            if (bRedraw === undefined || bRedraw) {\n                api.draw(false);\n            }\n            else if (scroll.sX !== \"\" || scroll.sY !== \"\") {\n                /* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n                _fnScrollDraw(settings);\n            }\n        };\n\n        /**\n         * Quickly and simply clear a table\n         *  @param {bool} [bRedraw=true] redraw the table or not\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n         *      oTable.fnClearTable();\n         *    } );\n         */\n        this.fnClearTable = function (bRedraw)\n        {\n            var api = this.api(true).clear();\n\n            if (bRedraw === undefined || bRedraw) {\n                api.draw();\n            }\n        };\n\n        /**\n         * The exact opposite of 'opening' a row, this function will close any rows which\n         * are currently 'open'.\n         *  @param {node} nTr the table row to 'close'\n         *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable;\n         *\n         *      // 'open' an information row when a row is clicked on\n         *      $('#example tbody tr').click( function () {\n         *        if ( oTable.fnIsOpen(this) ) {\n         *          oTable.fnClose( this );\n         *        } else {\n         *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n         *        }\n         *      } );\n         *\n         *      oTable = $('#example').dataTable();\n         *    } );\n         */\n        this.fnClose = function (nTr)\n        {\n            this.api(true).row(nTr).child.hide();\n        };\n\n        /**\n         * Remove a row for the table\n         *  @param {mixed} target The index of the row from aoData to be deleted, or\n         *    the TR element you want to delete\n         *  @param {function|null} [callBack] Callback function\n         *  @param {bool} [redraw=true] Redraw the table or not\n         *  @returns {array} The row that was deleted\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Immediately remove the first row\n         *      oTable.fnDeleteRow( 0 );\n         *    } );\n         */\n        this.fnDeleteRow = function (target, callback, redraw)\n        {\n            var api = this.api(true);\n            var rows = api.rows(target);\n            var settings = rows.settings()[0];\n            var data = settings.aoData[ rows[0][0] ];\n\n            rows.remove();\n\n            if (callback) {\n                callback.call(this, settings, data);\n            }\n\n            if (redraw === undefined || redraw) {\n                api.draw();\n            }\n\n            return data;\n        };\n\n        /**\n         * Restore the table to it's original state in the DOM by removing all of DataTables\n         * enhancements, alterations to the DOM structure of the table and event listeners.\n         *  @param {boolean} [remove=false] Completely remove the table from the DOM\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n         *      var oTable = $('#example').dataTable();\n         *      oTable.fnDestroy();\n         *    } );\n         */\n        this.fnDestroy = function (remove)\n        {\n            this.api(true).destroy(remove);\n        };\n\n        /**\n         * Redraw the table\n         *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n         *      oTable.fnDraw();\n         *    } );\n         */\n        this.fnDraw = function (complete)\n        {\n            // Note that this isn't an exact match to the old call to _fnDraw - it takes\n            // into account the new data, but can hold position.\n            this.api(true).draw(complete);\n        };\n\n        /**\n         * Filter the input based on data\n         *  @param {string} sInput String to filter the table on\n         *  @param {int|null} [iColumn] Column to limit filtering to\n         *  @param {bool} [bRegex=false] Treat as regular expression or not\n         *  @param {bool} [bSmart=true] Perform smart filtering or not\n         *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n         *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Sometime later - filter...\n         *      oTable.fnFilter( 'test string' );\n         *    } );\n         */\n        this.fnFilter = function (sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive)\n        {\n            var api = this.api(true);\n\n            if (iColumn === null || iColumn === undefined) {\n                api.search(sInput, bRegex, bSmart, bCaseInsensitive);\n            }\n            else {\n                api.column(iColumn).search(sInput, bRegex, bSmart, bCaseInsensitive);\n            }\n\n            api.draw();\n        };\n\n        /**\n         * Get the data for the whole table, an individual row or an individual cell based on the\n         * provided parameters.\n         *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as\n         *    a TR node then the data source for the whole row will be returned. If given as a\n         *    TD/TH cell node then iCol will be automatically calculated and the data for the\n         *    cell returned. If given as an integer, then this is treated as the aoData internal\n         *    data index for the row (see fnGetPosition) and the data for that row used.\n         *  @param {int} [col] Optional column index that you want the data of.\n         *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n         *    returned. If mRow is defined, just data for that row, and is iCol is\n         *    defined, only data for the designated cell is returned.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    // Row data\n         *    $(document).ready(function() {\n         *      oTable = $('#example').dataTable();\n         *\n         *      oTable.$('tr').click( function () {\n         *        var data = oTable.fnGetData( this );\n         *        // ... do something with the array / object of data for the row\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Individual cell data\n         *    $(document).ready(function() {\n         *      oTable = $('#example').dataTable();\n         *\n         *      oTable.$('td').click( function () {\n         *        var sData = oTable.fnGetData( this );\n         *        alert( 'The cell clicked on had the value of '+sData );\n         *      } );\n         *    } );\n         */\n        this.fnGetData = function (src, col)\n        {\n            var api = this.api(true);\n\n            if (src !== undefined) {\n                var type = src.nodeName ? src.nodeName.toLowerCase() : '';\n\n                return col !== undefined || type == 'td' || type == 'th' ?\n                        api.cell(src, col).data() :\n                        api.row(src).data() || null;\n            }\n\n            return api.data().toArray();\n        };\n\n        /**\n         * Get an array of the TR nodes that are used in the table's body. Note that you will\n         * typically want to use the '$' API method in preference to this as it is more\n         * flexible.\n         *  @param {int} [iRow] Optional row index for the TR element you want\n         *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n         *    in the table's body, or iRow is defined, just the TR element requested.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Get the nodes from the table\n         *      var nNodes = oTable.fnGetNodes( );\n         *    } );\n         */\n        this.fnGetNodes = function (iRow)\n        {\n            var api = this.api(true);\n\n            return iRow !== undefined ?\n                    api.row(iRow).node() :\n                    api.rows().nodes().flatten().toArray();\n        };\n\n        /**\n         * Get the array indexes of a particular cell from it's DOM element\n         * and column index including hidden columns\n         *  @param {node} node this can either be a TR, TD or TH in the table's body\n         *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n         *    if given as a cell, an array of [row index, column index (visible),\n         *    column index (all)] is given.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      $('#example tbody td').click( function () {\n         *        // Get the position of the current data from the node\n         *        var aPos = oTable.fnGetPosition( this );\n         *\n         *        // Get the data array for this row\n         *        var aData = oTable.fnGetData( aPos[0] );\n         *\n         *        // Update the data array and return the value\n         *        aData[ aPos[1] ] = 'clicked';\n         *        this.innerHTML = 'clicked';\n         *      } );\n         *\n         *      // Init DataTables\n         *      oTable = $('#example').dataTable();\n         *    } );\n         */\n        this.fnGetPosition = function (node)\n        {\n            var api = this.api(true);\n            var nodeName = node.nodeName.toUpperCase();\n\n            if (nodeName == 'TR') {\n                return api.row(node).index();\n            }\n            else if (nodeName == 'TD' || nodeName == 'TH') {\n                var cell = api.cell(node).index();\n\n                return [\n                    cell.row,\n                    cell.columnVisible,\n                    cell.column\n                ];\n            }\n            return null;\n        };\n\n        /**\n         * Check to see if a row is 'open' or not.\n         *  @param {node} nTr the table row to check\n         *  @returns {boolean} true if the row is currently open, false otherwise\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable;\n         *\n         *      // 'open' an information row when a row is clicked on\n         *      $('#example tbody tr').click( function () {\n         *        if ( oTable.fnIsOpen(this) ) {\n         *          oTable.fnClose( this );\n         *        } else {\n         *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n         *        }\n         *      } );\n         *\n         *      oTable = $('#example').dataTable();\n         *    } );\n         */\n        this.fnIsOpen = function (nTr)\n        {\n            return this.api(true).row(nTr).child.isShown();\n        };\n\n        /**\n         * This function will place a new row directly after a row which is currently\n         * on display on the page, with the HTML contents that is passed into the\n         * function. This can be used, for example, to ask for confirmation that a\n         * particular record should be deleted.\n         *  @param {node} nTr The table row to 'open'\n         *  @param {string|node|jQuery} mHtml The HTML to put into the row\n         *  @param {string} sClass Class to give the new TD cell\n         *  @returns {node} The row opened. Note that if the table row passed in as the\n         *    first parameter, is not found in the table, this method will silently\n         *    return.\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable;\n         *\n         *      // 'open' an information row when a row is clicked on\n         *      $('#example tbody tr').click( function () {\n         *        if ( oTable.fnIsOpen(this) ) {\n         *          oTable.fnClose( this );\n         *        } else {\n         *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n         *        }\n         *      } );\n         *\n         *      oTable = $('#example').dataTable();\n         *    } );\n         */\n        this.fnOpen = function (nTr, mHtml, sClass)\n        {\n            return this.api(true)\n                    .row(nTr)\n                    .child(mHtml, sClass)\n                    .show()\n                    .child()[0];\n        };\n\n        /**\n         * Change the pagination - provides the internal logic for pagination in a simple API\n         * function. With this function you can have a DataTables table go to the next,\n         * previous, first or last pages.\n         *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n         *    or page number to jump to (integer), note that page 0 is the first page.\n         *  @param {bool} [bRedraw=true] Redraw the table or not\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *      oTable.fnPageChange( 'next' );\n         *    } );\n         */\n        this.fnPageChange = function (mAction, bRedraw)\n        {\n            var api = this.api(true).page(mAction);\n\n            if (bRedraw === undefined || bRedraw) {\n                api.draw(false);\n            }\n        };\n\n        /**\n         * Show a particular column\n         *  @param {int} iCol The column whose display should be changed\n         *  @param {bool} bShow Show (true) or hide (false) the column\n         *  @param {bool} [bRedraw=true] Redraw the table or not\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Hide the second column after initialisation\n         *      oTable.fnSetColumnVis( 1, false );\n         *    } );\n         */\n        this.fnSetColumnVis = function (iCol, bShow, bRedraw)\n        {\n            var api = this.api(true).column(iCol).visible(bShow);\n\n            if (bRedraw === undefined || bRedraw) {\n                api.columns.adjust().draw();\n            }\n        };\n\n        /**\n         * Get the settings for a particular table for external manipulation\n         *  @returns {object} DataTables settings object. See\n         *    {@link DataTable.models.oSettings}\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *      var oSettings = oTable.fnSettings();\n         *\n         *      // Show an example parameter from the settings\n         *      alert( oSettings._iDisplayStart );\n         *    } );\n         */\n        this.fnSettings = function ()\n        {\n            return _fnSettingsFromNode(this[_ext.iApiIndex]);\n        };\n\n        /**\n         * Sort the table by a particular column\n         *  @param {int} iCol the data index to sort on. Note that this will not match the\n         *    'display index' if you have hidden data entries\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Sort immediately with columns 0 and 1\n         *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n         *    } );\n         */\n        this.fnSort = function (aaSort)\n        {\n            this.api(true).order(aaSort).draw();\n        };\n\n        /**\n         * Attach a sort listener to an element for a given column\n         *  @param {node} nNode the element to attach the sort listener to\n         *  @param {int} iColumn the column that a click on this node will sort on\n         *  @param {function} [fnCallback] callback function when sort is run\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *\n         *      // Sort on column 1, when 'sorter' is clicked on\n         *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n         *    } );\n         */\n        this.fnSortListener = function (nNode, iColumn, fnCallback)\n        {\n            this.api(true).order.listener(nNode, iColumn, fnCallback);\n        };\n\n        /**\n         * Update a table cell or row - this method will accept either a single value to\n         * update the cell with, an array of values with one element for each column or\n         * an object in the same format as the original data source. The function is\n         * self-referencing in order to make the multi column updates easier.\n         *  @param {object|array|string} mData Data to update the cell/row with\n         *  @param {node|int} mRow TR element you want to update or the aoData index\n         *  @param {int} [iColumn] The column to update, give as null or undefined to\n         *    update a whole row.\n         *  @param {bool} [bRedraw=true] Redraw the table or not\n         *  @param {bool} [bAction=true] Perform pre-draw actions or not\n         *  @returns {int} 0 on success, 1 on error\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n         *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row\n         *    } );\n         */\n        this.fnUpdate = function (mData, mRow, iColumn, bRedraw, bAction)\n        {\n            var api = this.api(true);\n\n            if (iColumn === undefined || iColumn === null) {\n                api.row(mRow).data(mData);\n            }\n            else {\n                api.cell(mRow, iColumn).data(mData);\n            }\n\n            if (bAction === undefined || bAction) {\n                api.columns.adjust();\n            }\n\n            if (bRedraw === undefined || bRedraw) {\n                api.draw();\n            }\n            return 0;\n        };\n\n        /**\n         * Provide a common method for plug-ins to check the version of DataTables being used, in order\n         * to ensure compatibility.\n         *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n         *    formats \"X\" and \"X.Y\" are also acceptable.\n         *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n         *    version, or false if this version of DataTales is not suitable\n         *  @method\n         *  @dtopt API\n         *  @deprecated Since v1.10\n         *\n         *  @example\n         *    $(document).ready(function() {\n         *      var oTable = $('#example').dataTable();\n         *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n         *    } );\n         */\n        this.fnVersionCheck = _ext.fnVersionCheck;\n\n        var _that = this;\n        var emptyInit = options === undefined;\n        var len = this.length;\n\n        if (emptyInit) {\n            options = {};\n        }\n\n        this.oApi = this.internal = _ext.internal;\n\n        // Extend with old style plug-in API methods\n        for (var fn in DataTable.ext.internal) {\n            if (fn) {\n                this[fn] = _fnExternApiFunc(fn);\n            }\n        }\n\n        this.each(function () {\n            // For each initialisation we want to give it a clean initialisation\n            // object that can be bashed around\n            var o = {};\n            var oInit = len > 1 ? // optimisation for single table case\n                    _fnExtend(o, options, true) :\n                    options;\n\n            /*global oInit,_that,emptyInit*/\n            var i = 0, iLen, j, jLen, k, kLen;\n            var sId = this.getAttribute('id');\n            var bInitHandedOff = false;\n            var defaults = DataTable.defaults;\n            var $this = $(this);\n\n            /* Sanity check */\n            if (this.nodeName.toLowerCase() != 'table')\n            {\n                _fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2);\n                return;\n            }\n\n            /* Backwards compatibility for the defaults */\n            _fnCompatOpts(defaults);\n            _fnCompatCols(defaults.column);\n\n            /* Convert the camel-case defaults to Hungarian */\n            _fnCamelToHungarian(defaults, defaults, true);\n            _fnCamelToHungarian(defaults.column, defaults.column, true);\n\n            /* Setting up the initialisation object */\n            _fnCamelToHungarian(defaults, $.extend(oInit, $this.data()));\n\n            /* Check to see if we are re-initialising a table */\n            var allSettings = DataTable.settings;\n            for (i = 0, iLen = allSettings.length; i < iLen; i++)\n            {\n                var s = allSettings[i];\n\n                /* Base check on table node */\n                if (s.nTable == this || s.nTHead.parentNode == this || (s.nTFoot && s.nTFoot.parentNode == this))\n                {\n                    var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n                    var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\n                    if (emptyInit || bRetrieve)\n                    {\n                        return s.oInstance;\n                    }\n                    else if (bDestroy)\n                    {\n                        s.oInstance.fnDestroy();\n                        break;\n                    }\n                    else\n                    {\n                        _fnLog(s, 0, 'Cannot reinitialise DataTable', 3);\n                        return;\n                    }\n                }\n\n                /* If the element we are initialising has the same ID as a table which was previously\n                 * initialised, but the table nodes don't match (from before) then we destroy the old\n                 * instance by simply deleting it. This is under the assumption that the table has been\n                 * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n                 */\n                if (s.sTableId == this.id)\n                {\n                    allSettings.splice(i, 1);\n                    break;\n                }\n            }\n\n            /* Ensure the table has an ID - required for accessibility */\n            if (sId === null || sId === \"\")\n            {\n                sId = \"DataTables_Table_\" + (DataTable.ext._unique++);\n                this.id = sId;\n            }\n\n            /* Create the settings object for this table and set some of the default parameters */\n            var oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n                \"sDestroyWidth\": $this[0].style.width,\n                \"sInstance\": sId,\n                \"sTableId\": sId\n            });\n            oSettings.nTable = this;\n            oSettings.oApi = _that.internal;\n            oSettings.oInit = oInit;\n\n            allSettings.push(oSettings);\n\n            // Need to add the instance after the instance after the settings object has been added\n            // to the settings array, so we can self reference the table instance if more than one\n            oSettings.oInstance = (_that.length === 1) ? _that : $this.dataTable();\n\n            // Backwards compatibility, before we apply all the defaults\n            _fnCompatOpts(oInit);\n\n            if (oInit.oLanguage)\n            {\n                _fnLanguageCompat(oInit.oLanguage);\n            }\n\n            // If the length menu is given, but the init display length is not, use the length menu\n            if (oInit.aLengthMenu && !oInit.iDisplayLength)\n            {\n                oInit.iDisplayLength = $.isArray(oInit.aLengthMenu[0]) ?\n                        oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];\n            }\n\n            // Apply the defaults and init options to make a single init object will all\n            // options defined from defaults and instance options.\n            oInit = _fnExtend($.extend(true, {}, defaults), oInit);\n\n            // Map the initialisation options onto the settings object\n            _fnMap(oSettings.oFeatures, oInit, [\n                \"bPaginate\",\n                \"bLengthChange\",\n                \"bFilter\",\n                \"bSort\",\n                \"bSortMulti\",\n                \"bInfo\",\n                \"bProcessing\",\n                \"bAutoWidth\",\n                \"bSortClasses\",\n                \"bServerSide\",\n                \"bDeferRender\"\n            ]);\n            _fnMap(oSettings, oInit, [\n                \"asStripeClasses\",\n                \"ajax\",\n                \"fnServerData\",\n                \"fnFormatNumber\",\n                \"sServerMethod\",\n                \"aaSorting\",\n                \"aaSortingFixed\",\n                \"aLengthMenu\",\n                \"sPaginationType\",\n                \"sAjaxSource\",\n                \"sAjaxDataProp\",\n                \"iStateDuration\",\n                \"sDom\",\n                \"bSortCellsTop\",\n                \"iTabIndex\",\n                \"fnStateLoadCallback\",\n                \"fnStateSaveCallback\",\n                \"renderer\",\n                \"searchDelay\",\n                \"rowId\",\n                [\"iCookieDuration\", \"iStateDuration\"], // backwards compat\n                [\"oSearch\", \"oPreviousSearch\"],\n                [\"aoSearchCols\", \"aoPreSearchCols\"],\n                [\"iDisplayLength\", \"_iDisplayLength\"],\n                [\"bJQueryUI\", \"bJUI\"]\n            ]);\n            _fnMap(oSettings.oScroll, oInit, [\n                [\"sScrollX\", \"sX\"],\n                [\"sScrollXInner\", \"sXInner\"],\n                [\"sScrollY\", \"sY\"],\n                [\"bScrollCollapse\", \"bCollapse\"]\n            ]);\n            _fnMap(oSettings.oLanguage, oInit, \"fnInfoCallback\");\n\n            /* Callback functions which are array driven */\n            _fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback, 'user');\n            _fnCallbackReg(oSettings, 'aoServerParams', oInit.fnServerParams, 'user');\n            _fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams, 'user');\n            _fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams, 'user');\n            _fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded, 'user');\n            _fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback, 'user');\n            _fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow, 'user');\n            _fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback, 'user');\n            _fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback, 'user');\n            _fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete, 'user');\n            _fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback, 'user');\n\n            oSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);\n\n            /* Browser support detection */\n            _fnBrowserDetect(oSettings);\n\n            var oClasses = oSettings.oClasses;\n\n            // @todo Remove in 1.11\n            if (oInit.bJQueryUI)\n            {\n                /* Use the JUI classes object for display. You could clone the oStdClasses object if\n                 * you want to have multiple tables with multiple independent classes\n                 */\n                $.extend(oClasses, DataTable.ext.oJUIClasses, oInit.oClasses);\n\n                if (oInit.sDom === defaults.sDom && defaults.sDom === \"lfrtip\")\n                {\n                    /* Set the DOM to use a layout suitable for jQuery UI's theming */\n                    oSettings.sDom = '<\"H\"lfr>t<\"F\"ip>';\n                }\n\n                if (!oSettings.renderer) {\n                    oSettings.renderer = 'jqueryui';\n                }\n                else if ($.isPlainObject(oSettings.renderer) && !oSettings.renderer.header) {\n                    oSettings.renderer.header = 'jqueryui';\n                }\n            }\n            else\n            {\n                $.extend(oClasses, DataTable.ext.classes, oInit.oClasses);\n            }\n            $this.addClass(oClasses.sTable);\n\n            if (oSettings.iInitDisplayStart === undefined)\n            {\n                /* Display start point, taking into account the save saving */\n                oSettings.iInitDisplayStart = oInit.iDisplayStart;\n                oSettings._iDisplayStart = oInit.iDisplayStart;\n            }\n\n            if (oInit.iDeferLoading !== null)\n            {\n                oSettings.bDeferLoading = true;\n                var tmp = $.isArray(oInit.iDeferLoading);\n                oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n                oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n            }\n\n            /* Language definitions */\n            var oLanguage = oSettings.oLanguage;\n            $.extend(true, oLanguage, oInit.oLanguage);\n\n            if (oLanguage.sUrl !== \"\")\n            {\n                /* Get the language definitions from a file - because this Ajax call makes the language\n                 * get async to the remainder of this function we use bInitHandedOff to indicate that\n                 * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n                 */\n                $.ajax({\n                    dataType: 'json',\n                    url: oLanguage.sUrl,\n                    success: function (json) {\n                        _fnLanguageCompat(json);\n                        _fnCamelToHungarian(defaults.oLanguage, json);\n                        $.extend(true, oLanguage, json);\n                        _fnInitialise(oSettings);\n                    },\n                    error: function () {\n                        // Error occurred loading language file, continue on as best we can\n                        _fnInitialise(oSettings);\n                    }\n                });\n                bInitHandedOff = true;\n            }\n\n            /*\n             * Stripes\n             */\n            if (oInit.asStripeClasses === null)\n            {\n                oSettings.asStripeClasses = [\n                    oClasses.sStripeOdd,\n                    oClasses.sStripeEven\n                ];\n            }\n\n            /* Remove row stripe classes if they are already on the table row */\n            var stripeClasses = oSettings.asStripeClasses;\n            var rowOne = $this.children('tbody').find('tr').eq(0);\n            if ($.inArray(true, $.map(stripeClasses, function (el, i) {\n                return rowOne.hasClass(el);\n            })) !== -1) {\n                $('tbody tr', this).removeClass(stripeClasses.join(' '));\n                oSettings.asDestroyStripes = stripeClasses.slice();\n            }\n\n            /*\n             * Columns\n             * See if we should load columns automatically or use defined ones\n             */\n            var anThs = [];\n            var aoColumnsInit;\n            var nThead = this.getElementsByTagName('thead');\n            if (nThead.length !== 0)\n            {\n                _fnDetectHeader(oSettings.aoHeader, nThead[0]);\n                anThs = _fnGetUniqueThs(oSettings);\n            }\n\n            /* If not given a column array, generate one with nulls */\n            if (oInit.aoColumns === null)\n            {\n                aoColumnsInit = [];\n                for (i = 0, iLen = anThs.length; i < iLen; i++)\n                {\n                    aoColumnsInit.push(null);\n                }\n            }\n            else\n            {\n                aoColumnsInit = oInit.aoColumns;\n            }\n\n            /* Add the columns */\n            for (i = 0, iLen = aoColumnsInit.length; i < iLen; i++)\n            {\n                _fnAddColumn(oSettings, anThs ? anThs[i] : null);\n            }\n\n            /* Apply the column definitions */\n            _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n                _fnColumnOptions(oSettings, iCol, oDef);\n            });\n\n            /* HTML5 attribute detection - build an mData object automatically if the\n             * attributes are found\n             */\n            if (rowOne.length) {\n                var a = function (cell, name) {\n                    return cell.getAttribute('data-' + name) !== null ? name : null;\n                };\n\n                $(rowOne[0]).children('th, td').each(function (i, cell) {\n                    var col = oSettings.aoColumns[i];\n\n                    if (col.mData === i) {\n                        var sort = a(cell, 'sort') || a(cell, 'order');\n                        var filter = a(cell, 'filter') || a(cell, 'search');\n\n                        if (sort !== null || filter !== null) {\n                            col.mData = {\n                                _: i + '.display',\n                                sort: sort !== null ? i + '.@data-' + sort : undefined,\n                                type: sort !== null ? i + '.@data-' + sort : undefined,\n                                filter: filter !== null ? i + '.@data-' + filter : undefined\n                            };\n\n                            _fnColumnOptions(oSettings, i);\n                        }\n                    }\n                });\n            }\n\n            var features = oSettings.oFeatures;\n            var loadedInit = function () {\n                /*\n                 * Sorting\n                 * @todo For modularisation (1.11) this needs to do into a sort start up handler\n                 */\n\n                // If aaSorting is not defined, then we use the first indicator in asSorting\n                // in case that has been altered, so the default sort reflects that option\n                if (oInit.aaSorting === undefined) {\n                    var sorting = oSettings.aaSorting;\n                    for (i = 0, iLen = sorting.length; i < iLen; i++) {\n                        sorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n                    }\n                }\n\n                /* Do a first pass on the sorting classes (allows any size changes to be taken into\n                 * account, and also will apply sorting disabled classes if disabled\n                 */\n                _fnSortingClasses(oSettings);\n\n                if (features.bSort) {\n                    _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n                        if (oSettings.bSorted) {\n                            var aSort = _fnSortFlatten(oSettings);\n                            var sortedColumns = {};\n\n                            $.each(aSort, function (i, val) {\n                                sortedColumns[ val.src ] = val.dir;\n                            });\n\n                            _fnCallbackFire(oSettings, null, 'order', [oSettings, aSort, sortedColumns]);\n                            _fnSortAria(oSettings);\n                        }\n                    });\n                }\n\n                _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n                    if (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {\n                        _fnSortingClasses(oSettings);\n                    }\n                }, 'sc');\n\n                /*\n                 * Final init\n                 * Cache the header, body and footer as required, creating them if needed\n                 */\n\n                // Work around for Webkit bug 83867 - store the caption-side before removing from doc\n                var captions = $this.children('caption').each(function () {\n                    this._captionSide = $(this).css('caption-side');\n                });\n\n                var thead = $this.children('thead');\n                if (thead.length === 0) {\n                    thead = $('<thead/>').appendTo($this);\n                }\n                oSettings.nTHead = thead[0];\n\n                var tbody = $this.children('tbody');\n                if (tbody.length === 0) {\n                    tbody = $('<tbody/>').appendTo($this);\n                }\n                oSettings.nTBody = tbody[0];\n\n                var tfoot = $this.children('tfoot');\n                if (tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\")) {\n                    // If we are a scrolling table, and no footer has been given, then we need to create\n                    // a tfoot element for the caption element to be appended to\n                    tfoot = $('<tfoot/>').appendTo($this);\n                }\n\n                if (tfoot.length === 0 || tfoot.children().length === 0) {\n                    $this.addClass(oClasses.sNoFooter);\n                }\n                else if (tfoot.length > 0) {\n                    oSettings.nTFoot = tfoot[0];\n                    _fnDetectHeader(oSettings.aoFooter, oSettings.nTFoot);\n                }\n\n                /* Check if there is data passing into the constructor */\n                if (oInit.aaData) {\n                    for (i = 0; i < oInit.aaData.length; i++) {\n                        _fnAddData(oSettings, oInit.aaData[ i ]);\n                    }\n                }\n                else if (oSettings.bDeferLoading || _fnDataSource(oSettings) == 'dom') {\n                    /* Grab the data from the page - only do this when deferred loading or no Ajax\n                     * source since there is no point in reading the DOM data if we are then going\n                     * to replace it with Ajax data\n                     */\n                    _fnAddTr(oSettings, $(oSettings.nTBody).children('tr'));\n                }\n\n                /* Copy the data index array */\n                oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\n                /* Initialisation complete - table can be drawn */\n                oSettings.bInitialised = true;\n\n                /* Check if we need to initialise the table (it might not have been handed off to the\n                 * language processor)\n                 */\n                if (bInitHandedOff === false) {\n                    _fnInitialise(oSettings);\n                }\n            };\n\n            /* Must be done after everything which can be overridden by the state saving! */\n            if (oInit.bStateSave)\n            {\n                features.bStateSave = true;\n                _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState, 'state_save');\n                _fnLoadState(oSettings, oInit, loadedInit);\n            }\n            else {\n                loadedInit();\n            }\n\n        });\n        _that = null;\n        return this;\n    };\n\n    /*\n     * It is useful to have variables which are scoped locally so only the\n     * DataTables functions can access them and they don't leak into global space.\n     * At the same time these functions are often useful over multiple files in the\n     * core and API, so we list, or at least document, all variables which are used\n     * by DataTables as private variables here. This also ensures that there is no\n     * clashing of variable names and that they can easily referenced for reuse.\n     */\n\n    // Defined else where\n    //  _selector_run\n    //  _selector_opts\n    //  _selector_first\n    //  _selector_row_indexes\n\n    var _ext; // DataTable.ext\n    var _Api; // DataTable.Api\n    var _api_register; // DataTable.Api.register\n    var _api_registerPlural; // DataTable.Api.registerPlural\n\n    var _re_dic = {};\n    var _re_new_lines = /[\\r\\n]/g;\n    var _re_html = /<.*?>/g;\n    var _re_date_start = /^[\\w\\+\\-]/;\n    var _re_date_end = /[\\w\\+\\-]$/;\n\n    // Escape regular expression special characters\n    var _re_escape_regex = new RegExp('(\\\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-'].join('|\\\\') + ')', 'g');\n\n    // http://en.wikipedia.org/wiki/Foreign_exchange_market\n    // - \\u20BD - Russian ruble.\n    // - \\u20a9 - South Korean Won\n    // - \\u20BA - Turkish Lira\n    // - \\u20B9 - Indian Rupee\n    // - R - Brazil (R$) and South Africa\n    // - fr - Swiss Franc\n    // - kr - Swedish krona, Norwegian krone and Danish krone\n    // - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n    //   standards as thousands separators.\n    var _re_formatted_numeric = /[',$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfk]/gi;\n\n    var _empty = function (d) {\n        return !d || d === true || d === '-' ? true : false;\n    };\n\n    var _intVal = function (s) {\n        var integer = parseInt(s, 10);\n        return !isNaN(integer) && isFinite(s) ? integer : null;\n    };\n\n    // Convert from a formatted number with characters other than `.` as the\n    // decimal place, to a Javascript number\n    var _numToDecimal = function (num, decimalPoint) {\n        // Cache created regular expressions for speed as this function is called often\n        if (!_re_dic[ decimalPoint ]) {\n            _re_dic[ decimalPoint ] = new RegExp(_fnEscapeRegex(decimalPoint), 'g');\n        }\n        return typeof num === 'string' && decimalPoint !== '.' ?\n                num.replace(/\\./g, '').replace(_re_dic[ decimalPoint ], '.') :\n                num;\n    };\n\n    var _isNumber = function (d, decimalPoint, formatted) {\n        var strType = typeof d === 'string';\n\n        // If empty return immediately so there must be a number if it is a\n        // formatted string (this stops the string \"k\", or \"kr\", etc being detected\n        // as a formatted number for currency\n        if (_empty(d)) {\n            return true;\n        }\n\n        if (decimalPoint && strType) {\n            d = _numToDecimal(d, decimalPoint);\n        }\n\n        if (formatted && strType) {\n            d = d.replace(_re_formatted_numeric, '');\n        }\n\n        return !isNaN(parseFloat(d)) && isFinite(d);\n    };\n\n    // A string without HTML in it can be considered to be HTML still\n    var _isHtml = function (d) {\n        return _empty(d) || typeof d === 'string';\n    };\n\n    var _htmlNumeric = function (d, decimalPoint, formatted) {\n        if (_empty(d)) {\n            return true;\n        }\n\n        var html = _isHtml(d);\n        return !html ?\n                null :\n                _isNumber(_stripHtml(d), decimalPoint, formatted) ?\n                true :\n                null;\n    };\n\n    var _pluck = function (a, prop, prop2) {\n        var out = [];\n        var i = 0, ien = a.length;\n\n        // Could have the test in the loop for slightly smaller code, but speed\n        // is essential here\n        if (prop2 !== undefined) {\n            for (; i < ien; i++) {\n                if (a[i] && a[i][ prop ]) {\n                    out.push(a[i][ prop ][ prop2 ]);\n                }\n            }\n        }\n        else {\n            for (; i < ien; i++) {\n                if (a[i]) {\n                    out.push(a[i][ prop ]);\n                }\n            }\n        }\n\n        return out;\n    };\n\n    // Basically the same as _pluck, but rather than looping over `a` we use `order`\n    // as the indexes to pick from `a`\n    var _pluck_order = function (a, order, prop, prop2)\n    {\n        var out = [];\n        var i = 0, ien = order.length;\n\n        // Could have the test in the loop for slightly smaller code, but speed\n        // is essential here\n        if (prop2 !== undefined) {\n            for (; i < ien; i++) {\n                if (a[ order[i] ][ prop ]) {\n                    out.push(a[ order[i] ][ prop ][ prop2 ]);\n                }\n            }\n        }\n        else {\n            for (; i < ien; i++) {\n                out.push(a[ order[i] ][ prop ]);\n            }\n        }\n\n        return out;\n    };\n\n    var _range = function (len, start)\n    {\n        var out = [];\n        var end;\n\n        if (start === undefined) {\n            start = 0;\n            end = len;\n        }\n        else {\n            end = start;\n            start = len;\n        }\n\n        for (var i = start; i < end; i++) {\n            out.push(i);\n        }\n\n        return out;\n    };\n\n    var _removeEmpty = function (a)\n    {\n        var out = [];\n\n        for (var i = 0, ien = a.length; i < ien; i++) {\n            if (a[i]) { // careful - will remove all falsy values!\n                out.push(a[i]);\n            }\n        }\n\n        return out;\n    };\n\n    var _stripHtml = function (d) {\n        return d.replace(_re_html, '');\n    };\n\n    /**\n     * Find the unique elements in a source array.\n     *\n     * @param  {array} src Source array\n     * @return {array} Array of unique items\n     * @ignore\n     */\n    var _unique = function (src)\n    {\n        // A faster unique method is to use object keys to identify used values,\n        // but this doesn't work with arrays or objects, which we must also\n        // consider. See jsperf.com/compare-array-unique-versions/4 for more\n        // information.\n        var\n                out = [],\n                val,\n                i, ien = src.length,\n                j, k = 0;\n\n        again: for (i = 0; i < ien; i++) {\n            val = src[i];\n\n            for (j = 0; j < k; j++) {\n                if (out[j] === val) {\n                    continue again;\n                }\n            }\n\n            out.push(val);\n            k++;\n        }\n\n        return out;\n    };\n\n    /**\n     * DataTables utility methods\n     * \n     * This namespace provides helper methods that DataTables uses internally to\n     * create a DataTable, but which are not exclusively used only for DataTables.\n     * These methods can be used by extension authors to save the duplication of\n     * code.\n     *\n     *  @namespace\n     */\n    DataTable.util = {\n        /**\n         * Throttle the calls to a function. Arguments and context are maintained\n         * for the throttled function.\n         *\n         * @param {function} fn Function to be called\n         * @param {integer} freq Call frequency in mS\n         * @return {function} Wrapped function\n         */\n        throttle: function (fn, freq) {\n            var\n                    frequency = freq !== undefined ? freq : 200,\n                    last,\n                    timer;\n\n            return function () {\n                var\n                        that = this,\n                        now = +new Date(),\n                        args = arguments;\n\n                if (last && now < last + frequency) {\n                    clearTimeout(timer);\n\n                    timer = setTimeout(function () {\n                        last = undefined;\n                        fn.apply(that, args);\n                    }, frequency);\n                }\n                else {\n                    last = now;\n                    fn.apply(that, args);\n                }\n            };\n       },\n        /**\n         * Escape a string such that it can be used in a regular expression\n         *\n         *  @param {string} val string to escape\n         *  @returns {string} escaped string\n         */\n        escapeRegex: function (val) {\n            return val.replace(_re_escape_regex, '\\\\$1');\n        }\n    };\n\n    /**\n     * Create a mapping object that allows camel case parameters to be looked up\n     * for their Hungarian counterparts. The mapping is stored in a private\n     * parameter called `_hungarianMap` which can be accessed on the source object.\n     *  @param {object} o\n     *  @memberof DataTable#oApi\n     */\n    function _fnHungarianMap(o)\n    {\n        var\n                hungarian = 'a aa ai ao as b fn i m o s ',\n                match,\n                newKey,\n                map = {};\n\n        $.each(o, function (key, val) {\n            match = key.match(/^([^A-Z]+?)([A-Z])/);\n\n            if (match && hungarian.indexOf(match[1] + ' ') !== -1)\n            {\n                newKey = key.replace(match[0], match[2].toLowerCase());\n                map[ newKey ] = key;\n\n                if (match[1] === 'o')\n                {\n                    _fnHungarianMap(o[key]);\n                }\n            }\n        });\n\n        o._hungarianMap = map;\n    }\n\n    /**\n     * Convert from camel case parameters to Hungarian, based on a Hungarian map\n     * created by _fnHungarianMap.\n     *  @param {object} src The model object which holds all parameters that can be\n     *    mapped.\n     *  @param {object} user The object to convert from camel case to Hungarian.\n     *  @param {boolean} force When set to `true`, properties which already have a\n     *    Hungarian value in the `user` object will be overwritten. Otherwise they\n     *    won't be.\n     *  @memberof DataTable#oApi\n     */\n    function _fnCamelToHungarian(src, user, force)\n    {\n        if (!src._hungarianMap) {\n            _fnHungarianMap(src);\n        }\n\n        var hungarianKey;\n\n        $.each(user, function (key, val) {\n            hungarianKey = src._hungarianMap[ key ];\n\n            if (hungarianKey !== undefined && (force || user[hungarianKey] === undefined))\n            {\n                // For objects, we need to buzz down into the object to copy parameters\n                if (hungarianKey.charAt(0) === 'o')\n                {\n                    // Copy the camelCase options over to the hungarian\n                    if (!user[ hungarianKey ]) {\n                        user[ hungarianKey ] = {};\n                    }\n                    $.extend(true, user[hungarianKey], user[key]);\n\n                    _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);\n                }\n                else {\n                    user[hungarianKey] = user[ key ];\n                }\n            }\n        });\n    }\n\n    /**\n     * Language compatibility - when certain options are given, and others aren't, we\n     * need to duplicate the values over, in order to provide backwards compatibility\n     * with older language files.\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnLanguageCompat(lang)\n    {\n        var defaults = DataTable.defaults.oLanguage;\n        var zeroRecords = lang.sZeroRecords;\n\n        /* Backwards compatibility - if there is no sEmptyTable given, then use the same as\n         * sZeroRecords - assuming that is given.\n         */\n        if (!lang.sEmptyTable && zeroRecords &&\n                defaults.sEmptyTable === \"No data available in table\")\n        {\n            _fnMap(lang, lang, 'sZeroRecords', 'sEmptyTable');\n        }\n\n        /* Likewise with loading records */\n        if (!lang.sLoadingRecords && zeroRecords &&\n                defaults.sLoadingRecords === \"Loading...\")\n        {\n            _fnMap(lang, lang, 'sZeroRecords', 'sLoadingRecords');\n        }\n\n        // Old parameter name of the thousands separator mapped onto the new\n        if (lang.sInfoThousands) {\n            lang.sThousands = lang.sInfoThousands;\n        }\n\n        var decimal = lang.sDecimal;\n        if (decimal) {\n            _addNumericSort(decimal);\n        }\n    }\n\n    /**\n     * Map one parameter onto another\n     *  @param {object} o Object to map\n     *  @param {*} knew The new parameter name\n     *  @param {*} old The old parameter name\n     */\n    var _fnCompatMap = function (o, knew, old) {\n        if (o[ knew ] !== undefined) {\n            o[ old ] = o[ knew ];\n        }\n    };\n\n    /**\n     * Provide backwards compatibility for the main DT options. Note that the new\n     * options are mapped onto the old parameters, so this is an external interface\n     * change only.\n     *  @param {object} init Object to map\n     */\n    function _fnCompatOpts(init)\n    {\n        _fnCompatMap(init, 'ordering', 'bSort');\n        _fnCompatMap(init, 'orderMulti', 'bSortMulti');\n        _fnCompatMap(init, 'orderClasses', 'bSortClasses');\n        _fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop');\n        _fnCompatMap(init, 'order', 'aaSorting');\n        _fnCompatMap(init, 'orderFixed', 'aaSortingFixed');\n        _fnCompatMap(init, 'paging', 'bPaginate');\n        _fnCompatMap(init, 'pagingType', 'sPaginationType');\n        _fnCompatMap(init, 'pageLength', 'iDisplayLength');\n        _fnCompatMap(init, 'searching', 'bFilter');\n\n        // Boolean initialisation of x-scrolling\n        if (typeof init.sScrollX === 'boolean') {\n            init.sScrollX = init.sScrollX ? '100%' : '';\n        }\n        if (typeof init.scrollX === 'boolean') {\n            init.scrollX = init.scrollX ? '100%' : '';\n        }\n\n        // Column search objects are in an array, so it needs to be converted\n        // element by element\n        var searchCols = init.aoSearchCols;\n\n        if (searchCols) {\n            for (var i = 0, ien = searchCols.length; i < ien; i++) {\n                if (searchCols[i]) {\n                    _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Provide backwards compatibility for column options. Note that the new options\n     * are mapped onto the old parameters, so this is an external interface change\n     * only.\n     *  @param {object} init Object to map\n     */\n    function _fnCompatCols(init)\n    {\n        _fnCompatMap(init, 'orderable', 'bSortable');\n        _fnCompatMap(init, 'orderData', 'aDataSort');\n        _fnCompatMap(init, 'orderSequence', 'asSorting');\n        _fnCompatMap(init, 'orderDataType', 'sortDataType');\n\n        // orderData can be given as an integer\n        var dataSort = init.aDataSort;\n        if (dataSort && !$.isArray(dataSort)) {\n            init.aDataSort = [dataSort];\n        }\n    }\n\n    /**\n     * Browser feature detection for capabilities, quirks\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnBrowserDetect(settings)\n    {\n        // We don't need to do this every time DataTables is constructed, the values\n        // calculated are specific to the browser and OS configuration which we\n        // don't expect to change between initialisations\n        if (!DataTable.__browser) {\n            var browser = {};\n            DataTable.__browser = browser;\n\n            // Scrolling feature / quirks detection\n            var n = $('<div/>')\n                    .css({\n                        position: 'fixed',\n                        top: 0,\n                        left: $(window).scrollLeft() * -1, // allow for scrolling\n                        height: 1,\n                        width: 1,\n                        overflow: 'hidden'\n                    })\n                    .append(\n                            $('<div/>')\n                            .css({\n                                position: 'absolute',\n                                top: 1,\n                                left: 1,\n                                width: 100,\n                                overflow: 'scroll'\n                            })\n                            .append(\n                                    $('<div/>')\n                                    .css({\n                                        width: '100%',\n                                        height: 10\n                                    })\n                                    )\n                            )\n                    .appendTo('body');\n\n            var outer = n.children();\n            var inner = outer.children();\n\n            // Numbers below, in order, are:\n            // inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth\n            //\n            // IE6 XP:                           100 100 100  83\n            // IE7 Vista:                        100 100 100  83\n            // IE 8+ Windows:                     83  83 100  83\n            // Evergreen Windows:                 83  83 100  83\n            // Evergreen Mac with scrollbars:     85  85 100  85\n            // Evergreen Mac without scrollbars: 100 100 100 100\n\n            // Get scrollbar width\n            browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n            // IE6/7 will oversize a width 100% element inside a scrolling element, to\n            // include the width of the scrollbar, while other browsers ensure the inner\n            // element is contained without forcing scrolling\n            browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;\n\n            // In rtl text layout, some browsers (most, but not all) will place the\n            // scrollbar on the left, rather than the right.\n            browser.bScrollbarLeft = Math.round(inner.offset().left) !== 1;\n\n            // IE8- don't provide height and width for getBoundingClientRect\n            browser.bBounding = n[0].getBoundingClientRect().width ? true : false;\n\n            n.remove();\n        }\n\n        $.extend(settings.oBrowser, DataTable.__browser);\n        settings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n    }\n\n    /**\n     * Array.prototype reduce[Right] method, used for browsers which don't support\n     * JS 1.6. Done this way to reduce code size, since we iterate either way\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnReduce(that, fn, init, start, end, inc)\n    {\n        var\n                i = start,\n                value,\n                isSet = false;\n\n        if (init !== undefined) {\n            value = init;\n            isSet = true;\n        }\n\n        while (i !== end) {\n            if (!that.hasOwnProperty(i)) {\n                continue;\n            }\n\n            value = isSet ?\n                    fn(value, that[i], i, that) :\n                    that[i];\n\n            isSet = true;\n            i += inc;\n        }\n\n        return value;\n    }\n\n    /**\n     * Add a column to the list used for the table with default values\n     *  @param {object} oSettings dataTables settings object\n     *  @param {node} nTh The th element for this column\n     *  @memberof DataTable#oApi\n     */\n    function _fnAddColumn(oSettings, nTh)\n    {\n        // Add column to aoColumns array\n        var oDefaults = DataTable.defaults.column;\n        var iCol = oSettings.aoColumns.length;\n        var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n            \"nTh\": nTh ? nTh : document.createElement('th'),\n            \"sTitle\": oDefaults.sTitle ? oDefaults.sTitle : nTh ? nTh.innerHTML : '',\n            \"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n            \"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n            idx: iCol\n        });\n        oSettings.aoColumns.push(oCol);\n\n        // Add search object for column specific search. Note that the `searchCols[ iCol ]`\n        // passed into extend can be undefined. This allows the user to give a default\n        // with only some of the parameters defined, and also not give a default\n        var searchCols = oSettings.aoPreSearchCols;\n        searchCols[ iCol ] = $.extend({}, DataTable.models.oSearch, searchCols[ iCol ]);\n\n        // Use the default column options function to initialise classes etc\n        _fnColumnOptions(oSettings, iCol, $(nTh).data());\n    }\n\n    /**\n     * Apply options for a column\n     *  @param {object} oSettings dataTables settings object\n     *  @param {int} iCol column index to consider\n     *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n     *  @memberof DataTable#oApi\n     */\n    function _fnColumnOptions(oSettings, iCol, oOptions)\n    {\n        var oCol = oSettings.aoColumns[ iCol ];\n        var oClasses = oSettings.oClasses;\n        var th = $(oCol.nTh);\n\n        // Try to get width information from the DOM. We can't get it from CSS\n        // as we'd need to parse the CSS stylesheet. `width` option can override\n        if (!oCol.sWidthOrig) {\n            // Width attribute\n            oCol.sWidthOrig = th.attr('width') || null;\n\n            // Style attribute\n            var t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);\n            if (t) {\n                oCol.sWidthOrig = t[1];\n            }\n        }\n\n        /* User specified column options */\n        if (oOptions !== undefined && oOptions !== null)\n        {\n            // Backwards compatibility\n            _fnCompatCols(oOptions);\n\n            // Map camel case parameters to their Hungarian counterparts\n            _fnCamelToHungarian(DataTable.defaults.column, oOptions);\n\n            /* Backwards compatibility for mDataProp */\n            if (oOptions.mDataProp !== undefined && !oOptions.mData)\n            {\n                oOptions.mData = oOptions.mDataProp;\n            }\n\n            if (oOptions.sType)\n            {\n                oCol._sManualType = oOptions.sType;\n            }\n\n            // `class` is a reserved word in Javascript, so we need to provide\n            // the ability to use a valid name for the camel case input\n            if (oOptions.className && !oOptions.sClass)\n            {\n                oOptions.sClass = oOptions.className;\n            }\n\n            $.extend(oCol, oOptions);\n            _fnMap(oCol, oOptions, \"sWidth\", \"sWidthOrig\");\n\n            /* iDataSort to be applied (backwards compatibility), but aDataSort will take\n             * priority if defined\n             */\n            if (oOptions.iDataSort !== undefined)\n            {\n                oCol.aDataSort = [oOptions.iDataSort];\n            }\n            _fnMap(oCol, oOptions, \"aDataSort\");\n        }\n\n        /* Cache the data get and set functions for speed */\n        var mDataSrc = oCol.mData;\n        var mData = _fnGetObjectDataFn(mDataSrc);\n        var mRender = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;\n\n        var attrTest = function (src) {\n            return typeof src === 'string' && src.indexOf('@') !== -1;\n        };\n        oCol._bAttrSrc = $.isPlainObject(mDataSrc) && (\n                attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n                );\n        oCol._setter = null;\n\n        oCol.fnGetData = function (rowData, type, meta) {\n            var innerData = mData(rowData, type, undefined, meta);\n\n            return mRender && type ?\n                    mRender(innerData, type, rowData, meta) :\n                    innerData;\n        };\n        oCol.fnSetData = function (rowData, val, meta) {\n            return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);\n        };\n\n        // Indicate if DataTables should read DOM data as an object or array\n        // Used in _fnGetRowElements\n        if (typeof mDataSrc !== 'number') {\n            oSettings._rowReadObject = true;\n        }\n\n        /* Feature sorting overrides column specific when off */\n        if (!oSettings.oFeatures.bSort)\n        {\n            oCol.bSortable = false;\n            th.addClass(oClasses.sSortableNone); // Have to add class here as order event isn't called\n        }\n\n        /* Check that the class assignment is correct for sorting */\n        var bAsc = $.inArray('asc', oCol.asSorting) !== -1;\n        var bDesc = $.inArray('desc', oCol.asSorting) !== -1;\n        if (!oCol.bSortable || (!bAsc && !bDesc))\n        {\n            oCol.sSortingClass = oClasses.sSortableNone;\n            oCol.sSortingClassJUI = \"\";\n        }\n        else if (bAsc && !bDesc)\n        {\n            oCol.sSortingClass = oClasses.sSortableAsc;\n            oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;\n        }\n        else if (!bAsc && bDesc)\n        {\n            oCol.sSortingClass = oClasses.sSortableDesc;\n            oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;\n        }\n        else\n        {\n            oCol.sSortingClass = oClasses.sSortable;\n            oCol.sSortingClassJUI = oClasses.sSortJUI;\n        }\n    }\n\n    /**\n     * Adjust the table column widths for new data. Note: you would probably want to\n     * do a redraw after calling this function!\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnAdjustColumnSizing(settings)\n    {\n        /* Not interested in doing column width calculation if auto-width is disabled */\n        if (settings.oFeatures.bAutoWidth !== false)\n        {\n            var columns = settings.aoColumns;\n\n            _fnCalculateColumnWidths(settings);\n            for (var i = 0, iLen = columns.length; i < iLen; i++)\n            {\n                columns[i].nTh.style.width = columns[i].sWidth;\n            }\n        }\n\n        var scroll = settings.oScroll;\n        if (scroll.sY !== '' || scroll.sX !== '')\n        {\n            _fnScrollDraw(settings);\n        }\n\n        _fnCallbackFire(settings, null, 'column-sizing', [settings]);\n    }\n\n    /**\n     * Covert the index of a visible column to the index in the data array (take account\n     * of hidden columns)\n     *  @param {object} oSettings dataTables settings object\n     *  @param {int} iMatch Visible column index to lookup\n     *  @returns {int} i the data index\n     *  @memberof DataTable#oApi\n     */\n    function _fnVisibleToColumnIndex(oSettings, iMatch)\n    {\n        var aiVis = _fnGetColumns(oSettings, 'bVisible');\n\n        return typeof aiVis[iMatch] === 'number' ?\n                aiVis[iMatch] :\n                null;\n    }\n\n    /**\n     * Covert the index of an index in the data array and convert it to the visible\n     *   column index (take account of hidden columns)\n     *  @param {int} iMatch Column index to lookup\n     *  @param {object} oSettings dataTables settings object\n     *  @returns {int} i the data index\n     *  @memberof DataTable#oApi\n     */\n    function _fnColumnIndexToVisible(oSettings, iMatch)\n    {\n        var aiVis = _fnGetColumns(oSettings, 'bVisible');\n        var iPos = $.inArray(iMatch, aiVis);\n\n        return iPos !== -1 ? iPos : null;\n    }\n\n    /**\n     * Get the number of visible columns\n     *  @param {object} oSettings dataTables settings object\n     *  @returns {int} i the number of visible columns\n     *  @memberof DataTable#oApi\n     */\n    function _fnVisbleColumns(oSettings)\n    {\n        var vis = 0;\n\n        // No reduce in IE8, use a loop for now\n        $.each(oSettings.aoColumns, function (i, col) {\n            if (col.bVisible && $(col.nTh).css('display') !== 'none') {\n                vis++;\n            }\n        });\n\n        return vis;\n    }\n\n    /**\n     * Get an array of column indexes that match a given property\n     *  @param {object} oSettings dataTables settings object\n     *  @param {string} sParam Parameter in aoColumns to look for - typically\n     *    bVisible or bSearchable\n     *  @returns {array} Array of indexes with matched properties\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetColumns(oSettings, sParam)\n    {\n        var a = [];\n\n        $.map(oSettings.aoColumns, function (val, i) {\n            if (val[sParam]) {\n                a.push(i);\n            }\n        });\n\n        return a;\n    }\n\n    /**\n     * Calculate the 'type' of a column\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnColumnTypes(settings)\n    {\n        var columns = settings.aoColumns;\n        var data = settings.aoData;\n        var types = DataTable.ext.type.detect;\n        var i, ien, j, jen, k, ken;\n        var col, cell, detectedType, cache;\n\n        // For each column, spin over the \n        for (i = 0, ien = columns.length; i < ien; i++) {\n            col = columns[i];\n            cache = [];\n\n            if (!col.sType && col._sManualType) {\n                col.sType = col._sManualType;\n            }\n            else if (!col.sType) {\n                for (j = 0, jen = types.length; j < jen; j++) {\n                    for (k = 0, ken = data.length; k < ken; k++) {\n                        // Use a cache array so we only need to get the type data\n                        // from the formatter once (when using multiple detectors)\n                        if (cache[k] === undefined) {\n                            cache[k] = _fnGetCellData(settings, k, i, 'type');\n                        }\n\n                        detectedType = types[j](cache[k], settings);\n\n                        // If null, then this type can't apply to this column, so\n                        // rather than testing all cells, break out. There is an\n                        // exception for the last type which is `html`. We need to\n                        // scan all rows since it is possible to mix string and HTML\n                        // types\n                        if (!detectedType && j !== types.length - 1) {\n                            break;\n                        }\n\n                        // Only a single match is needed for html type since it is\n                        // bottom of the pile and very similar to string\n                        if (detectedType === 'html') {\n                            break;\n                        }\n                    }\n\n                    // Type is valid for all data points in the column - use this\n                    // type\n                    if (detectedType) {\n                        col.sType = detectedType;\n                        break;\n                    }\n                }\n\n                // Fall back - if no type was detected, always use string\n                if (!col.sType) {\n                    col.sType = 'string';\n                }\n            }\n        }\n    }\n\n    /**\n     * Take the column definitions and static columns arrays and calculate how\n     * they relate to column indexes. The callback function will then apply the\n     * definition found for a column to a suitable configuration object.\n     *  @param {object} oSettings dataTables settings object\n     *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n     *  @param {array} aoCols The aoColumns array that defines columns individually\n     *  @param {function} fn Callback function - takes two parameters, the calculated\n     *    column index and the definition for that column.\n     *  @memberof DataTable#oApi\n     */\n    function _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, fn)\n    {\n        var i, iLen, j, jLen, k, kLen, def;\n        var columns = oSettings.aoColumns;\n\n        // Column definitions with aTargets\n        if (aoColDefs)\n        {\n            /* Loop over the definitions array - loop in reverse so first instance has priority */\n            for (i = aoColDefs.length - 1; i >= 0; i--)\n            {\n                def = aoColDefs[i];\n\n                /* Each definition can target multiple columns, as it is an array */\n                var aTargets = def.targets !== undefined ?\n                        def.targets :\n                        def.aTargets;\n\n                if (!$.isArray(aTargets))\n                {\n                    aTargets = [aTargets];\n                }\n\n                for (j = 0, jLen = aTargets.length; j < jLen; j++)\n                {\n                    if (typeof aTargets[j] === 'number' && aTargets[j] >= 0)\n                    {\n                        /* Add columns that we don't yet know about */\n                        while (columns.length <= aTargets[j])\n                        {\n                            _fnAddColumn(oSettings);\n                        }\n\n                        /* Integer, basic index */\n                        fn(aTargets[j], def);\n                    }\n                    else if (typeof aTargets[j] === 'number' && aTargets[j] < 0)\n                    {\n                        /* Negative integer, right to left column counting */\n                        fn(columns.length + aTargets[j], def);\n                    }\n                    else if (typeof aTargets[j] === 'string')\n                    {\n                        /* Class name matching on TH element */\n                        for (k = 0, kLen = columns.length; k < kLen; k++)\n                        {\n                            if (aTargets[j] == \"_all\" ||\n                                    $(columns[k].nTh).hasClass(aTargets[j]))\n                            {\n                                fn(k, def);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // Statically defined columns array\n        if (aoCols)\n        {\n            for (i = 0, iLen = aoCols.length; i < iLen; i++)\n            {\n                fn(i, aoCols[i]);\n            }\n        }\n    }\n\n    /**\n     * Add a data array to the table, creating DOM node etc. This is the parallel to\n     * _fnGatherData, but for adding rows from a Javascript source, rather than a\n     * DOM source.\n     *  @param {object} oSettings dataTables settings object\n     *  @param {array} aData data array to be added\n     *  @param {node} [nTr] TR element to add to the table - optional. If not given,\n     *    DataTables will create a row automatically\n     *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n     *    if nTr is.\n     *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n     *  @memberof DataTable#oApi\n     */\n    function _fnAddData(oSettings, aDataIn, nTr, anTds)\n    {\n        /* Create the object for storing information about this new row */\n        var iRow = oSettings.aoData.length;\n        var oData = $.extend(true, {}, DataTable.models.oRow, {\n            src: nTr ? 'dom' : 'data',\n            idx: iRow\n        });\n\n        oData._aData = aDataIn;\n        oSettings.aoData.push(oData);\n\n        /* Create the cells */\n        var nTd, sThisType;\n        var columns = oSettings.aoColumns;\n\n        // Invalidate the column types as the new data needs to be revalidated\n        for (var i = 0, iLen = columns.length; i < iLen; i++)\n        {\n            columns[i].sType = null;\n        }\n\n        /* Add to the display array */\n        oSettings.aiDisplayMaster.push(iRow);\n\n        var id = oSettings.rowIdFn(aDataIn);\n        if (id !== undefined) {\n            oSettings.aIds[ id ] = oData;\n        }\n\n        /* Create the DOM information, or register it if already present */\n        if (nTr || !oSettings.oFeatures.bDeferRender)\n        {\n            _fnCreateTr(oSettings, iRow, nTr, anTds);\n        }\n\n        return iRow;\n    }\n\n    /**\n     * Add one or more TR elements to the table. Generally we'd expect to\n     * use this for reading data from a DOM sourced table, but it could be\n     * used for an TR element. Note that if a TR is given, it is used (i.e.\n     * it is not cloned).\n     *  @param {object} settings dataTables settings object\n     *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n     *  @returns {array} Array of indexes for the added rows\n     *  @memberof DataTable#oApi\n     */\n    function _fnAddTr(settings, trs)\n    {\n        var row;\n\n        // Allow an individual node to be passed in\n        if (!(trs instanceof $)) {\n            trs = $(trs);\n        }\n\n        return trs.map(function (i, el) {\n            row = _fnGetRowElements(settings, el);\n            return _fnAddData(settings, row.data, el, row.cells);\n        });\n    }\n\n    /**\n     * Take a TR element and convert it to an index in aoData\n     *  @param {object} oSettings dataTables settings object\n     *  @param {node} n the TR element to find\n     *  @returns {int} index if the node is found, null if not\n     *  @memberof DataTable#oApi\n     */\n    function _fnNodeToDataIndex(oSettings, n)\n    {\n        return (n._DT_RowIndex !== undefined) ? n._DT_RowIndex : null;\n    }\n\n    /**\n     * Take a TD element and convert it into a column data index (not the visible index)\n     *  @param {object} oSettings dataTables settings object\n     *  @param {int} iRow The row number the TD/TH can be found in\n     *  @param {node} n The TD/TH element to find\n     *  @returns {int} index if the node is found, -1 if not\n     *  @memberof DataTable#oApi\n     */\n    function _fnNodeToColumnIndex(oSettings, iRow, n)\n    {\n        return $.inArray(n, oSettings.aoData[ iRow ].anCells);\n    }\n\n    /**\n     * Get the data for a given cell from the internal cache, taking into account data mapping\n     *  @param {object} settings dataTables settings object\n     *  @param {int} rowIdx aoData row id\n     *  @param {int} colIdx Column index\n     *  @param {string} type data get type ('display', 'type' 'filter' 'sort')\n     *  @returns {*} Cell data\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetCellData(settings, rowIdx, colIdx, type)\n    {\n        var draw = settings.iDraw;\n        var col = settings.aoColumns[colIdx];\n        var rowData = settings.aoData[rowIdx]._aData;\n        var defaultContent = col.sDefaultContent;\n        var cellData = col.fnGetData(rowData, type, {\n            settings: settings,\n            row: rowIdx,\n            col: colIdx\n        });\n\n        if (cellData === undefined) {\n            if (settings.iDrawError != draw && defaultContent === null) {\n                _fnLog(settings, 0, \"Requested unknown parameter \" +\n                        (typeof col.mData == 'function' ? '{function}' : \"'\" + col.mData + \"'\") +\n                        \" for row \" + rowIdx + \", column \" + colIdx, 4);\n                settings.iDrawError = draw;\n            }\n            return defaultContent;\n        }\n\n        // When the data source is null and a specific data type is requested (i.e.\n        // not the original data), we can use default column data\n        if ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined) {\n            cellData = defaultContent;\n        }\n        else if (typeof cellData === 'function') {\n            // If the data source is a function, then we run it and use the return,\n            // executing in the scope of the data object (for instances)\n            return cellData.call(rowData);\n        }\n\n        if (cellData === null && type == 'display') {\n            return '';\n        }\n        return cellData;\n    }\n\n    /**\n     * Set the value for a specific cell, into the internal data cache\n     *  @param {object} settings dataTables settings object\n     *  @param {int} rowIdx aoData row id\n     *  @param {int} colIdx Column index\n     *  @param {*} val Value to set\n     *  @memberof DataTable#oApi\n     */\n    function _fnSetCellData(settings, rowIdx, colIdx, val)\n    {\n        var col = settings.aoColumns[colIdx];\n        var rowData = settings.aoData[rowIdx]._aData;\n\n        col.fnSetData(rowData, val, {\n            settings: settings,\n            row: rowIdx,\n            col: colIdx\n        });\n    }\n\n    // Private variable that is used to match action syntax in the data property object\n    var __reArray = /\\[.*?\\]$/;\n    var __reFn = /\\(\\)$/;\n\n    /**\n     * Split string on periods, taking into account escaped periods\n     * @param  {string} str String to split\n     * @return {array} Split string\n     */\n    function _fnSplitObjNotation(str)\n    {\n        return $.map(str.match(/(\\\\.|[^\\.])+/g) || [''], function (s) {\n            return s.replace(/\\\\\\./g, '.');\n        });\n    }\n\n    /**\n     * Return a function that can be used to get data from a source object, taking\n     * into account the ability to use nested objects as a source\n     *  @param {string|int|function} mSource The data source for the object\n     *  @returns {function} Data get function\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetObjectDataFn(mSource)\n    {\n        if ($.isPlainObject(mSource))\n        {\n            /* Build an object of get functions, and wrap them in a single call */\n            var o = {};\n            $.each(mSource, function (key, val) {\n                if (val) {\n                    o[key] = _fnGetObjectDataFn(val);\n                }\n            });\n\n            return function (data, type, row, meta) {\n                var t = o[type] || o._;\n                return t !== undefined ?\n                        t(data, type, row, meta) :\n                        data;\n            };\n        }\n        else if (mSource === null)\n        {\n            /* Give an empty string for rendering / sorting etc */\n            return function (data) { // type, row and meta also passed, but not used\n                return data;\n            };\n        }\n        else if (typeof mSource === 'function')\n        {\n            return function (data, type, row, meta) {\n                return mSource(data, type, row, meta);\n            };\n        }\n        else if (typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n                mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1))\n        {\n            /* If there is a . in the source string then the data source is in a\n             * nested object so we loop over the data for each level to get the next\n             * level down. On each loop we test for undefined, and if found immediately\n             * return. This allows entire objects to be missing and sDefaultContent to\n             * be used if defined, rather than throwing an error\n             */\n            var fetchData = function (data, type, src) {\n                var arrayNotation, funcNotation, out, innerSrc;\n\n                if (src !== \"\")\n                {\n                    var a = _fnSplitObjNotation(src);\n\n                    for (var i = 0, iLen = a.length; i < iLen; i++)\n                    {\n                        // Check if we are dealing with special notation\n                        arrayNotation = a[i].match(__reArray);\n                        funcNotation = a[i].match(__reFn);\n\n                        if (arrayNotation)\n                        {\n                            // Array notation\n                            a[i] = a[i].replace(__reArray, '');\n\n                            // Condition allows simply [] to be passed in\n                            if (a[i] !== \"\") {\n                                data = data[ a[i] ];\n                            }\n                            out = [];\n\n                            // Get the remainder of the nested object to get\n                            a.splice(0, i + 1);\n                            innerSrc = a.join('.');\n\n                            // Traverse each entry in the array getting the properties requested\n                            if ($.isArray(data)) {\n                                for (var j = 0, jLen = data.length; j < jLen; j++) {\n                                    out.push(fetchData(data[j], type, innerSrc));\n                                }\n                            }\n\n                            // If a string is given in between the array notation indicators, that\n                            // is used to join the strings together, otherwise an array is returned\n                            var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);\n                            data = (join === \"\") ? out : out.join(join);\n\n                            // The inner call to fetchData has already traversed through the remainder\n                            // of the source requested, so we exit from the loop\n                            break;\n                        }\n                        else if (funcNotation)\n                        {\n                            // Function call\n                            a[i] = a[i].replace(__reFn, '');\n                            data = data[ a[i] ]();\n                            continue;\n                        }\n\n                        if (data === null || data[ a[i] ] === undefined)\n                        {\n                            return undefined;\n                        }\n                        data = data[ a[i] ];\n                    }\n                }\n\n                return data;\n            };\n\n            return function (data, type) { // row and meta also passed, but not used\n                return fetchData(data, type, mSource);\n            };\n        }\n        else\n        {\n            /* Array or flat object mapping */\n            return function (data, type) { // row and meta also passed, but not used\n                return data[mSource];\n            };\n        }\n    }\n\n    /**\n     * Return a function that can be used to set data from a source object, taking\n     * into account the ability to use nested objects as a source\n     *  @param {string|int|function} mSource The data source for the object\n     *  @returns {function} Data set function\n     *  @memberof DataTable#oApi\n     */\n    function _fnSetObjectDataFn(mSource)\n    {\n        if ($.isPlainObject(mSource))\n        {\n            /* Unlike get, only the underscore (global) option is used for for\n             * setting data since we don't know the type here. This is why an object\n             * option is not documented for `mData` (which is read/write), but it is\n             * for `mRender` which is read only.\n             */\n            return _fnSetObjectDataFn(mSource._);\n        }\n        else if (mSource === null)\n        {\n            /* Nothing to do when the data source is null */\n            return function () {\n            };\n        }\n        else if (typeof mSource === 'function')\n        {\n            return function (data, val, meta) {\n                mSource(data, 'set', val, meta);\n            };\n        }\n        else if (typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||\n                mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1))\n        {\n            /* Like the get, we need to get data from a nested object */\n            var setData = function (data, val, src) {\n                var a = _fnSplitObjNotation(src), b;\n                var aLast = a[a.length - 1];\n                var arrayNotation, funcNotation, o, innerSrc;\n\n                for (var i = 0, iLen = a.length - 1; i < iLen; i++)\n                {\n                    // Check if we are dealing with an array notation request\n                    arrayNotation = a[i].match(__reArray);\n                    funcNotation = a[i].match(__reFn);\n\n                    if (arrayNotation)\n                    {\n                        a[i] = a[i].replace(__reArray, '');\n                        data[ a[i] ] = [];\n\n                        // Get the remainder of the nested object to set so we can recurse\n                        b = a.slice();\n                        b.splice(0, i + 1);\n                        innerSrc = b.join('.');\n\n                        // Traverse each entry in the array setting the properties requested\n                        if ($.isArray(val))\n                        {\n                            for (var j = 0, jLen = val.length; j < jLen; j++)\n                            {\n                                o = {};\n                                setData(o, val[j], innerSrc);\n                                data[ a[i] ].push(o);\n                            }\n                        }\n                        else\n                        {\n                            // We've been asked to save data to an array, but it\n                            // isn't array data to be saved. Best that can be done\n                            // is to just save the value.\n                            data[ a[i] ] = val;\n                        }\n\n                        // The inner call to setData has already traversed through the remainder\n                        // of the source and has set the data, thus we can exit here\n                        return;\n                    }\n                    else if (funcNotation)\n                    {\n                        // Function call\n                        a[i] = a[i].replace(__reFn, '');\n                        data = data[ a[i] ](val);\n                    }\n\n                    // If the nested object doesn't currently exist - since we are\n                    // trying to set the value - create it\n                    if (data[ a[i] ] === null || data[ a[i] ] === undefined)\n                    {\n                        data[ a[i] ] = {};\n                    }\n                    data = data[ a[i] ];\n                }\n\n                // Last item in the input - i.e, the actual set\n                if (aLast.match(__reFn))\n                {\n                    // Function call\n                    data = data[ aLast.replace(__reFn, '') ](val);\n                }\n                else\n                {\n                    // If array notation is used, we just want to strip it and use the property name\n                    // and assign the value. If it isn't used, then we get the result we want anyway\n                    data[ aLast.replace(__reArray, '') ] = val;\n                }\n            };\n\n            return function (data, val) { // meta is also passed in, but not used\n                return setData(data, val, mSource);\n            };\n        }\n        else\n        {\n            /* Array or flat object mapping */\n            return function (data, val) { // meta is also passed in, but not used\n                data[mSource] = val;\n            };\n        }\n    }\n\n    /**\n     * Return an array with the full table data\n     *  @param {object} oSettings dataTables settings object\n     *  @returns array {array} aData Master data array\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetDataMaster(settings)\n    {\n        return _pluck(settings.aoData, '_aData');\n    }\n\n    /**\n     * Nuke the table\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnClearTable(settings)\n    {\n        settings.aoData.length = 0;\n        settings.aiDisplayMaster.length = 0;\n        settings.aiDisplay.length = 0;\n        settings.aIds = {};\n    }\n\n    /**\n     * Take an array of integers (index array) and remove a target integer (value - not\n     * the key!)\n     *  @param {array} a Index array to target\n     *  @param {int} iTarget value to find\n     *  @memberof DataTable#oApi\n     */\n    function _fnDeleteIndex(a, iTarget, splice)\n    {\n        var iTargetIndex = -1;\n\n        for (var i = 0, iLen = a.length; i < iLen; i++)\n        {\n            if (a[i] == iTarget)\n            {\n                iTargetIndex = i;\n            }\n            else if (a[i] > iTarget)\n            {\n                a[i]--;\n            }\n        }\n\n        if (iTargetIndex != -1 && splice === undefined)\n        {\n            a.splice(iTargetIndex, 1);\n        }\n    }\n\n    /**\n     * Mark cached data as invalid such that a re-read of the data will occur when\n     * the cached data is next requested. Also update from the data source object.\n     *\n     * @param {object} settings DataTables settings object\n     * @param {int}    rowIdx   Row index to invalidate\n     * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n     *     or 'data'\n     * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n     *     row will be invalidated\n     * @memberof DataTable#oApi\n     *\n     * @todo For the modularisation of v1.11 this will need to become a callback, so\n     *   the sort and filter methods can subscribe to it. That will required\n     *   initialisation options for sorting, which is why it is not already baked in\n     */\n    function _fnInvalidate(settings, rowIdx, src, colIdx)\n    {\n        var row = settings.aoData[ rowIdx ];\n        var i, ien;\n        var cellWrite = function (cell, col) {\n            // This is very frustrating, but in IE if you just write directly\n            // to innerHTML, and elements that are overwritten are GC'ed,\n            // even if there is a reference to them elsewhere\n            while (cell.childNodes.length) {\n                cell.removeChild(cell.firstChild);\n            }\n\n            cell.innerHTML = _fnGetCellData(settings, rowIdx, col, 'display');\n        };\n\n        // Are we reading last data from DOM or the data object?\n        if (src === 'dom' || ((!src || src === 'auto') && row.src === 'dom')) {\n            // Read the data from the DOM\n            row._aData = _fnGetRowElements(\n                    settings, row, colIdx, colIdx === undefined ? undefined : row._aData\n                    )\n                    .data;\n        }\n        else {\n            // Reading from data object, update the DOM\n            var cells = row.anCells;\n\n            if (cells) {\n                if (colIdx !== undefined) {\n                    cellWrite(cells[colIdx], colIdx);\n                }\n                else {\n                    for (i = 0, ien = cells.length; i < ien; i++) {\n                        cellWrite(cells[i], i);\n                    }\n                }\n            }\n        }\n\n        // For both row and cell invalidation, the cached data for sorting and\n        // filtering is nulled out\n        row._aSortData = null;\n        row._aFilterData = null;\n\n        // Invalidate the type for a specific column (if given) or all columns since\n        // the data might have changed\n        var cols = settings.aoColumns;\n        if (colIdx !== undefined) {\n            cols[ colIdx ].sType = null;\n        }\n        else {\n            for (i = 0, ien = cols.length; i < ien; i++) {\n                cols[i].sType = null;\n            }\n\n            // Update DataTables special `DT_*` attributes for the row\n            _fnRowAttributes(settings, row);\n        }\n    }\n\n    /**\n     * Build a data source object from an HTML row, reading the contents of the\n     * cells that are in the row.\n     *\n     * @param {object} settings DataTables settings object\n     * @param {node|object} TR element from which to read data or existing row\n     *   object from which to re-read the data from the cells\n     * @param {int} [colIdx] Optional column index\n     * @param {array|object} [d] Data source object. If `colIdx` is given then this\n     *   parameter should also be given and will be used to write the data into.\n     *   Only the column in question will be written\n     * @returns {object} Object with two parameters: `data` the data read, in\n     *   document order, and `cells` and array of nodes (they can be useful to the\n     *   caller, so rather than needing a second traversal to get them, just return\n     *   them from here).\n     * @memberof DataTable#oApi\n     */\n    function _fnGetRowElements(settings, row, colIdx, d)\n    {\n        var\n                tds = [],\n                td = row.firstChild,\n                name, col, o, i = 0, contents,\n                columns = settings.aoColumns,\n                objectRead = settings._rowReadObject;\n\n        // Allow the data object to be passed in, or construct\n        d = d !== undefined ?\n                d :\n                objectRead ?\n                {} :\n                [];\n\n        var attr = function (str, td) {\n            if (typeof str === 'string') {\n                var idx = str.indexOf('@');\n\n                if (idx !== -1) {\n                    var attr = str.substring(idx + 1);\n                    var setter = _fnSetObjectDataFn(str);\n                    setter(d, td.getAttribute(attr));\n                }\n            }\n        };\n\n        // Read data from a cell and store into the data object\n        var cellProcess = function (cell) {\n            if (colIdx === undefined || colIdx === i) {\n                col = columns[i];\n                contents = $.trim(cell.innerHTML);\n\n                if (col && col._bAttrSrc) {\n                    var setter = _fnSetObjectDataFn(col.mData._);\n                    setter(d, contents);\n\n                    attr(col.mData.sort, cell);\n                    attr(col.mData.type, cell);\n                    attr(col.mData.filter, cell);\n                }\n                else {\n                    // Depending on the `data` option for the columns the data can\n                    // be read to either an object or an array.\n                    if (objectRead) {\n                        if (!col._setter) {\n                            // Cache the setter function\n                            col._setter = _fnSetObjectDataFn(col.mData);\n                        }\n                        col._setter(d, contents);\n                    }\n                    else {\n                        d[i] = contents;\n                    }\n                }\n            }\n\n            i++;\n        };\n\n        if (td) {\n            // `tr` element was passed in\n            while (td) {\n                name = td.nodeName.toUpperCase();\n\n                if (name == \"TD\" || name == \"TH\") {\n                    cellProcess(td);\n                    tds.push(td);\n                }\n\n                td = td.nextSibling;\n            }\n        }\n        else {\n            // Existing row object passed in\n            tds = row.anCells;\n\n            for (var j = 0, jen = tds.length; j < jen; j++) {\n                cellProcess(tds[j]);\n            }\n        }\n\n        // Read the ID from the DOM if present\n        var rowNode = row.firstChild ? row : row.nTr;\n\n        if (rowNode) {\n            var id = rowNode.getAttribute('id');\n\n            if (id) {\n                _fnSetObjectDataFn(settings.rowId)(d, id);\n            }\n        }\n\n        return {\n            data: d,\n            cells: tds\n        };\n    }\n    /**\n     * Create a new TR element (and it's TD children) for a row\n     *  @param {object} oSettings dataTables settings object\n     *  @param {int} iRow Row to consider\n     *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n     *    DataTables will create a row automatically\n     *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n     *    if nTr is.\n     *  @memberof DataTable#oApi\n     */\n    function _fnCreateTr(oSettings, iRow, nTrIn, anTds)\n    {\n        var\n                row = oSettings.aoData[iRow],\n                rowData = row._aData,\n                cells = [],\n                nTr, nTd, oCol,\n                i, iLen;\n\n        if (row.nTr === null)\n        {\n            nTr = nTrIn || document.createElement('tr');\n\n            row.nTr = nTr;\n            row.anCells = cells;\n\n            /* Use a private property on the node to allow reserve mapping from the node\n             * to the aoData array for fast look up\n             */\n            nTr._DT_RowIndex = iRow;\n\n            /* Special parameters can be given by the data source to be used on the row */\n            _fnRowAttributes(oSettings, row);\n\n            /* Process each column */\n            for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++)\n            {\n                oCol = oSettings.aoColumns[i];\n\n                nTd = nTrIn ? anTds[i] : document.createElement(oCol.sCellType);\n                nTd._DT_CellIndex = {\n                    row: iRow,\n                    column: i\n                };\n\n                cells.push(nTd);\n\n                // Need to create the HTML if new, or if a rendering function is defined\n                if ((!nTrIn || oCol.mRender || oCol.mData !== i) &&\n                        (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + '.display')\n                        ) {\n                    nTd.innerHTML = _fnGetCellData(oSettings, iRow, i, 'display');\n                }\n\n                /* Add user defined class */\n                if (oCol.sClass)\n                {\n                    nTd.className += ' ' + oCol.sClass;\n                }\n\n                // Visibility - add or remove as required\n                if (oCol.bVisible && !nTrIn)\n                {\n                    nTr.appendChild(nTd);\n                }\n                else if (!oCol.bVisible && nTrIn)\n                {\n                    nTd.parentNode.removeChild(nTd);\n                }\n\n                if (oCol.fnCreatedCell)\n                {\n                    oCol.fnCreatedCell.call(oSettings.oInstance,\n                            nTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i\n                            );\n                }\n            }\n\n            _fnCallbackFire(oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow]);\n        }\n\n        // Remove once webkit bug 131819 and Chromium bug 365619 have been resolved\n        // and deployed\n        row.nTr.setAttribute('role', 'row');\n    }\n\n    /**\n     * Add attributes to a row based on the special `DT_*` parameters in a data\n     * source object.\n     *  @param {object} settings DataTables settings object\n     *  @param {object} DataTables row object for the row to be modified\n     *  @memberof DataTable#oApi\n     */\n    function _fnRowAttributes(settings, row)\n    {\n        var tr = row.nTr;\n        var data = row._aData;\n\n        if (tr) {\n            var id = settings.rowIdFn(data);\n\n            if (id) {\n                tr.id = id;\n            }\n\n            if (data.DT_RowClass) {\n                // Remove any classes added by DT_RowClass before\n                var a = data.DT_RowClass.split(' ');\n                row.__rowc = row.__rowc ?\n                        _unique(row.__rowc.concat(a)) :\n                        a;\n\n                $(tr)\n                        .removeClass(row.__rowc.join(' '))\n                        .addClass(data.DT_RowClass);\n            }\n\n            if (data.DT_RowAttr) {\n                $(tr).attr(data.DT_RowAttr);\n            }\n\n            if (data.DT_RowData) {\n                $(tr).data(data.DT_RowData);\n            }\n        }\n    }\n\n    /**\n     * Create the HTML header for the table\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnBuildHead(oSettings)\n    {\n        var i, ien, cell, row, column;\n        var thead = oSettings.nTHead;\n        var tfoot = oSettings.nTFoot;\n        var createHeader = $('th, td', thead).length === 0;\n        var classes = oSettings.oClasses;\n        var columns = oSettings.aoColumns;\n\n        if (createHeader) {\n            row = $('<tr/>').appendTo(thead);\n        }\n\n        for (i = 0, ien = columns.length; i < ien; i++) {\n            column = columns[i];\n            cell = $(column.nTh).addClass(column.sClass);\n\n            if (createHeader) {\n                cell.appendTo(row);\n            }\n\n            // 1.11 move into sorting\n            if (oSettings.oFeatures.bSort) {\n                cell.addClass(column.sSortingClass);\n\n                if (column.bSortable !== false) {\n                    cell\n                            .attr('tabindex', oSettings.iTabIndex)\n                            .attr('aria-controls', oSettings.sTableId);\n\n                    _fnSortAttachListener(oSettings, column.nTh, i);\n                }\n            }\n\n            if (column.sTitle != cell[0].innerHTML) {\n                cell.html(column.sTitle);\n            }\n\n            _fnRenderer(oSettings, 'header')(\n                    oSettings, cell, column, classes\n                    );\n        }\n\n        if (createHeader) {\n            _fnDetectHeader(oSettings.aoHeader, thead);\n        }\n\n        /* ARIA role for the rows */\n        $(thead).find('>tr').attr('role', 'row');\n\n        /* Deal with the footer - add classes if required */\n        $(thead).find('>tr>th, >tr>td').addClass(classes.sHeaderTH);\n        $(tfoot).find('>tr>th, >tr>td').addClass(classes.sFooterTH);\n\n        // Cache the footer cells. Note that we only take the cells from the first\n        // row in the footer. If there is more than one row the user wants to\n        // interact with, they need to use the table().foot() method. Note also this\n        // allows cells to be used for multiple columns using colspan\n        if (tfoot !== null) {\n            var cells = oSettings.aoFooter[0];\n\n            for (i = 0, ien = cells.length; i < ien; i++) {\n                column = columns[i];\n                column.nTf = cells[i].cell;\n\n                if (column.sClass) {\n                    $(column.nTf).addClass(column.sClass);\n                }\n            }\n        }\n    }\n\n    /**\n     * Draw the header (or footer) element based on the column visibility states. The\n     * methodology here is to use the layout array from _fnDetectHeader, modified for\n     * the instantaneous column visibility, to construct the new layout. The grid is\n     * traversed over cell at a time in a rows x columns grid fashion, although each\n     * cell insert can cover multiple elements in the grid - which is tracks using the\n     * aApplied array. Cell inserts in the grid will only occur where there isn't\n     * already a cell in that position.\n     *  @param {object} oSettings dataTables settings object\n     *  @param array {objects} aoSource Layout array from _fnDetectHeader\n     *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,\n     *  @memberof DataTable#oApi\n     */\n    function _fnDrawHead(oSettings, aoSource, bIncludeHidden)\n    {\n        var i, iLen, j, jLen, k, kLen, n, nLocalTr;\n        var aoLocal = [];\n        var aApplied = [];\n        var iColumns = oSettings.aoColumns.length;\n        var iRowspan, iColspan;\n\n        if (!aoSource)\n        {\n            return;\n        }\n\n        if (bIncludeHidden === undefined)\n        {\n            bIncludeHidden = false;\n        }\n\n        /* Make a copy of the master layout array, but without the visible columns in it */\n        for (i = 0, iLen = aoSource.length; i < iLen; i++)\n        {\n            aoLocal[i] = aoSource[i].slice();\n            aoLocal[i].nTr = aoSource[i].nTr;\n\n            /* Remove any columns which are currently hidden */\n            for (j = iColumns - 1; j >= 0; j--)\n            {\n                if (!oSettings.aoColumns[j].bVisible && !bIncludeHidden)\n                {\n                    aoLocal[i].splice(j, 1);\n                }\n            }\n\n            /* Prep the applied array - it needs an element for each row */\n            aApplied.push([]);\n        }\n\n        for (i = 0, iLen = aoLocal.length; i < iLen; i++)\n        {\n            nLocalTr = aoLocal[i].nTr;\n\n            /* All cells are going to be replaced, so empty out the row */\n            if (nLocalTr)\n            {\n                while ((n = nLocalTr.firstChild))\n                {\n                    nLocalTr.removeChild(n);\n                }\n            }\n\n            for (j = 0, jLen = aoLocal[i].length; j < jLen; j++)\n            {\n                iRowspan = 1;\n                iColspan = 1;\n\n                /* Check to see if there is already a cell (row/colspan) covering our target\n                 * insert point. If there is, then there is nothing to do.\n                 */\n                if (aApplied[i][j] === undefined)\n                {\n                    nLocalTr.appendChild(aoLocal[i][j].cell);\n                    aApplied[i][j] = 1;\n\n                    /* Expand the cell to cover as many rows as needed */\n                    while (aoLocal[i + iRowspan] !== undefined &&\n                            aoLocal[i][j].cell == aoLocal[i + iRowspan][j].cell)\n                    {\n                        aApplied[i + iRowspan][j] = 1;\n                        iRowspan++;\n                    }\n\n                    /* Expand the cell to cover as many columns as needed */\n                    while (aoLocal[i][j + iColspan] !== undefined &&\n                            aoLocal[i][j].cell == aoLocal[i][j + iColspan].cell)\n                    {\n                        /* Must update the applied array over the rows for the columns */\n                        for (k = 0; k < iRowspan; k++)\n                        {\n                            aApplied[i + k][j + iColspan] = 1;\n                        }\n                        iColspan++;\n                    }\n\n                    /* Do the actual expansion in the DOM */\n                    $(aoLocal[i][j].cell)\n                            .attr('rowspan', iRowspan)\n                            .attr('colspan', iColspan);\n                }\n            }\n        }\n    }\n\n    /**\n     * Insert the required TR nodes into the table for display\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnDraw(oSettings)\n    {\n        /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n        var aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);\n        if ($.inArray(false, aPreDraw) !== -1)\n        {\n            _fnProcessingDisplay(oSettings, false);\n            return;\n        }\n\n        var i, iLen, n;\n        var anRows = [];\n        var iRowCount = 0;\n        var asStripeClasses = oSettings.asStripeClasses;\n        var iStripes = asStripeClasses.length;\n        var iOpenRows = oSettings.aoOpenRows.length;\n        var oLang = oSettings.oLanguage;\n        var iInitDisplayStart = oSettings.iInitDisplayStart;\n        var bServerSide = _fnDataSource(oSettings) == 'ssp';\n        var aiDisplay = oSettings.aiDisplay;\n\n        oSettings.bDrawing = true;\n\n        /* Check and see if we have an initial draw position from state saving */\n        if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1)\n        {\n            oSettings._iDisplayStart = bServerSide ?\n                    iInitDisplayStart :\n                    iInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n                    0 :\n                    iInitDisplayStart;\n\n            oSettings.iInitDisplayStart = -1;\n        }\n\n        var iDisplayStart = oSettings._iDisplayStart;\n        var iDisplayEnd = oSettings.fnDisplayEnd();\n\n        /* Server-side processing draw intercept */\n        if (oSettings.bDeferLoading)\n        {\n            oSettings.bDeferLoading = false;\n            oSettings.iDraw++;\n            _fnProcessingDisplay(oSettings, false);\n        }\n        else if (!bServerSide)\n        {\n            oSettings.iDraw++;\n        }\n        else if (!oSettings.bDestroying && !_fnAjaxUpdate(oSettings))\n        {\n            return;\n        }\n\n        if (aiDisplay.length !== 0)\n        {\n            var iStart = bServerSide ? 0 : iDisplayStart;\n            var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n            for (var j = iStart; j < iEnd; j++)\n            {\n                var iDataIndex = aiDisplay[j];\n                var aoData = oSettings.aoData[ iDataIndex ];\n                if (aoData.nTr === null)\n                {\n                    _fnCreateTr(oSettings, iDataIndex);\n                }\n\n                var nRow = aoData.nTr;\n\n                /* Remove the old striping classes and then add the new one */\n                if (iStripes !== 0)\n                {\n                    var sStripe = asStripeClasses[ iRowCount % iStripes ];\n                    if (aoData._sRowStripe != sStripe)\n                    {\n                        $(nRow).removeClass(aoData._sRowStripe).addClass(sStripe);\n                        aoData._sRowStripe = sStripe;\n                    }\n                }\n\n                // Row callback functions - might want to manipulate the row\n                // iRowCount and j are not currently documented. Are they at all\n                // useful?\n                _fnCallbackFire(oSettings, 'aoRowCallback', null,\n                        [nRow, aoData._aData, iRowCount, j]);\n\n                anRows.push(nRow);\n                iRowCount++;\n            }\n        }\n        else\n        {\n            /* Table is empty - create a row with an empty message in it */\n            var sZero = oLang.sZeroRecords;\n            if (oSettings.iDraw == 1 && _fnDataSource(oSettings) == 'ajax')\n            {\n                sZero = oLang.sLoadingRecords;\n            }\n            else if (oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0)\n            {\n                sZero = oLang.sEmptyTable;\n            }\n\n            anRows[ 0 ] = $('<tr/>', {'class': iStripes ? asStripeClasses[0] : ''})\n                    .append($('<td />', {\n                        'valign': 'top',\n                        'colSpan': _fnVisbleColumns(oSettings),\n                        'class': oSettings.oClasses.sRowEmpty\n                    }).html(sZero))[0];\n        }\n\n        /* Header and footer callbacks */\n        _fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [$(oSettings.nTHead).children('tr')[0],\n            _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n        _fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [$(oSettings.nTFoot).children('tr')[0],\n            _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n        var body = $(oSettings.nTBody);\n\n        body.children().detach();\n        body.append($(anRows));\n\n        /* Call all required callback functions for the end of a draw */\n        _fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings]);\n\n        /* Draw is complete, sorting and filtering must be as well */\n        oSettings.bSorted = false;\n        oSettings.bFiltered = false;\n        oSettings.bDrawing = false;\n    }\n\n    /**\n     * Redraw the table - taking account of the various features which are enabled\n     *  @param {object} oSettings dataTables settings object\n     *  @param {boolean} [holdPosition] Keep the current paging position. By default\n     *    the paging is reset to the first page\n     *  @memberof DataTable#oApi\n     */\n    function _fnReDraw(settings, holdPosition)\n    {\n        var\n                features = settings.oFeatures,\n                sort = features.bSort,\n                filter = features.bFilter;\n\n        if (sort) {\n            _fnSort(settings);\n        }\n\n        if (filter) {\n            _fnFilterComplete(settings, settings.oPreviousSearch);\n        }\n        else {\n            // No filtering, so we want to just use the display master\n            settings.aiDisplay = settings.aiDisplayMaster.slice();\n        }\n\n        if (holdPosition !== true) {\n            settings._iDisplayStart = 0;\n        }\n\n        // Let any modules know about the draw hold position state (used by\n        // scrolling internally)\n        settings._drawHold = holdPosition;\n\n        _fnDraw(settings);\n\n        settings._drawHold = false;\n    }\n\n    /**\n     * Add the options to the page HTML for the table\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnAddOptionsHtml(oSettings)\n    {\n        var classes = oSettings.oClasses;\n        var table = $(oSettings.nTable);\n        var holding = $('<div/>').insertBefore(table); // Holding element for speed\n        var features = oSettings.oFeatures;\n\n        // All DataTables are wrapped in a div\n        var insert = $('<div/>', {\n            id: oSettings.sTableId + '_wrapper',\n            'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' ' + classes.sNoFooter)\n        });\n\n        oSettings.nHolding = holding[0];\n        oSettings.nTableWrapper = insert[0];\n        oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\n        /* Loop over the user set positioning and place the elements as needed */\n        var aDom = oSettings.sDom.split('');\n        var featureNode, cOption, nNewNode, cNext, sAttr, j;\n        for (var i = 0; i < aDom.length; i++)\n        {\n            featureNode = null;\n            cOption = aDom[i];\n\n            if (cOption == '<')\n            {\n                /* New container div */\n                nNewNode = $('<div/>')[0];\n\n                /* Check to see if we should append an id and/or a class name to the container */\n                cNext = aDom[i + 1];\n                if (cNext == \"'\" || cNext == '\"')\n                {\n                    sAttr = \"\";\n                    j = 2;\n                    while (aDom[i + j] != cNext)\n                    {\n                        sAttr += aDom[i + j];\n                        j++;\n                    }\n\n                    /* Replace jQuery UI constants @todo depreciated */\n                    if (sAttr == \"H\")\n                    {\n                        sAttr = classes.sJUIHeader;\n                    }\n                    else if (sAttr == \"F\")\n                    {\n                        sAttr = classes.sJUIFooter;\n                    }\n\n                    /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n                     * breaks the string into parts and applies them as needed\n                     */\n                    if (sAttr.indexOf('.') != -1)\n                    {\n                        var aSplit = sAttr.split('.');\n                        nNewNode.id = aSplit[0].substr(1, aSplit[0].length - 1);\n                        nNewNode.className = aSplit[1];\n                    }\n                    else if (sAttr.charAt(0) == \"#\")\n                    {\n                        nNewNode.id = sAttr.substr(1, sAttr.length - 1);\n                    }\n                    else\n                    {\n                        nNewNode.className = sAttr;\n                    }\n\n                    i += j; /* Move along the position array */\n                }\n\n                insert.append(nNewNode);\n                insert = $(nNewNode);\n            }\n            else if (cOption == '>')\n            {\n                /* End container div */\n                insert = insert.parent();\n            }\n            // @todo Move options into their own plugins?\n            else if (cOption == 'l' && features.bPaginate && features.bLengthChange)\n            {\n                /* Length */\n                featureNode = _fnFeatureHtmlLength(oSettings);\n            }\n            else if (cOption == 'f' && features.bFilter)\n            {\n                /* Filter */\n                featureNode = _fnFeatureHtmlFilter(oSettings);\n            }\n            else if (cOption == 'r' && features.bProcessing)\n            {\n                /* pRocessing */\n                featureNode = _fnFeatureHtmlProcessing(oSettings);\n            }\n            else if (cOption == 't')\n            {\n                /* Table */\n                featureNode = _fnFeatureHtmlTable(oSettings);\n            }\n            else if (cOption == 'i' && features.bInfo)\n            {\n                /* Info */\n                featureNode = _fnFeatureHtmlInfo(oSettings);\n            }\n            else if (cOption == 'p' && features.bPaginate)\n            {\n                /* Pagination */\n                featureNode = _fnFeatureHtmlPaginate(oSettings);\n            }\n            else if (DataTable.ext.feature.length !== 0)\n            {\n                /* Plug-in features */\n                var aoFeatures = DataTable.ext.feature;\n                for (var k = 0, kLen = aoFeatures.length; k < kLen; k++)\n                {\n                    if (cOption == aoFeatures[k].cFeature)\n                    {\n                        featureNode = aoFeatures[k].fnInit(oSettings);\n                        break;\n                    }\n                }\n            }\n\n            /* Add to the 2D features array */\n            if (featureNode)\n            {\n                var aanFeatures = oSettings.aanFeatures;\n\n                if (!aanFeatures[cOption])\n                {\n                    aanFeatures[cOption] = [];\n                }\n\n                aanFeatures[cOption].push(featureNode);\n                insert.append(featureNode);\n            }\n        }\n\n        /* Built our DOM structure - replace the holding div with what we want */\n        holding.replaceWith(insert);\n        oSettings.nHolding = null;\n    }\n\n    /**\n     * Use the DOM source to create up an array of header cells. The idea here is to\n     * create a layout grid (array) of rows x columns, which contains a reference\n     * to the cell that that point in the grid (regardless of col/rowspan), such that\n     * any column / row could be removed and the new grid constructed\n     *  @param array {object} aLayout Array to store the calculated layout in\n     *  @param {node} nThead The header/footer element for the table\n     *  @memberof DataTable#oApi\n     */\n    function _fnDetectHeader(aLayout, nThead)\n    {\n        var nTrs = $(nThead).children('tr');\n        var nTr, nCell;\n        var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n        var bUnique;\n        var fnShiftCol = function (a, i, j) {\n            var k = a[i];\n            while (k[j]) {\n                j++;\n            }\n            return j;\n        };\n\n        aLayout.splice(0, aLayout.length);\n\n        /* We know how many rows there are in the layout - so prep it */\n        for (i = 0, iLen = nTrs.length; i < iLen; i++)\n        {\n            aLayout.push([]);\n        }\n\n        /* Calculate a layout array */\n        for (i = 0, iLen = nTrs.length; i < iLen; i++)\n        {\n            nTr = nTrs[i];\n            iColumn = 0;\n\n            /* For every cell in the row... */\n            nCell = nTr.firstChild;\n            while (nCell) {\n                if (nCell.nodeName.toUpperCase() == \"TD\" ||\n                        nCell.nodeName.toUpperCase() == \"TH\")\n                {\n                    /* Get the col and rowspan attributes from the DOM and sanitise them */\n                    iColspan = nCell.getAttribute('colspan') * 1;\n                    iRowspan = nCell.getAttribute('rowspan') * 1;\n                    iColspan = (!iColspan || iColspan === 0 || iColspan === 1) ? 1 : iColspan;\n                    iRowspan = (!iRowspan || iRowspan === 0 || iRowspan === 1) ? 1 : iRowspan;\n\n                    /* There might be colspan cells already in this row, so shift our target\n                     * accordingly\n                     */\n                    iColShifted = fnShiftCol(aLayout, i, iColumn);\n\n                    /* Cache calculation for unique columns */\n                    bUnique = iColspan === 1 ? true : false;\n\n                    /* If there is col / rowspan, copy the information into the layout grid */\n                    for (l = 0; l < iColspan; l++)\n                    {\n                        for (k = 0; k < iRowspan; k++)\n                        {\n                            aLayout[i + k][iColShifted + l] = {\n                                \"cell\": nCell,\n                                \"unique\": bUnique\n                            };\n                            aLayout[i + k].nTr = nTr;\n                        }\n                    }\n                }\n                nCell = nCell.nextSibling;\n            }\n        }\n    }\n\n    /**\n     * Get an array of unique th elements, one for each column\n     *  @param {object} oSettings dataTables settings object\n     *  @param {node} nHeader automatically detect the layout from this node - optional\n     *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n     *  @returns array {node} aReturn list of unique th's\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetUniqueThs(oSettings, nHeader, aLayout)\n    {\n        var aReturn = [];\n        if (!aLayout)\n        {\n            aLayout = oSettings.aoHeader;\n            if (nHeader)\n            {\n                aLayout = [];\n                _fnDetectHeader(aLayout, nHeader);\n            }\n        }\n\n        for (var i = 0, iLen = aLayout.length; i < iLen; i++)\n        {\n            for (var j = 0, jLen = aLayout[i].length; j < jLen; j++)\n            {\n                if (aLayout[i][j].unique &&\n                        (!aReturn[j] || !oSettings.bSortCellsTop))\n                {\n                    aReturn[j] = aLayout[i][j].cell;\n                }\n            }\n        }\n\n        return aReturn;\n    }\n\n    /**\n     * Create an Ajax call based on the table's settings, taking into account that\n     * parameters can have multiple forms, and backwards compatibility.\n     *\n     * @param {object} oSettings dataTables settings object\n     * @param {array} data Data to send to the server, required by\n     *     DataTables - may be augmented by developer callbacks\n     * @param {function} fn Callback function to run when data is obtained\n     */\n    function _fnBuildAjax(oSettings, data, fn)\n    {\n        // Compatibility with 1.9-, allow fnServerData and event to manipulate\n        _fnCallbackFire(oSettings, 'aoServerParams', 'serverParams', [data]);\n\n        // Convert to object based for 1.10+ if using the old array scheme which can\n        // come from server-side processing or serverParams\n        if (data && $.isArray(data)) {\n            var tmp = {};\n            var rbracket = /(.*?)\\[\\]$/;\n\n            $.each(data, function (key, val) {\n                var match = val.name.match(rbracket);\n\n                if (match) {\n                    // Support for arrays\n                    var name = match[0];\n\n                    if (!tmp[ name ]) {\n                        tmp[ name ] = [];\n                    }\n                    tmp[ name ].push(val.value);\n                }\n                else {\n                    tmp[val.name] = val.value;\n                }\n            });\n            data = tmp;\n        }\n\n        var ajaxData;\n        var ajax = oSettings.ajax;\n        var instance = oSettings.oInstance;\n        var callback = function (json) {\n            _fnCallbackFire(oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR]);\n            fn(json);\n        };\n\n        if ($.isPlainObject(ajax) && ajax.data)\n        {\n            ajaxData = ajax.data;\n\n            var newData = $.isFunction(ajaxData) ?\n                    ajaxData(data, oSettings) : // fn can manipulate data or return\n                    ajaxData;                      // an object object or array to merge\n\n            // If the function returned something, use that alone\n            data = $.isFunction(ajaxData) && newData ?\n                    newData :\n                    $.extend(true, data, newData);\n\n            // Remove the data property as we've resolved it already and don't want\n            // jQuery to do it again (it is restored at the end of the function)\n            delete ajax.data;\n        }\n\n        var baseAjax = {\n            \"data\": data,\n            \"success\": function (json) {\n                var error = json.error || json.sError;\n                if (error) {\n                    _fnLog(oSettings, 0, error);\n                }\n\n                oSettings.json = json;\n                callback(json);\n            },\n            \"dataType\": \"json\",\n            \"cache\": false,\n            \"type\": oSettings.sServerMethod,\n            \"error\": function (xhr, error, thrown) {\n                var ret = _fnCallbackFire(oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR]);\n\n                if ($.inArray(true, ret) === -1) {\n                    if (error == \"parsererror\") {\n                        _fnLog(oSettings, 0, 'Invalid JSON response', 1);\n                    }\n                    else if (xhr.readyState === 4) {\n                        _fnLog(oSettings, 0, 'Ajax error', 7);\n                    }\n                }\n\n                _fnProcessingDisplay(oSettings, false);\n            }\n        };\n\n        // Store the data submitted for the API\n        oSettings.oAjaxData = data;\n\n        // Allow plug-ins and external processes to modify the data\n        _fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data]);\n\n        if (oSettings.fnServerData)\n        {\n            // DataTables 1.9- compatibility\n            oSettings.fnServerData.call(instance,\n                    oSettings.sAjaxSource,\n                    $.map(data, function (val, key) { // Need to convert back to 1.9 trad format\n                        return {name: key, value: val};\n                    }),\n                    callback,\n                    oSettings\n                    );\n        }\n        else if (oSettings.sAjaxSource || typeof ajax === 'string')\n        {\n            // DataTables 1.9- compatibility\n            oSettings.jqXHR = $.ajax($.extend(baseAjax, {\n                url: ajax || oSettings.sAjaxSource\n            }));\n        }\n        else if ($.isFunction(ajax))\n        {\n            // Is a function - let the caller define what needs to be done\n            oSettings.jqXHR = ajax.call(instance, data, callback, oSettings);\n        }\n        else\n        {\n            // Object to extend the base settings\n            oSettings.jqXHR = $.ajax($.extend(baseAjax, ajax));\n\n            // Restore for next time around\n            ajax.data = ajaxData;\n        }\n    }\n\n    /**\n     * Update the table using an Ajax call\n     *  @param {object} settings dataTables settings object\n     *  @returns {boolean} Block the table drawing or not\n     *  @memberof DataTable#oApi\n     */\n    function _fnAjaxUpdate(settings)\n    {\n        if (settings.bAjaxDataGet) {\n            settings.iDraw++;\n            _fnProcessingDisplay(settings, true);\n\n            _fnBuildAjax(\n                    settings,\n                    _fnAjaxParameters(settings),\n                    function (json) {\n                        _fnAjaxUpdateDraw(settings, json);\n                    }\n            );\n\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Build up the parameters in an object needed for a server-side processing\n     * request. Note that this is basically done twice, is different ways - a modern\n     * method which is used by default in DataTables 1.10 which uses objects and\n     * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if\n     * the sAjaxSource option is used in the initialisation, or the legacyAjax\n     * option is set.\n     *  @param {object} oSettings dataTables settings object\n     *  @returns {bool} block the table drawing or not\n     *  @memberof DataTable#oApi\n     */\n    function _fnAjaxParameters(settings)\n    {\n        var\n                columns = settings.aoColumns,\n                columnCount = columns.length,\n                features = settings.oFeatures,\n                preSearch = settings.oPreviousSearch,\n                preColSearch = settings.aoPreSearchCols,\n                i, data = [], dataProp, column, columnSearch,\n                sort = _fnSortFlatten(settings),\n                displayStart = settings._iDisplayStart,\n                displayLength = features.bPaginate !== false ?\n                settings._iDisplayLength :\n                -1;\n\n        var param = function (name, value) {\n            data.push({'name': name, 'value': value});\n        };\n\n        // DataTables 1.9- compatible method\n        param('sEcho', settings.iDraw);\n        param('iColumns', columnCount);\n        param('sColumns', _pluck(columns, 'sName').join(','));\n        param('iDisplayStart', displayStart);\n        param('iDisplayLength', displayLength);\n\n        // DataTables 1.10+ method\n        var d = {\n            draw: settings.iDraw,\n            columns: [],\n            order: [],\n            start: displayStart,\n            length: displayLength,\n            search: {\n                value: preSearch.sSearch,\n                regex: preSearch.bRegex\n            }\n        };\n\n        for (i = 0; i < columnCount; i++) {\n            column = columns[i];\n            columnSearch = preColSearch[i];\n            dataProp = typeof column.mData == \"function\" ? 'function' : column.mData;\n\n            d.columns.push({\n                data: dataProp,\n                name: column.sName,\n                searchable: column.bSearchable,\n                orderable: column.bSortable,\n                search: {\n                    value: columnSearch.sSearch,\n                    regex: columnSearch.bRegex\n                }\n            });\n\n            param(\"mDataProp_\" + i, dataProp);\n\n            if (features.bFilter) {\n                param('sSearch_' + i, columnSearch.sSearch);\n                param('bRegex_' + i, columnSearch.bRegex);\n                param('bSearchable_' + i, column.bSearchable);\n            }\n\n            if (features.bSort) {\n                param('bSortable_' + i, column.bSortable);\n            }\n        }\n\n        if (features.bFilter) {\n            param('sSearch', preSearch.sSearch);\n            param('bRegex', preSearch.bRegex);\n        }\n\n        if (features.bSort) {\n            $.each(sort, function (i, val) {\n                d.order.push({column: val.col, dir: val.dir});\n\n                param('iSortCol_' + i, val.col);\n                param('sSortDir_' + i, val.dir);\n            });\n\n            param('iSortingCols', sort.length);\n        }\n\n        // If the legacy.ajax parameter is null, then we automatically decide which\n        // form to use, based on sAjaxSource\n        var legacy = DataTable.ext.legacy.ajax;\n        if (legacy === null) {\n            return settings.sAjaxSource ? data : d;\n        }\n\n        // Otherwise, if legacy has been specified then we use that to decide on the\n        // form\n        return legacy ? data : d;\n    }\n\n    /**\n     * Data the data from the server (nuking the old) and redraw the table\n     *  @param {object} oSettings dataTables settings object\n     *  @param {object} json json data return from the server.\n     *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n     *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n     *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n     *  @param {array} json.aaData The data to display on this page\n     *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n     *  @memberof DataTable#oApi\n     */\n    function _fnAjaxUpdateDraw(settings, json)\n    {\n        // v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.\n        // Support both\n        var compat = function (old, modern) {\n            return json[old] !== undefined ? json[old] : json[modern];\n        };\n\n        var data = _fnAjaxDataSrc(settings, json);\n        var draw = compat('sEcho', 'draw');\n        var recordsTotal = compat('iTotalRecords', 'recordsTotal');\n        var recordsFiltered = compat('iTotalDisplayRecords', 'recordsFiltered');\n\n        if (draw) {\n            // Protect against out of sequence returns\n            if (draw * 1 < settings.iDraw) {\n                return;\n            }\n            settings.iDraw = draw * 1;\n        }\n\n        _fnClearTable(settings);\n        settings._iRecordsTotal = parseInt(recordsTotal, 10);\n        settings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n        for (var i = 0, ien = data.length; i < ien; i++) {\n            _fnAddData(settings, data[i]);\n        }\n        settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n        settings.bAjaxDataGet = false;\n        _fnDraw(settings);\n\n        if (!settings._bInitComplete) {\n            _fnInitComplete(settings, json);\n        }\n\n        settings.bAjaxDataGet = true;\n        _fnProcessingDisplay(settings, false);\n    }\n\n    /**\n     * Get the data from the JSON data source to use for drawing a table. Using\n     * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n     * source object, or from a processing function.\n     *  @param {object} oSettings dataTables settings object\n     *  @param  {object} json Data source object / array from the server\n     *  @return {array} Array of data to use\n     */\n    function _fnAjaxDataSrc(oSettings, json)\n    {\n        var dataSrc = $.isPlainObject(oSettings.ajax) && oSettings.ajax.dataSrc !== undefined ?\n                oSettings.ajax.dataSrc :\n                oSettings.sAjaxDataProp; // Compatibility with 1.9-.\n\n        // Compatibility with 1.9-. In order to read from aaData, check if the\n        // default has been changed, if not, check for aaData\n        if (dataSrc === 'data') {\n            return json.aaData || json[dataSrc];\n        }\n\n        return dataSrc !== \"\" ?\n                _fnGetObjectDataFn(dataSrc)(json) :\n                json;\n    }\n\n    /**\n     * Generate the node required for filtering text\n     *  @returns {node} Filter control element\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnFeatureHtmlFilter(settings)\n    {\n        var classes = settings.oClasses;\n        var tableId = settings.sTableId;\n        var language = settings.oLanguage;\n        var previousSearch = settings.oPreviousSearch;\n        var features = settings.aanFeatures;\n        var input = '<input type=\"search\" class=\"' + classes.sFilterInput + '\"/>';\n\n        var str = language.sSearch;\n        str = str.match(/_INPUT_/) ?\n                str.replace('_INPUT_', input) :\n                str + input;\n\n        var filter = $('<div/>', {\n            'id': !features.f ? tableId + '_filter' : null,\n            'class': classes.sFilter\n        })\n                .append($('<label/>').append(str));\n\n        var searchFn = function () {\n            /* Update all other filter input elements for the new display */\n            var n = features.f;\n            var val = !this.value ? \"\" : this.value; // mental IE8 fix :-(\n\n            /* Now do the filter */\n            if (val != previousSearch.sSearch) {\n                _fnFilterComplete(settings, {\n                    \"sSearch\": val,\n                    \"bRegex\": previousSearch.bRegex,\n                    \"bSmart\": previousSearch.bSmart,\n                    \"bCaseInsensitive\": previousSearch.bCaseInsensitive\n                });\n\n                // Need to redraw, without resorting\n                settings._iDisplayStart = 0;\n                _fnDraw(settings);\n            }\n        };\n\n        var searchDelay = settings.searchDelay !== null ?\n                settings.searchDelay :\n                _fnDataSource(settings) === 'ssp' ?\n                400 :\n                0;\n\n        var jqFilter = $('input', filter)\n                .val(previousSearch.sSearch)\n                .attr('placeholder', language.sSearchPlaceholder)\n                .on(\n                        'keyup.DT search.DT input.DT paste.DT cut.DT',\n                        searchDelay ?\n                        _fnThrottle(searchFn, searchDelay) :\n                        searchFn\n                        )\n                .on('keypress.DT', function (e) {\n                    /* Prevent form submission */\n                    if (e.keyCode == 13) {\n                        return false;\n                    }\n                })\n                .attr('aria-controls', tableId);\n\n        // Update the input elements whenever the table is filtered\n        $(settings.nTable).on('search.dt.DT', function (ev, s) {\n            if (settings === s) {\n                // IE9 throws an 'unknown error' if document.activeElement is used\n                // inside an iframe or frame...\n                try {\n                    if (jqFilter[0] !== document.activeElement) {\n                        jqFilter.val(previousSearch.sSearch);\n                    }\n                }\n                catch (e) {\n                }\n            }\n        });\n\n        return filter[0];\n    }\n\n    /**\n     * Filter the table using both the global filter and column based filtering\n     *  @param {object} oSettings dataTables settings object\n     *  @param {object} oSearch search information\n     *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n     *  @memberof DataTable#oApi\n     */\n    function _fnFilterComplete(oSettings, oInput, iForce)\n    {\n        var oPrevSearch = oSettings.oPreviousSearch;\n        var aoPrevSearch = oSettings.aoPreSearchCols;\n        var fnSaveFilter = function (oFilter) {\n            /* Save the filtering values */\n            oPrevSearch.sSearch = oFilter.sSearch;\n            oPrevSearch.bRegex = oFilter.bRegex;\n            oPrevSearch.bSmart = oFilter.bSmart;\n            oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n        };\n        var fnRegex = function (o) {\n            // Backwards compatibility with the bEscapeRegex option\n            return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;\n        };\n\n        // Resolve any column types that are unknown due to addition or invalidation\n        // @todo As per sort - can this be moved into an event handler?\n        _fnColumnTypes(oSettings);\n\n        /* In server-side processing all filtering is done by the server, so no point hanging around here */\n        if (_fnDataSource(oSettings) != 'ssp')\n        {\n            /* Global filter */\n            _fnFilter(oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive);\n            fnSaveFilter(oInput);\n\n            /* Now do the individual column filter */\n            for (var i = 0; i < aoPrevSearch.length; i++)\n            {\n                _fnFilterColumn(oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),\n                        aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive);\n            }\n\n            /* Custom filtering */\n            _fnFilterCustom(oSettings);\n        }\n        else\n        {\n            fnSaveFilter(oInput);\n        }\n\n        /* Tell the draw function we have been filtering */\n        oSettings.bFiltered = true;\n        _fnCallbackFire(oSettings, null, 'search', [oSettings]);\n    }\n\n    /**\n     * Apply custom filtering functions\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnFilterCustom(settings)\n    {\n        var filters = DataTable.ext.search;\n        var displayRows = settings.aiDisplay;\n        var row, rowIdx;\n\n        for (var i = 0, ien = filters.length; i < ien; i++) {\n            var rows = [];\n\n            // Loop over each row and see if it should be included\n            for (var j = 0, jen = displayRows.length; j < jen; j++) {\n                rowIdx = displayRows[ j ];\n                row = settings.aoData[ rowIdx ];\n\n                if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n                    rows.push(rowIdx);\n                }\n            }\n\n            // So the array reference doesn't break set the results into the\n            // existing array\n            displayRows.length = 0;\n            $.merge(displayRows, rows);\n        }\n    }\n\n    /**\n     * Filter the table on a per-column basis\n     *  @param {object} oSettings dataTables settings object\n     *  @param {string} sInput string to filter on\n     *  @param {int} iColumn column to filter\n     *  @param {bool} bRegex treat search string as a regular expression or not\n     *  @param {bool} bSmart use smart filtering or not\n     *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n     *  @memberof DataTable#oApi\n     */\n    function _fnFilterColumn(settings, searchStr, colIdx, regex, smart, caseInsensitive)\n    {\n        if (searchStr === '') {\n            return;\n        }\n\n        var data;\n        var display = settings.aiDisplay;\n        var rpSearch = _fnFilterCreateSearch(searchStr, regex, smart, caseInsensitive);\n\n        for (var i = display.length - 1; i >= 0; i--) {\n            data = settings.aoData[ display[i] ]._aFilterData[ colIdx ];\n\n            if (!rpSearch.test(data)) {\n                display.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * Filter the data table based on user input and draw the table\n     *  @param {object} settings dataTables settings object\n     *  @param {string} input string to filter on\n     *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)\n     *  @param {bool} regex treat as a regular expression or not\n     *  @param {bool} smart perform smart filtering or not\n     *  @param {bool} caseInsensitive Do case insenstive matching or not\n     *  @memberof DataTable#oApi\n     */\n    function _fnFilter(settings, input, force, regex, smart, caseInsensitive)\n    {\n        var rpSearch = _fnFilterCreateSearch(input, regex, smart, caseInsensitive);\n        var prevSearch = settings.oPreviousSearch.sSearch;\n        var displayMaster = settings.aiDisplayMaster;\n        var display, invalidated, i;\n\n        // Need to take account of custom filtering functions - always filter\n        if (DataTable.ext.search.length !== 0) {\n            force = true;\n        }\n\n        // Check if any of the rows were invalidated\n        invalidated = _fnFilterData(settings);\n\n        // If the input is blank - we just want the full data set\n        if (input.length <= 0) {\n            settings.aiDisplay = displayMaster.slice();\n        }\n        else {\n            // New search - start from the master array\n            if (invalidated ||\n                    force ||\n                    prevSearch.length > input.length ||\n                    input.indexOf(prevSearch) !== 0 ||\n                    settings.bSorted // On resort, the display master needs to be\n                    // re-filtered since indexes will have changed\n                    ) {\n                settings.aiDisplay = displayMaster.slice();\n            }\n\n            // Search the display array\n            display = settings.aiDisplay;\n\n            for (i = display.length - 1; i >= 0; i--) {\n                if (!rpSearch.test(settings.aoData[ display[i] ]._sFilterRow)) {\n                    display.splice(i, 1);\n                }\n            }\n        }\n    }\n\n    /**\n     * Build a regular expression object suitable for searching a table\n     *  @param {string} sSearch string to search for\n     *  @param {bool} bRegex treat as a regular expression or not\n     *  @param {bool} bSmart perform smart filtering or not\n     *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n     *  @returns {RegExp} constructed object\n     *  @memberof DataTable#oApi\n     */\n    function _fnFilterCreateSearch(search, regex, smart, caseInsensitive)\n    {\n        search = regex ?\n                search :\n                _fnEscapeRegex(search);\n\n        if (smart) {\n            /* For smart filtering we want to allow the search to work regardless of\n             * word order. We also want double quoted text to be preserved, so word\n             * order is important - a la google. So this is what we want to\n             * generate:\n             * \n             * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n             */\n            var a = $.map(search.match(/\"[^\"]+\"|[^ ]+/g) || [''], function (word) {\n                if (word.charAt(0) === '\"') {\n                    var m = word.match(/^\"(.*)\"$/);\n                    word = m ? m[1] : word;\n                }\n\n                return word.replace('\"', '');\n            });\n\n            search = '^(?=.*?' + a.join(')(?=.*?') + ').*$';\n        }\n\n        return new RegExp(search, caseInsensitive ? 'i' : '');\n    }\n\n    /**\n     * Escape a string such that it can be used in a regular expression\n     *  @param {string} sVal string to escape\n     *  @returns {string} escaped string\n     *  @memberof DataTable#oApi\n     */\n    var _fnEscapeRegex = DataTable.util.escapeRegex;\n\n    var __filter_div = $('<div>')[0];\n    var __filter_div_textContent = __filter_div.textContent !== undefined;\n\n    // Update the filtering data for each row if needed (by invalidation or first run)\n    function _fnFilterData(settings)\n    {\n        var columns = settings.aoColumns;\n        var column;\n        var i, j, ien, jen, filterData, cellData, row;\n        var fomatters = DataTable.ext.type.search;\n        var wasInvalidated = false;\n\n        for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n            row = settings.aoData[i];\n\n            filterData = [];\n\n            for (j = 0, jen = columns.length; j < jen; j++) {\n                column = columns[j];\n                if (column.bSearchable && $(column.nTh).is(':visible')) {\n                    cellData = _fnGetCellData(settings, i, j, 'filter');\n\n                    if (fomatters[ column.sType ]) {\n                        cellData = fomatters[ column.sType ](cellData);\n                    }\n\n                    // Search in DataTables 1.10 is string based. In 1.11 this\n                    // should be altered to also allow strict type checking.\n                    if (cellData === null) {\n                        cellData = '';\n                    }\n\n                    if (typeof cellData !== 'string' && cellData.toString) {\n                        cellData = cellData.toString();\n                    }\n                }\n                else {\n                    cellData = '';\n                }\n\n                // If it looks like there is an HTML entity in the string,\n                // attempt to decode it so sorting works as expected. Note that\n                // we could use a single line of jQuery to do this, but the DOM\n                // method used here is much faster http://jsperf.com/html-decode\n                if (cellData.indexOf && cellData.indexOf('&') !== -1) {\n                    __filter_div.innerHTML = cellData;\n                    cellData = __filter_div_textContent ?\n                            __filter_div.textContent :\n                            __filter_div.innerText;\n                }\n\n                if (cellData.replace) {\n                    cellData = cellData.replace(/[\\r\\n]/g, '');\n                }\n\n                filterData.push(cellData);\n            }\n\n            row._aFilterData = filterData;\n            row._sFilterRow = filterData.join('  ');\n                wasInvalidated = true;\n        }\n\n        return wasInvalidated;\n    }\n\n    /**\n     * Convert from the internal Hungarian notation to camelCase for external\n     * interaction\n     *  @param {object} obj Object to convert\n     *  @returns {object} Inverted object\n     *  @memberof DataTable#oApi\n     */\n    function _fnSearchToCamel(obj)\n    {\n        return {\n            search: obj.sSearch,\n            smart: obj.bSmart,\n            regex: obj.bRegex,\n            caseInsensitive: obj.bCaseInsensitive\n        };\n    }\n\n    /**\n     * Convert from camelCase notation to the internal Hungarian. We could use the\n     * Hungarian convert function here, but this is cleaner\n     *  @param {object} obj Object to convert\n     *  @returns {object} Inverted object\n     *  @memberof DataTable#oApi\n     */\n    function _fnSearchToHung(obj)\n    {\n        return {\n            sSearch: obj.search,\n            bSmart: obj.smart,\n            bRegex: obj.regex,\n            bCaseInsensitive: obj.caseInsensitive\n        };\n    }\n\n    /**\n     * Generate the node required for the info display\n     *  @param {object} oSettings dataTables settings object\n     *  @returns {node} Information element\n     *  @memberof DataTable#oApi\n     */\n    function _fnFeatureHtmlInfo(settings)\n    {\n        var\n                tid = settings.sTableId,\n                nodes = settings.aanFeatures.i,\n                n = $('<div/>', {\n                    'class': settings.oClasses.sInfo,\n                    'id': !nodes ? tid + '_info' : null\n                });\n\n        if (!nodes) {\n            // Update display on each draw\n            settings.aoDrawCallback.push({\n                \"fn\": _fnUpdateInfo,\n                \"sName\": \"information\"\n            });\n\n            n\n                    .attr('role', 'status')\n                    .attr('aria-live', 'polite');\n\n            // Table is described by our info div\n            $(settings.nTable).attr('aria-describedby', tid + '_info');\n        }\n\n        return n[0];\n    }\n\n    /**\n     * Update the information elements in the display\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnUpdateInfo(settings)\n    {\n        /* Show information about the table */\n        var nodes = settings.aanFeatures.i;\n        if (nodes.length === 0) {\n            return;\n        }\n\n        var\n                lang = settings.oLanguage,\n                start = settings._iDisplayStart + 1,\n                end = settings.fnDisplayEnd(),\n                max = settings.fnRecordsTotal(),\n                total = settings.fnRecordsDisplay(),\n                out = total ?\n                lang.sInfo :\n                lang.sInfoEmpty;\n\n        if (total !== max) {\n            /* Record set after filtering */\n            out += ' ' + lang.sInfoFiltered;\n        }\n\n        // Convert the macros\n        out += lang.sInfoPostFix;\n        out = _fnInfoMacros(settings, out);\n\n        var callback = lang.fnInfoCallback;\n        if (callback !== null) {\n            out = callback.call(settings.oInstance,\n                    settings, start, end, max, total, out\n                    );\n        }\n\n        $(nodes).html(out);\n    }\n\n    function _fnInfoMacros(settings, str)\n    {\n        // When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n        // internally\n        var\n                formatter = settings.fnFormatNumber,\n                start = settings._iDisplayStart + 1,\n                len = settings._iDisplayLength,\n                vis = settings.fnRecordsDisplay(),\n                all = len === -1;\n\n        return str.\n                replace(/_START_/g, formatter.call(settings, start)).\n                replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).\n                replace(/_MAX_/g, formatter.call(settings, settings.fnRecordsTotal())).\n                replace(/_TOTAL_/g, formatter.call(settings, vis)).\n                replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).\n                replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len)));\n    }\n\n    /**\n     * Draw the table for the first time, adding all required features\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnInitialise(settings)\n    {\n        var i, iLen, iAjaxStart = settings.iInitDisplayStart;\n        var columns = settings.aoColumns, column;\n        var features = settings.oFeatures;\n        var deferLoading = settings.bDeferLoading; // value modified by the draw\n\n        /* Ensure that the table data is fully initialised */\n        if (!settings.bInitialised) {\n            setTimeout(function () {\n                _fnInitialise(settings);\n            }, 200);\n            return;\n        }\n\n        /* Show the display HTML options */\n        _fnAddOptionsHtml(settings);\n\n        /* Build and draw the header / footer for the table */\n        _fnBuildHead(settings);\n        _fnDrawHead(settings, settings.aoHeader);\n        _fnDrawHead(settings, settings.aoFooter);\n\n        /* Okay to show that something is going on now */\n        _fnProcessingDisplay(settings, true);\n\n        /* Calculate sizes for columns */\n        if (features.bAutoWidth) {\n            _fnCalculateColumnWidths(settings);\n        }\n\n        for (i = 0, iLen = columns.length; i < iLen; i++) {\n            column = columns[i];\n\n            if (column.sWidth) {\n                column.nTh.style.width = _fnStringToCss(column.sWidth);\n            }\n        }\n\n        _fnCallbackFire(settings, null, 'preInit', [settings]);\n\n        // If there is default sorting required - let's do it. The sort function\n        // will do the drawing for us. Otherwise we draw the table regardless of the\n        // Ajax source - this allows the table to look initialised for Ajax sourcing\n        // data (show 'loading' message possibly)\n        _fnReDraw(settings);\n\n        // Server-side processing init complete is done by _fnAjaxUpdateDraw\n        var dataSrc = _fnDataSource(settings);\n        if (dataSrc != 'ssp' || deferLoading) {\n            // if there is an ajax source load the data\n            if (dataSrc == 'ajax') {\n                _fnBuildAjax(settings, [], function (json) {\n                    var aData = _fnAjaxDataSrc(settings, json);\n\n                    // Got the data - add it to the table\n                    for (i = 0; i < aData.length; i++) {\n                        _fnAddData(settings, aData[i]);\n                    }\n\n                    // Reset the init display for cookie saving. We've already done\n                    // a filter, and therefore cleared it before. So we need to make\n                    // it appear 'fresh'\n                    settings.iInitDisplayStart = iAjaxStart;\n\n                    _fnReDraw(settings);\n\n                    _fnProcessingDisplay(settings, false);\n                    _fnInitComplete(settings, json);\n                }, settings);\n            }\n            else {\n                _fnProcessingDisplay(settings, false);\n                _fnInitComplete(settings);\n            }\n        }\n    }\n\n    /**\n     * Draw the table for the first time, adding all required features\n     *  @param {object} oSettings dataTables settings object\n     *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n     *    with client-side processing (optional)\n     *  @memberof DataTable#oApi\n     */\n    function _fnInitComplete(settings, json)\n    {\n        settings._bInitComplete = true;\n\n        // When data was added after the initialisation (data or Ajax) we need to\n        // calculate the column sizing\n        if (json || settings.oInit.aaData) {\n            _fnAdjustColumnSizing(settings);\n        }\n\n        _fnCallbackFire(settings, null, 'plugin-init', [settings, json]);\n        _fnCallbackFire(settings, 'aoInitComplete', 'init', [settings, json]);\n    }\n\n    function _fnLengthChange(settings, val)\n    {\n        var len = parseInt(val, 10);\n        settings._iDisplayLength = len;\n\n        _fnLengthOverflow(settings);\n\n        // Fire length change event\n        _fnCallbackFire(settings, null, 'length', [settings, len]);\n    }\n\n    /**\n     * Generate the node required for user display length changing\n     *  @param {object} settings dataTables settings object\n     *  @returns {node} Display length feature node\n     *  @memberof DataTable#oApi\n     */\n    function _fnFeatureHtmlLength(settings)\n    {\n        var\n                classes = settings.oClasses,\n                tableId = settings.sTableId,\n                menu = settings.aLengthMenu,\n                d2 = $.isArray(menu[0]),\n                lengths = d2 ? menu[0] : menu,\n                language = d2 ? menu[1] : menu;\n\n        var select = $('<select/>', {\n            'name': tableId + '_length',\n            'aria-controls': tableId,\n            'class': classes.sLengthSelect\n        });\n\n        for (var i = 0, ien = lengths.length; i < ien; i++) {\n            select[0][ i ] = new Option(language[i], lengths[i]);\n        }\n\n        var div = $('<div><label/></div>').addClass(classes.sLength);\n        if (!settings.aanFeatures.l) {\n            div[0].id = tableId + '_length';\n        }\n\n        div.children().append(\n                settings.oLanguage.sLengthMenu.replace('_MENU_', select[0].outerHTML)\n                );\n\n        // Can't use `select` variable as user might provide their own and the\n        // reference is broken by the use of outerHTML\n        $('select', div)\n                .val(settings._iDisplayLength)\n                .on('change.DT', function (e) {\n                    _fnLengthChange(settings, $(this).val());\n                    _fnDraw(settings);\n                });\n\n        // Update node value whenever anything changes the table's length\n        $(settings.nTable).on('length.dt.DT', function (e, s, len) {\n            if (settings === s) {\n                $('select', div).val(len);\n            }\n        });\n\n        return div[0];\n    }\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Note that most of the paging logic is done in\n     * DataTable.ext.pager\n     */\n\n    /**\n     * Generate the node required for default pagination\n     *  @param {object} oSettings dataTables settings object\n     *  @returns {node} Pagination feature node\n     *  @memberof DataTable#oApi\n     */\n    function _fnFeatureHtmlPaginate(settings)\n    {\n        var\n                type = settings.sPaginationType,\n                plugin = DataTable.ext.pager[ type ],\n                modern = typeof plugin === 'function',\n                redraw = function (settings) {\n                    _fnDraw(settings);\n                },\n                node = $('<div/>').addClass(settings.oClasses.sPaging + type)[0],\n                features = settings.aanFeatures;\n\n        if (!modern) {\n            plugin.fnInit(settings, node, redraw);\n        }\n\n        /* Add a draw callback for the pagination on first instance, to update the paging display */\n        if (!features.p)\n        {\n            node.id = settings.sTableId + '_paginate';\n\n            settings.aoDrawCallback.push({\n                \"fn\": function (settings) {\n                    if (modern) {\n                        var\n                                start = settings._iDisplayStart,\n                                len = settings._iDisplayLength,\n                                visRecords = settings.fnRecordsDisplay(),\n                                all = len === -1,\n                                page = all ? 0 : Math.ceil(start / len),\n                                pages = all ? 1 : Math.ceil(visRecords / len),\n                                buttons = plugin(page, pages),\n                                i, ien;\n\n                        for (i = 0, ien = features.p.length; i < ien; i++) {\n                            _fnRenderer(settings, 'pageButton')(\n                                    settings, features.p[i], i, buttons, page, pages\n                                    );\n                        }\n                    }\n                    else {\n                        plugin.fnUpdate(settings, redraw);\n                    }\n                },\n                \"sName\": \"pagination\"\n            });\n        }\n\n        return node;\n    }\n\n    /**\n     * Alter the display settings to change the page\n     *  @param {object} settings DataTables settings object\n     *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n     *    \"next\" or \"last\" or page number to jump to (integer)\n     *  @param [bool] redraw Automatically draw the update or not\n     *  @returns {bool} true page has changed, false - no change\n     *  @memberof DataTable#oApi\n     */\n    function _fnPageChange(settings, action, redraw)\n    {\n        var\n                start = settings._iDisplayStart,\n                len = settings._iDisplayLength,\n                records = settings.fnRecordsDisplay();\n\n        if (records === 0 || len === -1)\n        {\n            start = 0;\n        }\n        else if (typeof action === \"number\")\n        {\n            start = action * len;\n\n            if (start > records)\n            {\n                start = 0;\n            }\n        }\n        else if (action == \"first\")\n        {\n            start = 0;\n        }\n        else if (action == \"previous\")\n        {\n            start = len >= 0 ?\n                    start - len :\n                    0;\n\n            if (start < 0)\n            {\n                start = 0;\n            }\n        }\n        else if (action == \"next\")\n        {\n            if (start + len < records)\n            {\n                start += len;\n            }\n        }\n        else if (action == \"last\")\n        {\n            start = Math.floor((records - 1) / len) * len;\n        }\n        else\n        {\n            _fnLog(settings, 0, \"Unknown paging action: \" + action, 5);\n        }\n\n        var changed = settings._iDisplayStart !== start;\n        settings._iDisplayStart = start;\n\n        if (changed) {\n            _fnCallbackFire(settings, null, 'page', [settings]);\n\n            if (redraw) {\n                _fnDraw(settings);\n            }\n        }\n\n        return changed;\n    }\n\n    /**\n     * Generate the node required for the processing node\n     *  @param {object} settings dataTables settings object\n     *  @returns {node} Processing element\n     *  @memberof DataTable#oApi\n     */\n    function _fnFeatureHtmlProcessing(settings)\n    {\n        return $('<div/>', {\n            'id': !settings.aanFeatures.r ? settings.sTableId + '_processing' : null,\n            'class': settings.oClasses.sProcessing\n        })\n                .html(settings.oLanguage.sProcessing)\n                .insertBefore(settings.nTable)[0];\n    }\n\n    /**\n     * Display or hide the processing indicator\n     *  @param {object} settings dataTables settings object\n     *  @param {bool} show Show the processing indicator (true) or not (false)\n     *  @memberof DataTable#oApi\n     */\n    function _fnProcessingDisplay(settings, show)\n    {\n        if (settings.oFeatures.bProcessing) {\n            $(settings.aanFeatures.r).css('display', show ? 'block' : 'none');\n        }\n\n        _fnCallbackFire(settings, null, 'processing', [settings, show]);\n    }\n\n    /**\n     * Add any control elements for the table - specifically scrolling\n     *  @param {object} settings dataTables settings object\n     *  @returns {node} Node to add to the DOM\n     *  @memberof DataTable#oApi\n     */\n    function _fnFeatureHtmlTable(settings)\n    {\n        var table = $(settings.nTable);\n\n        // Add the ARIA grid role to the table\n        table.attr('role', 'grid');\n\n        // Scrolling from here on in\n        var scroll = settings.oScroll;\n\n        if (scroll.sX === '' && scroll.sY === '') {\n            return settings.nTable;\n        }\n\n        var scrollX = scroll.sX;\n        var scrollY = scroll.sY;\n        var classes = settings.oClasses;\n        var caption = table.children('caption');\n        var captionSide = caption.length ? caption[0]._captionSide : null;\n        var headerClone = $(table[0].cloneNode(false));\n        var footerClone = $(table[0].cloneNode(false));\n        var footer = table.children('tfoot');\n        var _div = '<div/>';\n        var size = function (s) {\n            return !s ? null : _fnStringToCss(s);\n        };\n\n        if (!footer.length) {\n            footer = null;\n        }\n\n        /*\n         * The HTML structure that we want to generate in this function is:\n         *  div - scroller\n         *    div - scroll head\n         *      div - scroll head inner\n         *        table - scroll head table\n         *          thead - thead\n         *    div - scroll body\n         *      table - table (master table)\n         *        thead - thead clone for sizing\n         *        tbody - tbody\n         *    div - scroll foot\n         *      div - scroll foot inner\n         *        table - scroll foot table\n         *          tfoot - tfoot\n         */\n        var scroller = $(_div, {'class': classes.sScrollWrapper})\n                .append(\n                        $(_div, {'class': classes.sScrollHead})\n                        .css({\n                            overflow: 'hidden',\n                            position: 'relative',\n                            border: 0,\n                            width: scrollX ? size(scrollX) : '100%'\n                        })\n                        .append(\n                                $(_div, {'class': classes.sScrollHeadInner})\n                                .css({\n                                    'box-sizing': 'content-box',\n                                    width: scroll.sXInner || '100%'\n                                })\n                                .append(\n                                        headerClone\n                                        .removeAttr('id')\n                                        .css('margin-left', 0)\n                                        .append(captionSide === 'top' ? caption : null)\n                                        .append(\n                                                table.children('thead')\n                                                )\n                                        )\n                                )\n                        )\n                .append(\n                        $(_div, {'class': classes.sScrollBody})\n                        .css({\n                            position: 'relative',\n                            overflow: 'auto',\n                            width: size(scrollX)\n                        })\n                        .append(table)\n                        );\n\n        if (footer) {\n            scroller.append(\n                    $(_div, {'class': classes.sScrollFoot})\n                    .css({\n                        overflow: 'hidden',\n                        border: 0,\n                        width: scrollX ? size(scrollX) : '100%'\n                    })\n                    .append(\n                            $(_div, {'class': classes.sScrollFootInner})\n                            .append(\n                                    footerClone\n                                    .removeAttr('id')\n                                    .css('margin-left', 0)\n                                    .append(captionSide === 'bottom' ? caption : null)\n                                    .append(\n                                            table.children('tfoot')\n                                            )\n                                    )\n                            )\n                    );\n        }\n\n        var children = scroller.children();\n        var scrollHead = children[0];\n        var scrollBody = children[1];\n        var scrollFoot = footer ? children[2] : null;\n\n        // When the body is scrolled, then we also want to scroll the headers\n        if (scrollX) {\n            $(scrollBody).on('scroll.DT', function (e) {\n                var scrollLeft = this.scrollLeft;\n\n                scrollHead.scrollLeft = scrollLeft;\n\n                if (footer) {\n                    scrollFoot.scrollLeft = scrollLeft;\n                }\n            });\n        }\n\n        $(scrollBody).css(\n                scrollY && scroll.bCollapse ? 'max-height' : 'height',\n                scrollY\n                );\n\n        settings.nScrollHead = scrollHead;\n        settings.nScrollBody = scrollBody;\n        settings.nScrollFoot = scrollFoot;\n\n        // On redraw - align columns\n        settings.aoDrawCallback.push({\n            \"fn\": _fnScrollDraw,\n            \"sName\": \"scrolling\"\n        });\n\n        return scroller[0];\n    }\n\n    /**\n     * Update the header, footer and body tables for resizing - i.e. column\n     * alignment.\n     *\n     * Welcome to the most horrible function DataTables. The process that this\n     * function follows is basically:\n     *   1. Re-create the table inside the scrolling div\n     *   2. Take live measurements from the DOM\n     *   3. Apply the measurements to align the columns\n     *   4. Clean up\n     *\n     *  @param {object} settings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnScrollDraw(settings)\n    {\n        // Given that this is such a monster function, a lot of variables are use\n        // to try and keep the minimised size as small as possible\n        var\n                scroll = settings.oScroll,\n                scrollX = scroll.sX,\n                scrollXInner = scroll.sXInner,\n                scrollY = scroll.sY,\n                barWidth = scroll.iBarWidth,\n                divHeader = $(settings.nScrollHead),\n                divHeaderStyle = divHeader[0].style,\n                divHeaderInner = divHeader.children('div'),\n                divHeaderInnerStyle = divHeaderInner[0].style,\n                divHeaderTable = divHeaderInner.children('table'),\n                divBodyEl = settings.nScrollBody,\n                divBody = $(divBodyEl),\n                divBodyStyle = divBodyEl.style,\n                divFooter = $(settings.nScrollFoot),\n                divFooterInner = divFooter.children('div'),\n                divFooterTable = divFooterInner.children('table'),\n                header = $(settings.nTHead),\n                table = $(settings.nTable),\n                tableEl = table[0],\n                tableStyle = tableEl.style,\n                footer = settings.nTFoot ? $(settings.nTFoot) : null,\n                browser = settings.oBrowser,\n                ie67 = browser.bScrollOversize,\n                dtHeaderCells = _pluck(settings.aoColumns, 'nTh'),\n                headerTrgEls, footerTrgEls,\n                headerSrcEls, footerSrcEls,\n                headerCopy, footerCopy,\n                headerWidths = [], footerWidths = [],\n                headerContent = [], footerContent = [],\n                idx, correction, sanityWidth,\n                zeroOut = function (nSizer) {\n                    var style = nSizer.style;\n                    style.paddingTop = \"0\";\n                    style.paddingBottom = \"0\";\n                    style.borderTopWidth = \"0\";\n                    style.borderBottomWidth = \"0\";\n                    style.height = 0;\n                };\n\n        // If the scrollbar visibility has changed from the last draw, we need to\n        // adjust the column sizes as the table width will have changed to account\n        // for the scrollbar\n        var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\n        if (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined) {\n            settings.scrollBarVis = scrollBarVis;\n            _fnAdjustColumnSizing(settings);\n            return; // adjust column sizing will call this function again\n        }\n        else {\n            settings.scrollBarVis = scrollBarVis;\n        }\n\n        /*\n         * 1. Re-create the table inside the scrolling div\n         */\n\n        // Remove the old minimised thead and tfoot elements in the inner table\n        table.children('thead, tfoot').remove();\n\n        if (footer) {\n            footerCopy = footer.clone().prependTo(table);\n            footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized\n            footerSrcEls = footerCopy.find('tr');\n        }\n\n        // Clone the current header and footer elements and then place it into the inner table\n        headerCopy = header.clone().prependTo(table);\n        headerTrgEls = header.find('tr'); // original header is in its own table\n        headerSrcEls = headerCopy.find('tr');\n        headerCopy.find('th, td').removeAttr('tabindex');\n\n        /*\n         * 2. Take live measurements from the DOM - do not alter the DOM itself!\n         */\n\n        // Remove old sizing and apply the calculated column widths\n        // Get the unique column headers in the newly created (cloned) header. We want to apply the\n        // calculated sizes to this header\n        if (!scrollX)\n        {\n            divBodyStyle.width = '100%';\n            divHeader[0].style.width = '100%';\n        }\n\n        $.each(_fnGetUniqueThs(settings, headerCopy), function (i, el) {\n            idx = _fnVisibleToColumnIndex(settings, i);\n            el.style.width = settings.aoColumns[idx].sWidth;\n        });\n\n        if (footer) {\n            _fnApplyToChildren(function (n) {\n                n.style.width = \"\";\n            }, footerSrcEls);\n        }\n\n        // Size the table as a whole\n        sanityWidth = table.outerWidth();\n        if (scrollX === \"\") {\n            // No x scrolling\n            tableStyle.width = \"100%\";\n\n            // IE7 will make the width of the table when 100% include the scrollbar\n            // - which is shouldn't. When there is a scrollbar we need to take this\n            // into account.\n            if (ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||\n                    divBody.css('overflow-y') == \"scroll\")\n                    ) {\n                tableStyle.width = _fnStringToCss(table.outerWidth() - barWidth);\n            }\n\n            // Recalculate the sanity width\n            sanityWidth = table.outerWidth();\n        }\n        else if (scrollXInner !== \"\") {\n            // legacy x scroll inner has been given - use it\n            tableStyle.width = _fnStringToCss(scrollXInner);\n\n            // Recalculate the sanity width\n            sanityWidth = table.outerWidth();\n        }\n\n        // Hidden header should have zero height, so remove padding and borders. Then\n        // set the width based on the real headers\n\n        // Apply all styles in one pass\n        _fnApplyToChildren(zeroOut, headerSrcEls);\n\n        // Read all widths in next pass\n        _fnApplyToChildren(function (nSizer) {\n            headerContent.push(nSizer.innerHTML);\n            headerWidths.push(_fnStringToCss($(nSizer).css('width')));\n        }, headerSrcEls);\n\n        // Apply all widths in final pass\n        _fnApplyToChildren(function (nToSize, i) {\n            // Only apply widths to the DataTables detected header cells - this\n            // prevents complex headers from having contradictory sizes applied\n            if ($.inArray(nToSize, dtHeaderCells) !== -1) {\n                nToSize.style.width = headerWidths[i];\n            }\n        }, headerTrgEls);\n\n        $(headerSrcEls).height(0);\n\n        /* Same again with the footer if we have one */\n        if (footer)\n        {\n            _fnApplyToChildren(zeroOut, footerSrcEls);\n\n            _fnApplyToChildren(function (nSizer) {\n                footerContent.push(nSizer.innerHTML);\n                footerWidths.push(_fnStringToCss($(nSizer).css('width')));\n            }, footerSrcEls);\n\n            _fnApplyToChildren(function (nToSize, i) {\n                nToSize.style.width = footerWidths[i];\n            }, footerTrgEls);\n\n            $(footerSrcEls).height(0);\n        }\n\n        /*\n         * 3. Apply the measurements\n         */\n\n        // \"Hide\" the header and footer that we used for the sizing. We need to keep\n        // the content of the cell so that the width applied to the header and body\n        // both match, but we want to hide it completely. We want to also fix their\n        // width to what they currently are\n        _fnApplyToChildren(function (nSizer, i) {\n            nSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">' + headerContent[i] + '</div>';\n            nSizer.style.width = headerWidths[i];\n        }, headerSrcEls);\n\n        if (footer)\n        {\n            _fnApplyToChildren(function (nSizer, i) {\n                nSizer.innerHTML = '<div class=\"dataTables_sizing\" style=\"height:0;overflow:hidden;\">' + footerContent[i] + '</div>';\n                nSizer.style.width = footerWidths[i];\n            }, footerSrcEls);\n        }\n\n        // Sanity check that the table is of a sensible width. If not then we are going to get\n        // misalignment - try to prevent this by not allowing the table to shrink below its min width\n        if (table.outerWidth() < sanityWidth)\n        {\n            // The min width depends upon if we have a vertical scrollbar visible or not */\n            correction = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||\n                    divBody.css('overflow-y') == \"scroll\")) ?\n                    sanityWidth + barWidth :\n                    sanityWidth;\n\n            // IE6/7 are a law unto themselves...\n            if (ie67 && (divBodyEl.scrollHeight >\n                    divBodyEl.offsetHeight || divBody.css('overflow-y') == \"scroll\")\n                    ) {\n                tableStyle.width = _fnStringToCss(correction - barWidth);\n            }\n\n            // And give the user a warning that we've stopped the table getting too small\n            if (scrollX === \"\" || scrollXInner !== \"\") {\n                _fnLog(settings, 1, 'Possible column misalignment', 6);\n            }\n        }\n        else\n        {\n            correction = '100%';\n        }\n\n        // Apply to the container elements\n        divBodyStyle.width = _fnStringToCss(correction);\n        divHeaderStyle.width = _fnStringToCss(correction);\n\n        if (footer) {\n            settings.nScrollFoot.style.width = _fnStringToCss(correction);\n        }\n\n        /*\n         * 4. Clean up\n         */\n        if (!scrollY) {\n            /* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n             * the scrollbar height from the visible display, rather than adding it on. We need to\n             * set the height in order to sort this. Don't want to do it in any other browsers.\n             */\n            if (ie67) {\n                divBodyStyle.height = _fnStringToCss(tableEl.offsetHeight + barWidth);\n            }\n        }\n\n        /* Finally set the width's of the header and footer tables */\n        var iOuterWidth = table.outerWidth();\n        divHeaderTable[0].style.width = _fnStringToCss(iOuterWidth);\n        divHeaderInnerStyle.width = _fnStringToCss(iOuterWidth);\n\n        // Figure out if there are scrollbar present - if so then we need a the header and footer to\n        // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n        var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n        var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right');\n        divHeaderInnerStyle[ padding ] = bScrolling ? barWidth + \"px\" : \"0px\";\n\n        if (footer) {\n            divFooterTable[0].style.width = _fnStringToCss(iOuterWidth);\n            divFooterInner[0].style.width = _fnStringToCss(iOuterWidth);\n            divFooterInner[0].style[padding] = bScrolling ? barWidth + \"px\" : \"0px\";\n        }\n\n        // Correct DOM ordering for colgroup - comes before the thead\n        table.children('colgroup').insertBefore(table.children('thead'));\n\n        /* Adjust the position of the header in case we loose the y-scrollbar */\n        divBody.scroll();\n\n        // If sorting or filtering has occurred, jump the scrolling back to the top\n        // only if we aren't holding the position\n        if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n            divBodyEl.scrollTop = 0;\n        }\n    }\n\n    /**\n     * Apply a given function to the display child nodes of an element array (typically\n     * TD children of TR rows\n     *  @param {function} fn Method to apply to the objects\n     *  @param array {nodes} an1 List of elements to look through for display children\n     *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n     *  @memberof DataTable#oApi\n     */\n    function _fnApplyToChildren(fn, an1, an2)\n    {\n        var index = 0, i = 0, iLen = an1.length;\n        var nNode1, nNode2;\n\n        while (i < iLen) {\n            nNode1 = an1[i].firstChild;\n            nNode2 = an2 ? an2[i].firstChild : null;\n\n            while (nNode1) {\n                if (nNode1.nodeType === 1) {\n                    if (an2) {\n                        fn(nNode1, nNode2, index);\n                    }\n                    else {\n                        fn(nNode1, index);\n                    }\n\n                    index++;\n                }\n\n                nNode1 = nNode1.nextSibling;\n                nNode2 = an2 ? nNode2.nextSibling : null;\n            }\n\n            i++;\n        }\n    }\n\n    var __re_html_remove = /<.*?>/g;\n\n    /**\n     * Calculate the width of columns for the table\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnCalculateColumnWidths(oSettings)\n    {\n        var\n                table = oSettings.nTable,\n                columns = oSettings.aoColumns,\n                scroll = oSettings.oScroll,\n                scrollY = scroll.sY,\n                scrollX = scroll.sX,\n                scrollXInner = scroll.sXInner,\n                columnCount = columns.length,\n                visibleColumns = _fnGetColumns(oSettings, 'bVisible'),\n                headerCells = $('th', oSettings.nTHead),\n                tableWidthAttr = table.getAttribute('width'), // from DOM element\n                tableContainer = table.parentNode,\n                userInputs = false,\n                i, column, columnIdx, width, outerWidth,\n                browser = oSettings.oBrowser,\n                ie67 = browser.bScrollOversize;\n\n        var styleWidth = table.style.width;\n        if (styleWidth && styleWidth.indexOf('%') !== -1) {\n            tableWidthAttr = styleWidth;\n        }\n\n        /* Convert any user input sizes into pixel sizes */\n        for (i = 0; i < visibleColumns.length; i++) {\n            column = columns[ visibleColumns[i] ];\n\n            if (column.sWidth !== null) {\n                column.sWidth = _fnConvertToWidth(column.sWidthOrig, tableContainer);\n\n                userInputs = true;\n            }\n        }\n\n        /* If the number of columns in the DOM equals the number that we have to\n         * process in DataTables, then we can use the offsets that are created by\n         * the web- browser. No custom sizes can be set in order for this to happen,\n         * nor scrolling used\n         */\n        if (ie67 || !userInputs && !scrollX && !scrollY &&\n                columnCount == _fnVisbleColumns(oSettings) &&\n                columnCount == headerCells.length\n                ) {\n            for (i = 0; i < columnCount; i++) {\n                var colIdx = _fnVisibleToColumnIndex(oSettings, i);\n\n                if (colIdx !== null) {\n                    columns[ colIdx ].sWidth = _fnStringToCss(headerCells.eq(i).width());\n                }\n            }\n        }\n        else\n        {\n            // Otherwise construct a single row, worst case, table with the widest\n            // node in the data, assign any user defined widths, then insert it into\n            // the DOM and allow the browser to do all the hard work of calculating\n            // table widths\n            var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table\n                    .css('visibility', 'hidden')\n                    .removeAttr('id');\n\n            // Clean up the table body\n            tmpTable.find('tbody tr').remove();\n            var tr = $('<tr/>').appendTo(tmpTable.find('tbody'));\n\n            // Clone the table header and footer - we can't use the header / footer\n            // from the cloned table, since if scrolling is active, the table's\n            // real header and footer are contained in different table tags\n            tmpTable.find('thead, tfoot').remove();\n            tmpTable\n                    .append($(oSettings.nTHead).clone())\n                    .append($(oSettings.nTFoot).clone());\n\n            // Remove any assigned widths from the footer (from scrolling)\n            tmpTable.find('tfoot th, tfoot td').css('width', '');\n\n            // Apply custom sizing to the cloned header\n            headerCells = _fnGetUniqueThs(oSettings, tmpTable.find('thead')[0]);\n\n            for (i = 0; i < visibleColumns.length; i++) {\n                column = columns[ visibleColumns[i] ];\n\n                headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?\n                        _fnStringToCss(column.sWidthOrig) :\n                        '';\n\n                // For scrollX we need to force the column width otherwise the\n                // browser will collapse it. If this width is smaller than the\n                // width the column requires, then it will have no effect\n                if (column.sWidthOrig && scrollX) {\n                    $(headerCells[i]).append($('<div/>').css({\n                        width: column.sWidthOrig,\n                        margin: 0,\n                        padding: 0,\n                        border: 0,\n                        height: 1\n                    }));\n                }\n            }\n\n            // Find the widest cell for each column and put it into the table\n            if (oSettings.aoData.length) {\n                for (i = 0; i < visibleColumns.length; i++) {\n                    columnIdx = visibleColumns[i];\n                    column = columns[ columnIdx ];\n\n                    $(_fnGetWidestNode(oSettings, columnIdx))\n                            .clone(false)\n                            .append(column.sContentPadding)\n                            .appendTo(tr);\n                }\n            }\n\n            // Tidy the temporary table - remove name attributes so there aren't\n            // duplicated in the dom (radio elements for example)\n            $('[name]', tmpTable).removeAttr('name');\n\n            // Table has been built, attach to the document so we can work with it.\n            // A holding element is used, positioned at the top of the container\n            // with minimal height, so it has no effect on if the container scrolls\n            // or not. Otherwise it might trigger scrolling when it actually isn't\n            // needed\n            var holder = $('<div/>').css(scrollX || scrollY ?\n                    {\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        height: 1,\n                        right: 0,\n                        overflow: 'hidden'\n                    } :\n                    {}\n            )\n                    .append(tmpTable)\n                    .appendTo(tableContainer);\n\n            // When scrolling (X or Y) we want to set the width of the table as \n            // appropriate. However, when not scrolling leave the table width as it\n            // is. This results in slightly different, but I think correct behaviour\n            if (scrollX && scrollXInner) {\n                tmpTable.width(scrollXInner);\n            }\n            else if (scrollX) {\n                tmpTable.css('width', 'auto');\n                tmpTable.removeAttr('width');\n\n                // If there is no width attribute or style, then allow the table to\n                // collapse\n                if (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {\n                    tmpTable.width(tableContainer.clientWidth);\n                }\n            }\n            else if (scrollY) {\n                tmpTable.width(tableContainer.clientWidth);\n            }\n            else if (tableWidthAttr) {\n                tmpTable.width(tableWidthAttr);\n            }\n\n            // Get the width of each column in the constructed table - we need to\n            // know the inner width (so it can be assigned to the other table's\n            // cells) and the outer width so we can calculate the full width of the\n            // table. This is safe since DataTables requires a unique cell for each\n            // column, but if ever a header can span multiple columns, this will\n            // need to be modified.\n            var total = 0;\n            for (i = 0; i < visibleColumns.length; i++) {\n                var cell = $(headerCells[i]);\n                var border = cell.outerWidth() - cell.width();\n\n                // Use getBounding... where possible (not IE8-) because it can give\n                // sub-pixel accuracy, which we then want to round up!\n                var bounding = browser.bBounding ?\n                        Math.ceil(headerCells[i].getBoundingClientRect().width) :\n                        cell.outerWidth();\n\n                // Total is tracked to remove any sub-pixel errors as the outerWidth\n                // of the table might not equal the total given here (IE!).\n                total += bounding;\n\n                // Width for each column to use\n                columns[ visibleColumns[i] ].sWidth = _fnStringToCss(bounding - border);\n            }\n\n            table.style.width = _fnStringToCss(total);\n\n            // Finished with the table - ditch it\n            holder.remove();\n        }\n\n        // If there is a width attr, we want to attach an event listener which\n        // allows the table sizing to automatically adjust when the window is\n        // resized. Use the width attr rather than CSS, since we can't know if the\n        // CSS is a relative value or absolute - DOM read is always px.\n        if (tableWidthAttr) {\n            table.style.width = _fnStringToCss(tableWidthAttr);\n        }\n\n        if ((tableWidthAttr || scrollX) && !oSettings._reszEvt) {\n            var bindResize = function () {\n                $(window).on('resize.DT-' + oSettings.sInstance, _fnThrottle(function () {\n                    _fnAdjustColumnSizing(oSettings);\n                }));\n            };\n\n            // IE6/7 will crash if we bind a resize event handler on page load.\n            // To be removed in 1.11 which drops IE6/7 support\n            if (ie67) {\n                setTimeout(bindResize, 1000);\n            }\n            else {\n                bindResize();\n            }\n\n            oSettings._reszEvt = true;\n        }\n    }\n\n    /**\n     * Throttle the calls to a function. Arguments and context are maintained for\n     * the throttled function\n     *  @param {function} fn Function to be called\n     *  @param {int} [freq=200] call frequency in mS\n     *  @returns {function} wrapped function\n     *  @memberof DataTable#oApi\n     */\n    var _fnThrottle = DataTable.util.throttle;\n\n    /**\n     * Convert a CSS unit width to pixels (e.g. 2em)\n     *  @param {string} width width to be converted\n     *  @param {node} parent parent to get the with for (required for relative widths) - optional\n     *  @returns {int} width in pixels\n     *  @memberof DataTable#oApi\n     */\n    function _fnConvertToWidth(width, parent)\n    {\n        if (!width) {\n            return 0;\n        }\n\n        var n = $('<div/>')\n                .css('width', _fnStringToCss(width))\n                .appendTo(parent || document.body);\n\n        var val = n[0].offsetWidth;\n        n.remove();\n\n        return val;\n    }\n\n    /**\n     * Get the widest node\n     *  @param {object} settings dataTables settings object\n     *  @param {int} colIdx column of interest\n     *  @returns {node} widest table node\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetWidestNode(settings, colIdx)\n    {\n        var idx = _fnGetMaxLenString(settings, colIdx);\n        if (idx < 0) {\n            return null;\n        }\n\n        var data = settings.aoData[ idx ];\n        return !data.nTr ? // Might not have been created when deferred rendering\n                $('<td/>').html(_fnGetCellData(settings, idx, colIdx, 'display'))[0] :\n                data.anCells[ colIdx ];\n    }\n\n    /**\n     * Get the maximum strlen for each data column\n     *  @param {object} settings dataTables settings object\n     *  @param {int} colIdx column of interest\n     *  @returns {string} max string length for each column\n     *  @memberof DataTable#oApi\n     */\n    function _fnGetMaxLenString(settings, colIdx)\n    {\n        var s, max = -1, maxIdx = -1;\n\n        for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n            s = _fnGetCellData(settings, i, colIdx, 'display') + '';\n            s = s.replace(__re_html_remove, '');\n            s = s.replace(/&nbsp;/g, ' ');\n\n            if (s.length > max) {\n                max = s.length;\n                maxIdx = i;\n            }\n        }\n\n        return maxIdx;\n    }\n\n    /**\n     * Append a CSS unit (only if required) to a string\n     *  @param {string} value to css-ify\n     *  @returns {string} value with css unit\n     *  @memberof DataTable#oApi\n     */\n    function _fnStringToCss(s)\n    {\n        if (s === null) {\n            return '0px';\n        }\n\n        if (typeof s == 'number') {\n            return s < 0 ?\n                    '0px' :\n                    s + 'px';\n        }\n\n        // Check it has a unit character already\n        return s.match(/\\d$/) ?\n                s + 'px' :\n                s;\n    }\n\n    function _fnSortFlatten(settings)\n    {\n        var\n                i, iLen, k, kLen,\n                aSort = [],\n                aiOrig = [],\n                aoColumns = settings.aoColumns,\n                aDataSort, iCol, sType, srcCol,\n                fixed = settings.aaSortingFixed,\n                fixedObj = $.isPlainObject(fixed),\n                nestedSort = [],\n                add = function (a) {\n                    if (a.length && !$.isArray(a[0])) {\n                        // 1D array\n                        nestedSort.push(a);\n                    }\n                    else {\n                        // 2D array\n                        $.merge(nestedSort, a);\n                    }\n                };\n\n        // Build the sort array, with pre-fix and post-fix options if they have been\n        // specified\n        if ($.isArray(fixed)) {\n            add(fixed);\n        }\n\n        if (fixedObj && fixed.pre) {\n            add(fixed.pre);\n        }\n\n        add(settings.aaSorting);\n\n        if (fixedObj && fixed.post) {\n            add(fixed.post);\n        }\n\n        for (i = 0; i < nestedSort.length; i++)\n        {\n            srcCol = nestedSort[i][0];\n            aDataSort = aoColumns[ srcCol ].aDataSort;\n\n            for (k = 0, kLen = aDataSort.length; k < kLen; k++)\n            {\n                iCol = aDataSort[k];\n                sType = aoColumns[ iCol ].sType || 'string';\n\n                if (nestedSort[i]._idx === undefined) {\n                    nestedSort[i]._idx = $.inArray(nestedSort[i][1], aoColumns[iCol].asSorting);\n                }\n\n                aSort.push({\n                    src: srcCol,\n                    col: iCol,\n                    dir: nestedSort[i][1],\n                    index: nestedSort[i]._idx,\n                    type: sType,\n                    formatter: DataTable.ext.type.order[ sType + \"-pre\" ]\n                });\n            }\n        }\n\n        return aSort;\n    }\n\n    /**\n     * Change the order of the table\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     *  @todo This really needs split up!\n     */\n    function _fnSort(oSettings)\n    {\n        var\n                i, ien, iLen, j, jLen, k, kLen,\n                sDataType, nTh,\n                aiOrig = [],\n                oExtSort = DataTable.ext.type.order,\n                aoData = oSettings.aoData,\n                aoColumns = oSettings.aoColumns,\n                aDataSort, data, iCol, sType, oSort,\n                formatters = 0,\n                sortCol,\n                displayMaster = oSettings.aiDisplayMaster,\n                aSort;\n\n        // Resolve any column types that are unknown due to addition or invalidation\n        // @todo Can this be moved into a 'data-ready' handler which is called when\n        //   data is going to be used in the table?\n        _fnColumnTypes(oSettings);\n\n        aSort = _fnSortFlatten(oSettings);\n\n        for (i = 0, ien = aSort.length; i < ien; i++) {\n            sortCol = aSort[i];\n\n            // Track if we can use the fast sort algorithm\n            if (sortCol.formatter) {\n                formatters++;\n            }\n\n            // Load the data needed for the sort, for each cell\n            _fnSortData(oSettings, sortCol.col);\n        }\n\n        /* No sorting required if server-side or no sorting array */\n        if (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0)\n        {\n            // Create a value - key array of the current row positions such that we can use their\n            // current position during the sort, if values match, in order to perform stable sorting\n            for (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n                aiOrig[ displayMaster[i] ] = i;\n            }\n\n            /* Do the sort - here we want multi-column sorting based on a given data source (column)\n             * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n             * follow on it's own, but this is what we want (example two column sorting):\n             *  fnLocalSorting = function(a,b){\n             *    var iTest;\n             *    iTest = oSort['string-asc']('data11', 'data12');\n             *      if (iTest !== 0)\n             *        return iTest;\n             *    iTest = oSort['numeric-desc']('data21', 'data22');\n             *    if (iTest !== 0)\n             *      return iTest;\n             *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n             *  }\n             * Basically we have a test for each sorting column, if the data in that column is equal,\n             * test the next column. If all columns match, then we use a numeric sort on the row\n             * positions in the original data array to provide a stable sort.\n             *\n             * Note - I know it seems excessive to have two sorting methods, but the first is around\n             * 15% faster, so the second is only maintained for backwards compatibility with sorting\n             * methods which do not have a pre-sort formatting function.\n             */\n            if (formatters === aSort.length) {\n                // All sort types have formatting functions\n                displayMaster.sort(function (a, b) {\n                    var\n                            x, y, k, test, sort,\n                            len = aSort.length,\n                            dataA = aoData[a]._aSortData,\n                            dataB = aoData[b]._aSortData;\n\n                    for (k = 0; k < len; k++) {\n                        sort = aSort[k];\n\n                        x = dataA[ sort.col ];\n                        y = dataB[ sort.col ];\n\n                        test = x < y ? -1 : x > y ? 1 : 0;\n                        if (test !== 0) {\n                            return sort.dir === 'asc' ? test : -test;\n                        }\n                    }\n\n                    x = aiOrig[a];\n                    y = aiOrig[b];\n                    return x < y ? -1 : x > y ? 1 : 0;\n                });\n            }\n            else {\n                // Depreciated - remove in 1.11 (providing a plug-in option)\n                // Not all sort types have formatting methods, so we have to call their sorting\n                // methods.\n                displayMaster.sort(function (a, b) {\n                    var\n                            x, y, k, l, test, sort, fn,\n                            len = aSort.length,\n                            dataA = aoData[a]._aSortData,\n                            dataB = aoData[b]._aSortData;\n\n                    for (k = 0; k < len; k++) {\n                        sort = aSort[k];\n\n                        x = dataA[ sort.col ];\n                        y = dataB[ sort.col ];\n\n                        fn = oExtSort[ sort.type + \"-\" + sort.dir ] || oExtSort[ \"string-\" + sort.dir ];\n                        test = fn(x, y);\n                        if (test !== 0) {\n                            return test;\n                        }\n                    }\n\n                    x = aiOrig[a];\n                    y = aiOrig[b];\n                    return x < y ? -1 : x > y ? 1 : 0;\n                });\n            }\n        }\n\n        /* Tell the draw function that we have sorted the data */\n        oSettings.bSorted = true;\n    }\n\n    function _fnSortAria(settings)\n    {\n        var label;\n        var nextSort;\n        var columns = settings.aoColumns;\n        var aSort = _fnSortFlatten(settings);\n        var oAria = settings.oLanguage.oAria;\n\n        // ARIA attributes - need to loop all columns, to update all (removing old\n        // attributes as needed)\n        for (var i = 0, iLen = columns.length; i < iLen; i++)\n        {\n            var col = columns[i];\n            var asSorting = col.asSorting;\n            var sTitle = col.sTitle.replace(/<.*?>/g, \"\");\n            var th = col.nTh;\n\n            // IE7 is throwing an error when setting these properties with jQuery's\n            // attr() and removeAttr() methods...\n            th.removeAttribute('aria-sort');\n\n            /* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n            if (col.bSortable) {\n                if (aSort.length > 0 && aSort[0].col == i) {\n                    th.setAttribute('aria-sort', aSort[0].dir == \"asc\" ? \"ascending\" : \"descending\");\n                    nextSort = asSorting[ aSort[0].index + 1 ] || asSorting[0];\n                }\n                else {\n                    nextSort = asSorting[0];\n                }\n\n                label = sTitle + (nextSort === \"asc\" ?\n                        oAria.sSortAscending :\n                        oAria.sSortDescending\n                        );\n            }\n            else {\n                label = sTitle;\n            }\n\n            th.setAttribute('aria-label', label);\n        }\n    }\n\n    /**\n     * Function to run on user sort request\n     *  @param {object} settings dataTables settings object\n     *  @param {node} attachTo node to attach the handler to\n     *  @param {int} colIdx column sorting index\n     *  @param {boolean} [append=false] Append the requested sort to the existing\n     *    sort if true (i.e. multi-column sort)\n     *  @param {function} [callback] callback function\n     *  @memberof DataTable#oApi\n     */\n    function _fnSortListener(settings, colIdx, append, callback)\n    {\n        var col = settings.aoColumns[ colIdx ];\n        var sorting = settings.aaSorting;\n        var asSorting = col.asSorting;\n        var nextSortIdx;\n        var next = function (a, overflow) {\n            var idx = a._idx;\n            if (idx === undefined) {\n                idx = $.inArray(a[1], asSorting);\n            }\n\n            return idx + 1 < asSorting.length ?\n                    idx + 1 :\n                    overflow ?\n                    null :\n                    0;\n        };\n\n        // Convert to 2D array if needed\n        if (typeof sorting[0] === 'number') {\n            sorting = settings.aaSorting = [sorting];\n        }\n\n        // If appending the sort then we are multi-column sorting\n        if (append && settings.oFeatures.bSortMulti) {\n            // Are we already doing some kind of sort on this column?\n            var sortIdx = $.inArray(colIdx, _pluck(sorting, '0'));\n\n            if (sortIdx !== -1) {\n                // Yes, modify the sort\n                nextSortIdx = next(sorting[sortIdx], true);\n\n                if (nextSortIdx === null && sorting.length === 1) {\n                    nextSortIdx = 0; // can't remove sorting completely\n                }\n\n                if (nextSortIdx === null) {\n                    sorting.splice(sortIdx, 1);\n                }\n                else {\n                    sorting[sortIdx][1] = asSorting[ nextSortIdx ];\n                    sorting[sortIdx]._idx = nextSortIdx;\n                }\n            }\n            else {\n                // No sort on this column yet\n                sorting.push([colIdx, asSorting[0], 0]);\n                sorting[sorting.length - 1]._idx = 0;\n            }\n        }\n        else if (sorting.length && sorting[0][0] == colIdx) {\n            // Single column - already sorting on this column, modify the sort\n            nextSortIdx = next(sorting[0]);\n\n            sorting.length = 1;\n            sorting[0][1] = asSorting[ nextSortIdx ];\n            sorting[0]._idx = nextSortIdx;\n        }\n        else {\n            // Single column - sort only on this column\n            sorting.length = 0;\n            sorting.push([colIdx, asSorting[0]]);\n            sorting[0]._idx = 0;\n        }\n\n        // Run the sort by calling a full redraw\n        _fnReDraw(settings);\n\n        // callback used for async user interaction\n        if (typeof callback == 'function') {\n            callback(settings);\n        }\n    }\n\n    /**\n     * Attach a sort handler (click) to a node\n     *  @param {object} settings dataTables settings object\n     *  @param {node} attachTo node to attach the handler to\n     *  @param {int} colIdx column sorting index\n     *  @param {function} [callback] callback function\n     *  @memberof DataTable#oApi\n     */\n    function _fnSortAttachListener(settings, attachTo, colIdx, callback)\n    {\n        var col = settings.aoColumns[ colIdx ];\n\n        _fnBindAction(attachTo, {}, function (e) {\n            /* If the column is not sortable - don't to anything */\n            if (col.bSortable === false) {\n                return;\n            }\n\n            // If processing is enabled use a timeout to allow the processing\n            // display to be shown - otherwise to it synchronously\n            if (settings.oFeatures.bProcessing) {\n                _fnProcessingDisplay(settings, true);\n\n                setTimeout(function () {\n                    _fnSortListener(settings, colIdx, e.shiftKey, callback);\n\n                    // In server-side processing, the draw callback will remove the\n                    // processing display\n                    if (_fnDataSource(settings) !== 'ssp') {\n                        _fnProcessingDisplay(settings, false);\n                    }\n                }, 0);\n            }\n            else {\n                _fnSortListener(settings, colIdx, e.shiftKey, callback);\n            }\n        });\n    }\n\n    /**\n     * Set the sorting classes on table's body, Note: it is safe to call this function\n     * when bSort and bSortClasses are false\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnSortingClasses(settings)\n    {\n        var oldSort = settings.aLastSort;\n        var sortClass = settings.oClasses.sSortColumn;\n        var sort = _fnSortFlatten(settings);\n        var features = settings.oFeatures;\n        var i, ien, colIdx;\n\n        if (features.bSort && features.bSortClasses) {\n            // Remove old sorting classes\n            for (i = 0, ien = oldSort.length; i < ien; i++) {\n                colIdx = oldSort[i].src;\n\n                // Remove column sorting\n                $(_pluck(settings.aoData, 'anCells', colIdx))\n                        .removeClass(sortClass + (i < 2 ? i + 1 : 3));\n            }\n\n            // Add new column sorting\n            for (i = 0, ien = sort.length; i < ien; i++) {\n                colIdx = sort[i].src;\n\n                $(_pluck(settings.aoData, 'anCells', colIdx))\n                        .addClass(sortClass + (i < 2 ? i + 1 : 3));\n            }\n        }\n\n        settings.aLastSort = sort;\n    }\n\n    // Get the data to sort a column, be it from cache, fresh (populating the\n    // cache), or from a sort formatter\n    function _fnSortData(settings, idx)\n    {\n        // Custom sorting function - provided by the sort data type\n        var column = settings.aoColumns[ idx ];\n        var customSort = DataTable.ext.order[ column.sSortDataType ];\n        var customData;\n\n        if (customSort) {\n            customData = customSort.call(settings.oInstance, settings, idx,\n                    _fnColumnIndexToVisible(settings, idx)\n                    );\n        }\n\n        // Use / populate cache\n        var row, cellData;\n        var formatter = DataTable.ext.type.order[ column.sType + \"-pre\" ];\n\n        for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n            row = settings.aoData[i];\n\n            if (!row._aSortData) {\n                row._aSortData = [];\n            }\n\n            if (!row._aSortData[idx] || customSort) {\n                cellData = customSort ?\n                        customData[i] : // If there was a custom sort function, use data from there\n                        _fnGetCellData(settings, i, idx, 'sort');\n\n                row._aSortData[ idx ] = formatter ?\n                        formatter(cellData) :\n                        cellData;\n            }\n        }\n    }\n\n    /**\n     * Save the state of a table\n     *  @param {object} oSettings dataTables settings object\n     *  @memberof DataTable#oApi\n     */\n    function _fnSaveState(settings)\n    {\n        if (!settings.oFeatures.bStateSave || settings.bDestroying)\n        {\n            return;\n        }\n\n        /* Store the interesting variables */\n        var state = {\n            time: +new Date(),\n            start: settings._iDisplayStart,\n            length: settings._iDisplayLength,\n            order: $.extend(true, [], settings.aaSorting),\n            search: _fnSearchToCamel(settings.oPreviousSearch),\n            columns: $.map(settings.aoColumns, function (col, i) {\n                return {\n                    visible: col.bVisible,\n                    search: _fnSearchToCamel(settings.aoPreSearchCols[i])\n                };\n            })\n        };\n\n        _fnCallbackFire(settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state]);\n\n        settings.oSavedState = state;\n        settings.fnStateSaveCallback.call(settings.oInstance, settings, state);\n    }\n\n    /**\n     * Attempt to load a saved table state\n     *  @param {object} oSettings dataTables settings object\n     *  @param {object} oInit DataTables init object so we can override settings\n     *  @param {function} callback Callback to execute when the state has been loaded\n     *  @memberof DataTable#oApi\n     */\n    function _fnLoadState(settings, oInit, callback)\n    {\n        var i, ien;\n        var columns = settings.aoColumns;\n        var loaded = function (s) {\n            if (!s || !s.time) {\n                callback();\n                return;\n            }\n\n            // Allow custom and plug-in manipulation functions to alter the saved data set and\n            // cancelling of loading by returning false\n            var abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, state]);\n            if ($.inArray(false, abStateLoad) !== -1) {\n                callback();\n                return;\n            }\n\n            // Reject old data\n            var duration = settings.iStateDuration;\n            if (duration > 0 && s.time < +new Date() - (duration * 1000)) {\n                callback();\n                return;\n            }\n\n            // Number of columns have changed - all bets are off, no restore of settings\n            if (s.columns && columns.length !== s.columns.length) {\n                callback();\n                return;\n            }\n\n            // Store the saved state so it might be accessed at any time\n            settings.oLoadedState = $.extend(true, {}, state);\n\n            // Restore key features - todo - for 1.11 this needs to be done by\n            // subscribed events\n            if (s.start !== undefined) {\n                settings._iDisplayStart = s.start;\n                settings.iInitDisplayStart = s.start;\n            }\n            if (s.length !== undefined) {\n                settings._iDisplayLength = s.length;\n            }\n\n            // Order\n            if (s.order !== undefined) {\n                settings.aaSorting = [];\n                $.each(s.order, function (i, col) {\n                    settings.aaSorting.push(col[0] >= columns.length ?\n                            [0, col[1]] :\n                            col\n                            );\n                });\n            }\n\n            // Search\n            if (s.search !== undefined) {\n                $.extend(settings.oPreviousSearch, _fnSearchToHung(s.search));\n            }\n\n            // Columns\n            // \n            if (s.columns) {\n                for (i = 0, ien = s.columns.length; i < ien; i++) {\n                    var col = s.columns[i];\n\n                    // Visibility\n                    if (col.visible !== undefined) {\n                        columns[i].bVisible = col.visible;\n                    }\n\n                    // Search\n                    if (col.search !== undefined) {\n                        $.extend(settings.aoPreSearchCols[i], _fnSearchToHung(col.search));\n                    }\n                }\n            }\n\n            _fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, state]);\n            callback();\n        }\n\n        if (!settings.oFeatures.bStateSave) {\n            callback();\n            return;\n        }\n\n        var state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);\n\n        if (state !== undefined) {\n            loaded(state);\n        }\n        // otherwise, wait for the loaded callback to be executed\n    }\n\n    /**\n     * Return the settings object for a particular table\n     *  @param {node} table table we are using as a dataTable\n     *  @returns {object} Settings object - or null if not found\n     *  @memberof DataTable#oApi\n     */\n    function _fnSettingsFromNode(table)\n    {\n        var settings = DataTable.settings;\n        var idx = $.inArray(table, _pluck(settings, 'nTable'));\n\n        return idx !== -1 ?\n                settings[ idx ] :\n                null;\n    }\n\n    /**\n     * Log an error message\n     *  @param {object} settings dataTables settings object\n     *  @param {int} level log error messages, or display them to the user\n     *  @param {string} msg error message\n     *  @param {int} tn Technical note id to get more information about the error.\n     *  @memberof DataTable#oApi\n     */\n    function _fnLog(settings, level, msg, tn)\n    {\n        msg = 'DataTables warning: ' +\n                (settings ? 'table id=' + settings.sTableId + ' - ' : '') + msg;\n\n        if (tn) {\n            msg += '. For more information about this error, please see ' +\n                    'http://datatables.net/tn/' + tn;\n        }\n\n        if (!level) {\n            // Backwards compatibility pre 1.10\n            var ext = DataTable.ext;\n            var type = ext.sErrMode || ext.errMode;\n\n            if (settings) {\n                _fnCallbackFire(settings, null, 'error', [settings, tn, msg]);\n            }\n\n            if (type == 'alert') {\n                alert(msg);\n            }\n            else if (type == 'throw') {\n                throw new Error(msg);\n            }\n            else if (typeof type == 'function') {\n                type(settings, tn, msg);\n            }\n        }\n        else if (window.console && console.log) {\n            console.log(msg);\n        }\n    }\n\n    /**\n     * See if a property is defined on one object, if so assign it to the other object\n     *  @param {object} ret target object\n     *  @param {object} src source object\n     *  @param {string} name property\n     *  @param {string} [mappedName] name to map too - optional, name used if not given\n     *  @memberof DataTable#oApi\n     */\n    function _fnMap(ret, src, name, mappedName)\n    {\n        if ($.isArray(name)) {\n            $.each(name, function (i, val) {\n                if ($.isArray(val)) {\n                    _fnMap(ret, src, val[0], val[1]);\n                }\n                else {\n                    _fnMap(ret, src, val);\n                }\n            });\n\n            return;\n        }\n\n        if (mappedName === undefined) {\n            mappedName = name;\n        }\n\n        if (src[name] !== undefined) {\n            ret[mappedName] = src[name];\n        }\n    }\n\n    /**\n     * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n     * shallow copy arrays. The reason we need to do this, is that we don't want to\n     * deep copy array init values (such as aaSorting) since the dev wouldn't be\n     * able to override them, but we do want to deep copy arrays.\n     *  @param {object} out Object to extend\n     *  @param {object} extender Object from which the properties will be applied to\n     *      out\n     *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n     *      independent copy with the exception of the `data` or `aaData` parameters\n     *      if they are present. This is so you can pass in a collection to\n     *      DataTables and have that used as your data source without breaking the\n     *      references\n     *  @returns {object} out Reference, just for convenience - out === the return.\n     *  @memberof DataTable#oApi\n     *  @todo This doesn't take account of arrays inside the deep copied objects.\n     */\n    function _fnExtend(out, extender, breakRefs)\n    {\n        var val;\n\n        for (var prop in extender) {\n            if (extender.hasOwnProperty(prop)) {\n                val = extender[prop];\n\n                if ($.isPlainObject(val)) {\n                    if (!$.isPlainObject(out[prop])) {\n                        out[prop] = {};\n                    }\n                    $.extend(true, out[prop], val);\n                }\n                else if (breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val)) {\n                    out[prop] = val.slice();\n                }\n                else {\n                    out[prop] = val;\n                }\n            }\n        }\n\n        return out;\n    }\n\n    /**\n     * Bind an event handers to allow a click or return key to activate the callback.\n     * This is good for accessibility since a return on the keyboard will have the\n     * same effect as a click, if the element has focus.\n     *  @param {element} n Element to bind the action to\n     *  @param {object} oData Data object to pass to the triggered function\n     *  @param {function} fn Callback function for when the event is triggered\n     *  @memberof DataTable#oApi\n     */\n    function _fnBindAction(n, oData, fn)\n    {\n        $(n)\n                .on('click.DT', oData, function (e) {\n                    n.blur(); // Remove focus outline for mouse users\n                    fn(e);\n                })\n                .on('keypress.DT', oData, function (e) {\n                    if (e.which === 13) {\n                        e.preventDefault();\n                        fn(e);\n                    }\n                })\n                .on('selectstart.DT', function () {\n                    /* Take the brutal approach to cancelling text selection */\n                    return false;\n                });\n    }\n\n    /**\n     * Register a callback function. Easily allows a callback function to be added to\n     * an array store of callback functions that can then all be called together.\n     *  @param {object} oSettings dataTables settings object\n     *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n     *  @param {function} fn Function to be called back\n     *  @param {string} sName Identifying name for the callback (i.e. a label)\n     *  @memberof DataTable#oApi\n     */\n    function _fnCallbackReg(oSettings, sStore, fn, sName)\n    {\n        if (fn)\n        {\n            oSettings[sStore].push({\n                \"fn\": fn,\n                \"sName\": sName\n            });\n        }\n    }\n\n    /**\n     * Fire callback functions and trigger events. Note that the loop over the\n     * callback array store is done backwards! Further note that you do not want to\n     * fire off triggers in time sensitive applications (for example cell creation)\n     * as its slow.\n     *  @param {object} settings dataTables settings object\n     *  @param {string} callbackArr Name of the array storage for the callbacks in\n     *      oSettings\n     *  @param {string} eventName Name of the jQuery custom event to trigger. If\n     *      null no trigger is fired\n     *  @param {array} args Array of arguments to pass to the callback function /\n     *      trigger\n     *  @memberof DataTable#oApi\n     */\n    function _fnCallbackFire(settings, callbackArr, eventName, args)\n    {\n        var ret = [];\n\n        if (callbackArr) {\n            ret = $.map(settings[callbackArr].slice().reverse(), function (val, i) {\n                return val.fn.apply(settings.oInstance, args);\n            });\n        }\n\n        if (eventName !== null) {\n            var e = $.Event(eventName + '.dt');\n\n            $(settings.nTable).trigger(e, args);\n\n            ret.push(e.result);\n        }\n\n        return ret;\n    }\n\n    function _fnLengthOverflow(settings)\n    {\n        var\n                start = settings._iDisplayStart,\n                end = settings.fnDisplayEnd(),\n                len = settings._iDisplayLength;\n\n        /* If we have space to show extra rows (backing up from the end point - then do so */\n        if (start >= end)\n        {\n            start = end - len;\n        }\n\n        // Keep the start record on the current page\n        start -= (start % len);\n\n        if (len === -1 || start < 0)\n        {\n            start = 0;\n        }\n\n        settings._iDisplayStart = start;\n    }\n\n    function _fnRenderer(settings, type)\n    {\n        var renderer = settings.renderer;\n        var host = DataTable.ext.renderer[type];\n\n        if ($.isPlainObject(renderer) && renderer[type]) {\n            // Specific renderer for this type. If available use it, otherwise use\n            // the default.\n            return host[renderer[type]] || host._;\n        }\n        else if (typeof renderer === 'string') {\n            // Common renderer - if there is one available for this type use it,\n            // otherwise use the default\n            return host[renderer] || host._;\n        }\n\n        // Use the default\n        return host._;\n    }\n\n    /**\n     * Detect the data source being used for the table. Used to simplify the code\n     * a little (ajax) and to make it compress a little smaller.\n     *\n     *  @param {object} settings dataTables settings object\n     *  @returns {string} Data source\n     *  @memberof DataTable#oApi\n     */\n    function _fnDataSource(settings)\n    {\n        if (settings.oFeatures.bServerSide) {\n            return 'ssp';\n        }\n        else if (settings.ajax || settings.sAjaxSource) {\n            return 'ajax';\n        }\n        return 'dom';\n    }\n\n    /**\n     * Computed structure of the DataTables API, defined by the options passed to\n     * `DataTable.Api.register()` when building the API.\n     *\n     * The structure is built in order to speed creation and extension of the Api\n     * objects since the extensions are effectively pre-parsed.\n     *\n     * The array is an array of objects with the following structure, where this\n     * base array represents the Api prototype base:\n     *\n     *     [\n     *       {\n     *         name:      'data'                -- string   - Property name\n     *         val:       function () {},       -- function - Api method (or undefined if just an object\n     *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n     *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n     *       },\n     *       {\n     *         name:     'row'\n     *         val:       {},\n     *         methodExt: [ ... ],\n     *         propExt:   [\n     *           {\n     *             name:      'data'\n     *             val:       function () {},\n     *             methodExt: [ ... ],\n     *             propExt:   [ ... ]\n     *           },\n     *           ...\n     *         ]\n     *       }\n     *     ]\n     *\n     * @type {Array}\n     * @ignore\n     */\n    var __apiStruct = [];\n\n    /**\n     * `Array.prototype` reference.\n     *\n     * @type object\n     * @ignore\n     */\n    var __arrayProto = Array.prototype;\n\n    /**\n     * Abstraction for `context` parameter of the `Api` constructor to allow it to\n     * take several different forms for ease of use.\n     *\n     * Each of the input parameter types will be converted to a DataTables settings\n     * object where possible.\n     *\n     * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n     *   of:\n     *\n     *   * `string` - jQuery selector. Any DataTables' matching the given selector\n     *     with be found and used.\n     *   * `node` - `TABLE` node which has already been formed into a DataTable.\n     *   * `jQuery` - A jQuery object of `TABLE` nodes.\n     *   * `object` - DataTables settings object\n     *   * `DataTables.Api` - API instance\n     * @return {array|null} Matching DataTables settings objects. `null` or\n     *   `undefined` is returned if no matching DataTable is found.\n     * @ignore\n     */\n    var _toSettings = function (mixed)\n    {\n        var idx, jq;\n        var settings = DataTable.settings;\n        var tables = $.map(settings, function (el, i) {\n            return el.nTable;\n        });\n\n        if (!mixed) {\n            return [];\n        }\n        else if (mixed.nTable && mixed.oApi) {\n            // DataTables settings object\n            return [mixed];\n        }\n        else if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {\n            // Table node\n            idx = $.inArray(mixed, tables);\n            return idx !== -1 ? [settings[idx]] : null;\n        }\n        else if (mixed && typeof mixed.settings === 'function') {\n            return mixed.settings().toArray();\n        }\n        else if (typeof mixed === 'string') {\n            // jQuery selector\n            jq = $(mixed);\n        }\n        else if (mixed instanceof $) {\n            // jQuery object (also DataTables instance)\n            jq = mixed;\n        }\n\n        if (jq) {\n            return jq.map(function (i) {\n                idx = $.inArray(this, tables);\n                return idx !== -1 ? settings[idx] : null;\n            }).toArray();\n        }\n    };\n\n    /**\n     * DataTables API class - used to control and interface with  one or more\n     * DataTables enhanced tables.\n     *\n     * The API class is heavily based on jQuery, presenting a chainable interface\n     * that you can use to interact with tables. Each instance of the API class has\n     * a \"context\" - i.e. the tables that it will operate on. This could be a single\n     * table, all tables on a page or a sub-set thereof.\n     *\n     * Additionally the API is designed to allow you to easily work with the data in\n     * the tables, retrieving and manipulating it as required. This is done by\n     * presenting the API class as an array like interface. The contents of the\n     * array depend upon the actions requested by each method (for example\n     * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n     * return an array of objects or arrays depending upon your table's\n     * configuration). The API object has a number of array like methods (`push`,\n     * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n     * `unique` etc) to assist your working with the data held in a table.\n     *\n     * Most methods (those which return an Api instance) are chainable, which means\n     * the return from a method call also has all of the methods available that the\n     * top level object had. For example, these two calls are equivalent:\n     *\n     *     // Not chained\n     *     api.row.add( {...} );\n     *     api.draw();\n     *\n     *     // Chained\n     *     api.row.add( {...} ).draw();\n     *\n     * @class DataTable.Api\n     * @param {array|object|string|jQuery} context DataTable identifier. This is\n     *   used to define which DataTables enhanced tables this API will operate on.\n     *   Can be one of:\n     *\n     *   * `string` - jQuery selector. Any DataTables' matching the given selector\n     *     with be found and used.\n     *   * `node` - `TABLE` node which has already been formed into a DataTable.\n     *   * `jQuery` - A jQuery object of `TABLE` nodes.\n     *   * `object` - DataTables settings object\n     * @param {array} [data] Data to initialise the Api instance with.\n     *\n     * @example\n     *   // Direct initialisation during DataTables construction\n     *   var api = $('#example').DataTable();\n     *\n     * @example\n     *   // Initialisation using a DataTables jQuery object\n     *   var api = $('#example').dataTable().api();\n     *\n     * @example\n     *   // Initialisation as a constructor\n     *   var api = new $.fn.DataTable.Api( 'table.dataTable' );\n     */\n    _Api = function (context, data)\n    {\n        if (!(this instanceof _Api)) {\n            return new _Api(context, data);\n        }\n\n        var settings = [];\n        var ctxSettings = function (o) {\n            var a = _toSettings(o);\n            if (a) {\n                settings = settings.concat(a);\n            }\n        };\n\n        if ($.isArray(context)) {\n            for (var i = 0, ien = context.length; i < ien; i++) {\n                ctxSettings(context[i]);\n            }\n        }\n        else {\n            ctxSettings(context);\n        }\n\n        // Remove duplicates\n        this.context = _unique(settings);\n\n        // Initial data\n        if (data) {\n            $.merge(this, data);\n        }\n\n        // selector\n        this.selector = {\n            rows: null,\n            cols: null,\n            opts: null\n        };\n\n        _Api.extend(this, this, __apiStruct);\n    };\n\n    DataTable.Api = _Api;\n\n    // Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n    // isPlainObject.\n    $.extend(_Api.prototype, {\n        any: function ()\n        {\n            return this.count() !== 0;\n       },\n        concat: __arrayProto.concat,\n        context: [], // array of table settings objects\n\n        count: function ()\n        {\n            return this.flatten().length;\n       },\n        each: function (fn)\n        {\n            for (var i = 0, ien = this.length; i < ien; i++) {\n                fn.call(this, this[i], i, this);\n            }\n\n            return this;\n       },\n        eq: function (idx)\n        {\n            var ctx = this.context;\n\n            return ctx.length > idx ?\n                    new _Api(ctx[idx], this[idx]) :\n                    null;\n       },\n        filter: function (fn)\n        {\n            var a = [];\n\n            if (__arrayProto.filter) {\n                a = __arrayProto.filter.call(this, fn, this);\n            }\n            else {\n                // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n                for (var i = 0, ien = this.length; i < ien; i++) {\n                    if (fn.call(this, this[i], i, this)) {\n                        a.push(this[i]);\n                    }\n                }\n            }\n\n            return new _Api(this.context, a);\n       },\n        flatten: function ()\n        {\n            var a = [];\n            return new _Api(this.context, a.concat.apply(a, this.toArray()));\n       },\n        join: __arrayProto.join,\n        indexOf: __arrayProto.indexOf || function (obj, start)\n        {\n            for (var i = (start || 0), ien = this.length; i < ien; i++) {\n                if (this[i] === obj) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n        iterator: function (flatten, type, fn, alwaysNew) {\n            var\n                    a = [], ret,\n                    i, ien, j, jen,\n                    context = this.context,\n                    rows, items, item,\n                    selector = this.selector;\n\n            // Argument shifting\n            if (typeof flatten === 'string') {\n                alwaysNew = fn;\n                fn = type;\n                type = flatten;\n                flatten = false;\n            }\n\n            for (i = 0, ien = context.length; i < ien; i++) {\n                var apiInst = new _Api(context[i]);\n\n                if (type === 'table') {\n                    ret = fn.call(apiInst, context[i], i);\n\n                    if (ret !== undefined) {\n                        a.push(ret);\n                    }\n                }\n                else if (type === 'columns' || type === 'rows') {\n                    // this has same length as context - one entry for each table\n                    ret = fn.call(apiInst, context[i], this[i], i);\n\n                    if (ret !== undefined) {\n                        a.push(ret);\n                    }\n                }\n                else if (type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {\n                    // columns and rows share the same structure.\n                    // 'this' is an array of column indexes for each context\n                    items = this[i];\n\n                    if (type === 'column-rows') {\n                        rows = _selector_row_indexes(context[i], selector.opts);\n                    }\n\n                    for (j = 0, jen = items.length; j < jen; j++) {\n                        item = items[j];\n\n                        if (type === 'cell') {\n                            ret = fn.call(apiInst, context[i], item.row, item.column, i, j);\n                        }\n                        else {\n                            ret = fn.call(apiInst, context[i], item, i, j, rows);\n                        }\n\n                        if (ret !== undefined) {\n                            a.push(ret);\n                        }\n                    }\n                }\n            }\n\n            if (a.length || alwaysNew) {\n                var api = new _Api(context, flatten ? a.concat.apply([], a) : a);\n                var apiSelector = api.selector;\n                apiSelector.rows = selector.rows;\n                apiSelector.cols = selector.cols;\n                apiSelector.opts = selector.opts;\n                return api;\n            }\n            return this;\n       },\n        lastIndexOf: __arrayProto.lastIndexOf || function (obj, start)\n        {\n            // Bit cheeky...\n            return this.indexOf.apply(this.toArray.reverse(), arguments);\n       },\n        length:0,\n        map: function (fn)\n        {\n            var a = [];\n\n            if (__arrayProto.map) {\n                a = __arrayProto.map.call(this, fn, this);\n            }\n            else {\n                // Compatibility for browsers without EMCA-252-5 (JS 1.6)\n                for (var i = 0, ien = this.length; i < ien; i++) {\n                    a.push(fn.call(this, this[i], i));\n                }\n            }\n\n            return new _Api(this.context, a);\n       },\n        pluck: function (prop)\n        {\n            return this.map(function (el) {\n                return el[ prop ];\n            });\n        },\n        pop: __arrayProto.pop,\n        push: __arrayProto.push,\n        // Does not return an API instance\n        reduce: __arrayProto.reduce || function (fn, init)\n        {\n            return _fnReduce(this, fn, init, 0, this.length, 1);\n       },\n        reduceRight: __arrayProto.reduceRight || function (fn, init)\n        {\n            return _fnReduce(this, fn, init, this.length - 1, -1, -1);\n       },\n        reverse: __arrayProto.reverse,\n        // Object with rows, columns and opts\n        selector: null,\n        shift: __arrayProto.shift,\n        sort: __arrayProto.sort, // ? name - order?\n\n        splice: __arrayProto.splice,\n        toArray: function ()\n        {\n            return __arrayProto.slice.call(this);\n       },\n        to$: function ()\n        {\n            return $(this);\n       },\n        toJQuery: function ()\n        {\n            return $(this);\n       },\n        unique: function ()\n        {\n            return new _Api(this.context, _unique(this));\n       },\n        unshift: __arrayProto.unshift\n    });\n\n    _Api.extend = function (scope, obj, ext)\n    {\n        // Only extend API instances and static properties of the API\n        if (!ext.length || !obj || (!(obj instanceof _Api) && !obj.__dt_wrapper)) {\n            return;\n        }\n\n        var\n                i, ien,\n                j, jen,\n                struct, inner,\n                methodScoping = function (scope, fn, struc) {\n                    return function () {\n                        var ret = fn.apply(scope, arguments);\n\n                        // Method extension\n                        _Api.extend(ret, ret, struc.methodExt);\n                        return ret;\n                    };\n                };\n\n        for (i = 0, ien = ext.length; i < ien; i++) {\n            struct = ext[i];\n\n            // Value\n            obj[ struct.name ] = typeof struct.val === 'function' ?\n                    methodScoping(scope, struct.val, struct) :\n                    $.isPlainObject(struct.val) ?\n                    {} :\n                    struct.val;\n\n            obj[ struct.name ].__dt_wrapper = true;\n\n            // Property extension\n            _Api.extend(scope, obj[ struct.name ], struct.propExt);\n        }\n    };\n\n    // @todo - Is there need for an augment function?\n    // _Api.augment = function ( inst, name )\n    // {\n    // \t// Find src object in the structure from the name\n    // \tvar parts = name.split('.');\n\n    // \t_Api.extend( inst, obj );\n    // };\n\n    //     [\n    //       {\n    //         name:      'data'                -- string   - Property name\n    //         val:       function () {},       -- function - Api method (or undefined if just an object\n    //         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n    //         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n    //       },\n    //       {\n    //         name:     'row'\n    //         val:       {},\n    //         methodExt: [ ... ],\n    //         propExt:   [\n    //           {\n    //             name:      'data'\n    //             val:       function () {},\n    //             methodExt: [ ... ],\n    //             propExt:   [ ... ]\n    //           },\n    //           ...\n    //         ]\n    //       }\n    //     ]\n\n    _Api.register = _api_register = function (name, val)\n    {\n        if ($.isArray(name)) {\n            for (var j = 0, jen = name.length; j < jen; j++) {\n                _Api.register(name[j], val);\n            }\n            return;\n        }\n\n        var\n                i, ien,\n                heir = name.split('.'),\n                struct = __apiStruct,\n                key, method;\n\n        var find = function (src, name) {\n            for (var i = 0, ien = src.length; i < ien; i++) {\n                if (src[i].name === name) {\n                    return src[i];\n                }\n            }\n            return null;\n        };\n\n        for (i = 0, ien = heir.length; i < ien; i++) {\n            method = heir[i].indexOf('()') !== -1;\n            key = method ?\n                    heir[i].replace('()', '') :\n                    heir[i];\n\n            var src = find(struct, key);\n            if (!src) {\n                src = {\n                    name: key,\n                    val: {},\n                    methodExt: [],\n                    propExt: []\n                };\n                struct.push(src);\n            }\n\n            if (i === ien - 1) {\n                src.val = val;\n            }\n            else {\n                struct = method ?\n                        src.methodExt :\n                        src.propExt;\n            }\n        }\n    };\n\n    _Api.registerPlural = _api_registerPlural = function (pluralName, singularName, val) {\n        _Api.register(pluralName, val);\n\n        _Api.register(singularName, function () {\n            var ret = val.apply(this, arguments);\n\n            if (ret === this) {\n                // Returned item is the API instance that was passed in, return it\n                return this;\n            }\n            else if (ret instanceof _Api) {\n                // New API instance returned, want the value from the first item\n                // in the returned array for the singular result.\n                return ret.length ?\n                        $.isArray(ret[0]) ?\n                        new _Api(ret.context, ret[0]) : // Array results are 'enhanced'\n                        ret[0] :\n                        undefined;\n            }\n\n            // Non-API return - just fire it back\n            return ret;\n        });\n    };\n\n    /**\n     * Selector for HTML tables. Apply the given selector to the give array of\n     * DataTables settings objects.\n     *\n     * @param {string|integer} [selector] jQuery selector string or integer\n     * @param  {array} Array of DataTables settings objects to be filtered\n     * @return {array}\n     * @ignore\n     */\n    var __table_selector = function (selector, a)\n    {\n        // Integer is used to pick out a table by index\n        if (typeof selector === 'number') {\n            return [a[ selector ]];\n        }\n\n        // Perform a jQuery selector on the table nodes\n        var nodes = $.map(a, function (el, i) {\n            return el.nTable;\n        });\n\n        return $(nodes)\n                .filter(selector)\n                .map(function (i) {\n                    // Need to translate back from the table node to the settings\n                    var idx = $.inArray(this, nodes);\n                    return a[ idx ];\n                })\n                .toArray();\n    };\n\n    /**\n     * Context selector for the API's context (i.e. the tables the API instance\n     * refers to.\n     *\n     * @name    DataTable.Api#tables\n     * @param {string|integer} [selector] Selector to pick which tables the iterator\n     *   should operate on. If not given, all tables in the current context are\n     *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n     *   select multiple tables or as an integer to select a single table.\n     * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n     */\n    _api_register('tables()', function (selector) {\n        // A new instance is created if there was a selector specified\n        return selector ?\n                new _Api(__table_selector(selector, this.context)) :\n                this;\n    });\n\n    _api_register('table()', function (selector) {\n        var tables = this.tables(selector);\n        var ctx = tables.context;\n\n        // Truncate to the first matched table\n        return ctx.length ?\n                new _Api(ctx[0]) :\n                tables;\n    });\n\n    _api_registerPlural('tables().nodes()', 'table().node()', function () {\n        return this.iterator('table', function (ctx) {\n            return ctx.nTable;\n        }, 1);\n    });\n\n    _api_registerPlural('tables().body()', 'table().body()', function () {\n        return this.iterator('table', function (ctx) {\n            return ctx.nTBody;\n        }, 1);\n    });\n\n    _api_registerPlural('tables().header()', 'table().header()', function () {\n        return this.iterator('table', function (ctx) {\n            return ctx.nTHead;\n        }, 1);\n    });\n\n    _api_registerPlural('tables().footer()', 'table().footer()', function () {\n        return this.iterator('table', function (ctx) {\n            return ctx.nTFoot;\n        }, 1);\n    });\n\n    _api_registerPlural('tables().containers()', 'table().container()', function () {\n        return this.iterator('table', function (ctx) {\n            return ctx.nTableWrapper;\n        }, 1);\n    });\n\n    /**\n     * Redraw the tables in the current context.\n     */\n    _api_register('draw()', function (paging) {\n        return this.iterator('table', function (settings) {\n            if (paging === 'page') {\n                _fnDraw(settings);\n            }\n            else {\n                if (typeof paging === 'string') {\n                    paging = paging === 'full-hold' ?\n                            false :\n                            true;\n                }\n\n                _fnReDraw(settings, paging === false);\n            }\n        });\n    });\n\n    /**\n     * Get the current page index.\n     *\n     * @return {integer} Current page index (zero based)\n     *//**\n      * Set the current page.\n      *\n      * Note that if you attempt to show a page which does not exist, DataTables will\n      * not throw an error, but rather reset the paging.\n      *\n      * @param {integer|string} action The paging action to take. This can be one of:\n      *  * `integer` - The page index to jump to\n      *  * `string` - An action to take:\n      *    * `first` - Jump to first page.\n      *    * `next` - Jump to the next page\n      *    * `previous` - Jump to previous page\n      *    * `last` - Jump to the last page.\n      * @returns {DataTables.Api} this\n      */\n    _api_register('page()', function (action) {\n        if (action === undefined) {\n            return this.page.info().page; // not an expensive call\n        }\n\n        // else, have an action to take on all tables\n        return this.iterator('table', function (settings) {\n            _fnPageChange(settings, action);\n        });\n    });\n\n    /**\n     * Paging information for the first table in the current context.\n     *\n     * If you require paging information for another table, use the `table()` method\n     * with a suitable selector.\n     *\n     * @return {object} Object with the following properties set:\n     *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n     *  * `pages` - Total number of pages\n     *  * `start` - Display index for the first record shown on the current page\n     *  * `end` - Display index for the last record shown on the current page\n     *  * `length` - Display length (number of records). Note that generally `start\n     *    + length = end`, but this is not always true, for example if there are\n     *    only 2 records to show on the final page, with a length of 10.\n     *  * `recordsTotal` - Full data set length\n     *  * `recordsDisplay` - Data set length once the current filtering criterion\n     *    are applied.\n     */\n    _api_register('page.info()', function (action) {\n        if (this.context.length === 0) {\n            return undefined;\n        }\n\n        var\n                settings = this.context[0],\n                start = settings._iDisplayStart,\n                len = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n                visRecords = settings.fnRecordsDisplay(),\n                all = len === -1;\n\n        return {\n            \"page\": all ? 0 : Math.floor(start / len),\n            \"pages\": all ? 1 : Math.ceil(visRecords / len),\n            \"start\": start,\n            \"end\": settings.fnDisplayEnd(),\n            \"length\": len,\n            \"recordsTotal\": settings.fnRecordsTotal(),\n            \"recordsDisplay\": visRecords,\n            \"serverSide\": _fnDataSource(settings) === 'ssp'\n        };\n    });\n\n    /**\n     * Get the current page length.\n     *\n     * @return {integer} Current page length. Note `-1` indicates that all records\n     *   are to be shown.\n     *//**\n      * Set the current page length.\n      *\n      * @param {integer} Page length to set. Use `-1` to show all records.\n      * @returns {DataTables.Api} this\n      */\n    _api_register('page.len()', function (len) {\n        // Note that we can't call this function 'length()' because `length`\n        // is a Javascript property of functions which defines how many arguments\n        // the function expects.\n        if (len === undefined) {\n            return this.context.length !== 0 ?\n                    this.context[0]._iDisplayLength :\n                    undefined;\n        }\n\n        // else, set the page length\n        return this.iterator('table', function (settings) {\n            _fnLengthChange(settings, len);\n        });\n    });\n\n    var __reload = function (settings, holdPosition, callback) {\n        // Use the draw event to trigger a callback\n        if (callback) {\n            var api = new _Api(settings);\n\n            api.one('draw', function () {\n                callback(api.ajax.json());\n            });\n        }\n\n        if (_fnDataSource(settings) == 'ssp') {\n            _fnReDraw(settings, holdPosition);\n        }\n        else {\n            _fnProcessingDisplay(settings, true);\n\n            // Cancel an existing request\n            var xhr = settings.jqXHR;\n            if (xhr && xhr.readyState !== 4) {\n                xhr.abort();\n            }\n\n            // Trigger xhr\n            _fnBuildAjax(settings, [], function (json) {\n                _fnClearTable(settings);\n\n                var data = _fnAjaxDataSrc(settings, json);\n                for (var i = 0, ien = data.length; i < ien; i++) {\n                    _fnAddData(settings, data[i]);\n                }\n\n                _fnReDraw(settings, holdPosition);\n                _fnProcessingDisplay(settings, false);\n            });\n        }\n    };\n\n    /**\n     * Get the JSON response from the last Ajax request that DataTables made to the\n     * server. Note that this returns the JSON from the first table in the current\n     * context.\n     *\n     * @return {object} JSON received from the server.\n     */\n    _api_register('ajax.json()', function () {\n        var ctx = this.context;\n\n        if (ctx.length > 0) {\n            return ctx[0].json;\n        }\n\n        // else return undefined;\n    });\n\n    /**\n     * Get the data submitted in the last Ajax request\n     */\n    _api_register('ajax.params()', function () {\n        var ctx = this.context;\n\n        if (ctx.length > 0) {\n            return ctx[0].oAjaxData;\n        }\n\n        // else return undefined;\n    });\n\n    /**\n     * Reload tables from the Ajax data source. Note that this function will\n     * automatically re-draw the table when the remote data has been loaded.\n     *\n     * @param {boolean} [reset=true] Reset (default) or hold the current paging\n     *   position. A full re-sort and re-filter is performed when this method is\n     *   called, which is why the pagination reset is the default action.\n     * @returns {DataTables.Api} this\n     */\n    _api_register('ajax.reload()', function (callback, resetPaging) {\n        return this.iterator('table', function (settings) {\n            __reload(settings, resetPaging === false, callback);\n        });\n    });\n\n    /**\n     * Get the current Ajax URL. Note that this returns the URL from the first\n     * table in the current context.\n     *\n     * @return {string} Current Ajax source URL\n     *//**\n      * Set the Ajax URL. Note that this will set the URL for all tables in the\n      * current context.\n      *\n      * @param {string} url URL to set.\n      * @returns {DataTables.Api} this\n      */\n    _api_register('ajax.url()', function (url) {\n        var ctx = this.context;\n\n        if (url === undefined) {\n            // get\n            if (ctx.length === 0) {\n                return undefined;\n            }\n            ctx = ctx[0];\n\n            return ctx.ajax ?\n                    $.isPlainObject(ctx.ajax) ?\n                    ctx.ajax.url :\n                    ctx.ajax :\n                    ctx.sAjaxSource;\n        }\n\n        // set\n        return this.iterator('table', function (settings) {\n            if ($.isPlainObject(settings.ajax)) {\n                settings.ajax.url = url;\n            }\n            else {\n                settings.ajax = url;\n            }\n            // No need to consider sAjaxSource here since DataTables gives priority\n            // to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any\n            // value of `sAjaxSource` redundant.\n        });\n    });\n\n    /**\n     * Load data from the newly set Ajax URL. Note that this method is only\n     * available when `ajax.url()` is used to set a URL. Additionally, this method\n     * has the same effect as calling `ajax.reload()` but is provided for\n     * convenience when setting a new URL. Like `ajax.reload()` it will\n     * automatically redraw the table once the remote data has been loaded.\n     *\n     * @returns {DataTables.Api} this\n     */\n    _api_register('ajax.url().load()', function (callback, resetPaging) {\n        // Same as a reload, but makes sense to present it for easy access after a\n        // url change\n        return this.iterator('table', function (ctx) {\n            __reload(ctx, resetPaging === false, callback);\n        });\n    });\n\n    var _selector_run = function (type, selector, selectFn, settings, opts)\n    {\n        var\n                out = [], res,\n                a, i, ien, j, jen,\n                selectorType = typeof selector;\n\n        // Can't just check for isArray here, as an API or jQuery instance might be\n        // given with their array like look\n        if (!selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined) {\n            selector = [selector];\n        }\n\n        for (i = 0, ien = selector.length; i < ien; i++) {\n            // Only split on simple strings - complex expressions will be jQuery selectors\n            a = selector[i] && selector[i].split && !selector[i].match(/[\\[\\(:]/) ?\n                    selector[i].split(',') :\n                    [selector[i]];\n\n            for (j = 0, jen = a.length; j < jen; j++) {\n                res = selectFn(typeof a[j] === 'string' ? $.trim(a[j]) : a[j]);\n\n                if (res && res.length) {\n                    out = out.concat(res);\n                }\n            }\n        }\n\n        // selector extensions\n        var ext = _ext.selector[ type ];\n        if (ext.length) {\n            for (i = 0, ien = ext.length; i < ien; i++) {\n                out = ext[i](settings, opts, out);\n            }\n        }\n\n        return _unique(out);\n    };\n\n    var _selector_opts = function (opts)\n    {\n        if (!opts) {\n            opts = {};\n        }\n\n        // Backwards compatibility for 1.9- which used the terminology filter rather\n        // than search\n        if (opts.filter && opts.search === undefined) {\n            opts.search = opts.filter;\n        }\n\n        return $.extend({\n            search: 'none',\n            order: 'current',\n            page: 'all'\n        }, opts);\n    };\n\n    var _selector_first = function (inst)\n    {\n        // Reduce the API instance to the first item found\n        for (var i = 0, ien = inst.length; i < ien; i++) {\n            if (inst[i].length > 0) {\n                // Assign the first element to the first item in the instance\n                // and truncate the instance and context\n                inst[0] = inst[i];\n                inst[0].length = 1;\n                inst.length = 1;\n                inst.context = [inst.context[i]];\n\n                return inst;\n            }\n        }\n\n        // Not found - return an empty instance\n        inst.length = 0;\n        return inst;\n    };\n\n    var _selector_row_indexes = function (settings, opts)\n    {\n        var\n                i, ien, tmp, a = [],\n                displayFiltered = settings.aiDisplay,\n                displayMaster = settings.aiDisplayMaster;\n\n        var\n                search = opts.search, // none, applied, removed\n                order = opts.order, // applied, current, index (original - compatibility with 1.9)\n                page = opts.page;    // all, current\n\n        if (_fnDataSource(settings) == 'ssp') {\n            // In server-side processing mode, most options are irrelevant since\n            // rows not shown don't exist and the index order is the applied order\n            // Removed is a special case - for consistency just return an empty\n            // array\n            return search === 'removed' ?\n                    [] :\n                    _range(0, displayMaster.length);\n        }\n        else if (page == 'current') {\n            // Current page implies that order=current and fitler=applied, since it is\n            // fairly senseless otherwise, regardless of what order and search actually\n            // are\n            for (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {\n                a.push(displayFiltered[i]);\n            }\n        }\n        else if (order == 'current' || order == 'applied') {\n            a = search == 'none' ?\n                    displayMaster.slice() : // no search\n                    search == 'applied' ?\n                    displayFiltered.slice() : // applied search\n                    $.map(displayMaster, function (el, i) { // removed search\n                        return $.inArray(el, displayFiltered) === -1 ? el : null;\n                    });\n        }\n        else if (order == 'index' || order == 'original') {\n            for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n                if (search == 'none') {\n                    a.push(i);\n                }\n                else { // applied | removed\n                    tmp = $.inArray(i, displayFiltered);\n\n                    if ((tmp === -1 && search == 'removed') ||\n                            (tmp >= 0 && search == 'applied'))\n                    {\n                        a.push(i);\n                    }\n                }\n            }\n        }\n\n        return a;\n    };\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Rows\n     *\n     * {}          - no selector - use all available rows\n     * {integer}   - row aoData index\n     * {node}      - TR node\n     * {string}    - jQuery selector to apply to the TR elements\n     * {array}     - jQuery array of nodes, or simply an array of TR nodes\n     *\n     */\n\n    var __row_selector = function (settings, selector, opts)\n    {\n        var rows;\n        var run = function (sel) {\n            var selInt = _intVal(sel);\n            var i, ien;\n\n            // Short cut - selector is a number and no options provided (default is\n            // all records, so no need to check if the index is in there, since it\n            // must be - dev error if the index doesn't exist).\n            if (selInt !== null && !opts) {\n                return [selInt];\n            }\n\n            if (!rows) {\n                rows = _selector_row_indexes(settings, opts);\n            }\n\n            if (selInt !== null && $.inArray(selInt, rows) !== -1) {\n                // Selector - integer\n                return [selInt];\n            }\n            else if (sel === null || sel === undefined || sel === '') {\n                // Selector - none\n                return rows;\n            }\n\n            // Selector - function\n            if (typeof sel === 'function') {\n                return $.map(rows, function (idx) {\n                    var row = settings.aoData[ idx ];\n                    return sel(idx, row._aData, row.nTr) ? idx : null;\n                });\n            }\n\n            // Get nodes in the order from the `rows` array with null values removed\n            var nodes = _removeEmpty(\n                    _pluck_order(settings.aoData, rows, 'nTr')\n                    );\n\n            // Selector - node\n            if (sel.nodeName) {\n                if (sel._DT_RowIndex !== undefined) {\n                    return [sel._DT_RowIndex]; // Property added by DT for fast lookup\n                }\n                else if (sel._DT_CellIndex) {\n                    return [sel._DT_CellIndex.row];\n                }\n                else {\n                    var host = $(sel).closest('*[data-dt-row]');\n                    return host.length ?\n                            [host.data('dt-row')] :\n                            [];\n                }\n            }\n\n            // ID selector. Want to always be able to select rows by id, regardless\n            // of if the tr element has been created or not, so can't rely upon\n            // jQuery here - hence a custom implementation. This does not match\n            // Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n            // but to select it using a CSS selector engine (like Sizzle or\n            // querySelect) it would need to need to be escaped for some characters.\n            // DataTables simplifies this for row selectors since you can select\n            // only a row. A # indicates an id any anything that follows is the id -\n            // unescaped.\n            if (typeof sel === 'string' && sel.charAt(0) === '#') {\n                // get row index from id\n                var rowObj = settings.aIds[ sel.replace(/^#/, '') ];\n                if (rowObj !== undefined) {\n                    return [rowObj.idx];\n                }\n\n                // need to fall through to jQuery in case there is DOM id that\n                // matches\n            }\n\n            // Selector - jQuery selector string, array of nodes or jQuery object/\n            // As jQuery's .filter() allows jQuery objects to be passed in filter,\n            // it also allows arrays, so this will cope with all three options\n            return $(nodes)\n                    .filter(sel)\n                    .map(function () {\n                        return this._DT_RowIndex;\n                    })\n                    .toArray();\n        };\n\n        return _selector_run('row', selector, run, settings, opts);\n    };\n\n    _api_register('rows()', function (selector, opts) {\n        // argument shifting\n        if (selector === undefined) {\n            selector = '';\n        }\n        else if ($.isPlainObject(selector)) {\n            opts = selector;\n            selector = '';\n        }\n\n        opts = _selector_opts(opts);\n\n        var inst = this.iterator('table', function (settings) {\n            return __row_selector(settings, selector, opts);\n        }, 1);\n\n        // Want argument shifting here and in __row_selector?\n        inst.selector.rows = selector;\n        inst.selector.opts = opts;\n\n        return inst;\n    });\n\n    _api_register('rows().nodes()', function () {\n        return this.iterator('row', function (settings, row) {\n            return settings.aoData[ row ].nTr || undefined;\n        }, 1);\n    });\n\n    _api_register('rows().data()', function () {\n        return this.iterator(true, 'rows', function (settings, rows) {\n            return _pluck_order(settings.aoData, rows, '_aData');\n        }, 1);\n    });\n\n    _api_registerPlural('rows().cache()', 'row().cache()', function (type) {\n        return this.iterator('row', function (settings, row) {\n            var r = settings.aoData[ row ];\n            return type === 'search' ? r._aFilterData : r._aSortData;\n        }, 1);\n    });\n\n    _api_registerPlural('rows().invalidate()', 'row().invalidate()', function (src) {\n        return this.iterator('row', function (settings, row) {\n            _fnInvalidate(settings, row, src);\n        });\n    });\n\n    _api_registerPlural('rows().indexes()', 'row().index()', function () {\n        return this.iterator('row', function (settings, row) {\n            return row;\n        }, 1);\n    });\n\n    _api_registerPlural('rows().ids()', 'row().id()', function (hash) {\n        var a = [];\n        var context = this.context;\n\n        // `iterator` will drop undefined values, but in this case we want them\n        for (var i = 0, ien = context.length; i < ien; i++) {\n            for (var j = 0, jen = this[i].length; j < jen; j++) {\n                var id = context[i].rowIdFn(context[i].aoData[ this[i][j] ]._aData);\n                a.push((hash === true ? '#' : '') + id);\n            }\n        }\n\n        return new _Api(context, a);\n    });\n\n    _api_registerPlural('rows().remove()', 'row().remove()', function () {\n        var that = this;\n\n        this.iterator('row', function (settings, row, thatIdx) {\n            var data = settings.aoData;\n            var rowData = data[ row ];\n            var i, ien, j, jen;\n            var loopRow, loopCells;\n\n            data.splice(row, 1);\n\n            // Update the cached indexes\n            for (i = 0, ien = data.length; i < ien; i++) {\n                loopRow = data[i];\n                loopCells = loopRow.anCells;\n\n                // Rows\n                if (loopRow.nTr !== null) {\n                    loopRow.nTr._DT_RowIndex = i;\n                }\n\n                // Cells\n                if (loopCells !== null) {\n                    for (j = 0, jen = loopCells.length; j < jen; j++) {\n                        loopCells[j]._DT_CellIndex.row = i;\n                    }\n                }\n            }\n\n            // Delete from the display arrays\n            _fnDeleteIndex(settings.aiDisplayMaster, row);\n            _fnDeleteIndex(settings.aiDisplay, row);\n            _fnDeleteIndex(that[ thatIdx ], row, false); // maintain local indexes\n\n            // Check for an 'overflow' they case for displaying the table\n            _fnLengthOverflow(settings);\n\n            // Remove the row's ID reference if there is one\n            var id = settings.rowIdFn(rowData._aData);\n            if (id !== undefined) {\n                delete settings.aIds[ id ];\n            }\n        });\n\n        this.iterator('table', function (settings) {\n            for (var i = 0, ien = settings.aoData.length; i < ien; i++) {\n                settings.aoData[i].idx = i;\n            }\n        });\n\n        return this;\n    });\n\n    _api_register('rows.add()', function (rows) {\n        var newRows = this.iterator('table', function (settings) {\n            var row, i, ien;\n            var out = [];\n\n            for (i = 0, ien = rows.length; i < ien; i++) {\n                row = rows[i];\n\n                if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n                    out.push(_fnAddTr(settings, row)[0]);\n                }\n                else {\n                    out.push(_fnAddData(settings, row));\n                }\n            }\n\n            return out;\n        }, 1);\n\n        // Return an Api.rows() extended instance, so rows().nodes() etc can be used\n        var modRows = this.rows(-1);\n        modRows.pop();\n        $.merge(modRows, newRows);\n\n        return modRows;\n    });\n\n    /**\n     *\n     */\n    _api_register('row()', function (selector, opts) {\n        return _selector_first(this.rows(selector, opts));\n    });\n\n    _api_register('row().data()', function (data) {\n        var ctx = this.context;\n\n        if (data === undefined) {\n            // Get\n            return ctx.length && this.length ?\n                    ctx[0].aoData[ this[0] ]._aData :\n                    undefined;\n        }\n\n        // Set\n        ctx[0].aoData[ this[0] ]._aData = data;\n\n        // Automatically invalidate\n        _fnInvalidate(ctx[0], this[0], 'data');\n\n        return this;\n    });\n\n    _api_register('row().node()', function () {\n        var ctx = this.context;\n\n        return ctx.length && this.length ?\n                ctx[0].aoData[ this[0] ].nTr || null :\n                null;\n    });\n\n    _api_register('row.add()', function (row) {\n        // Allow a jQuery object to be passed in - only a single row is added from\n        // it though - the first element in the set\n        if (row instanceof $ && row.length) {\n            row = row[0];\n        }\n\n        var rows = this.iterator('table', function (settings) {\n            if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n                return _fnAddTr(settings, row)[0];\n            }\n            return _fnAddData(settings, row);\n        });\n\n        // Return an Api.rows() extended instance, with the newly added row selected\n        return this.row(rows[0]);\n    });\n\n    var __details_add = function (ctx, row, data, klass)\n    {\n        // Convert to array of TR elements\n        var rows = [];\n        var addRow = function (r, k) {\n            // Recursion to allow for arrays of jQuery objects\n            if ($.isArray(r) || r instanceof $) {\n                for (var i = 0, ien = r.length; i < ien; i++) {\n                    addRow(r[i], k);\n                }\n                return;\n            }\n\n            // If we get a TR element, then just add it directly - up to the dev\n            // to add the correct number of columns etc\n            if (r.nodeName && r.nodeName.toLowerCase() === 'tr') {\n                rows.push(r);\n            }\n            else {\n                // Otherwise create a row with a wrapper\n                var created = $('<tr><td/></tr>').addClass(k);\n                $('td', created)\n                        .addClass(k)\n                        .html(r)\n                        [0].colSpan = _fnVisbleColumns(ctx);\n\n                rows.push(created[0]);\n            }\n        };\n\n        addRow(data, klass);\n\n        if (row._details) {\n            row._details.remove();\n        }\n\n        row._details = $(rows);\n\n        // If the children were already shown, that state should be retained\n        if (row._detailsShow) {\n            row._details.insertAfter(row.nTr);\n        }\n    };\n\n    var __details_remove = function (api, idx)\n    {\n        var ctx = api.context;\n\n        if (ctx.length) {\n            var row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\n            if (row && row._details) {\n                row._details.remove();\n\n                row._detailsShow = undefined;\n                row._details = undefined;\n            }\n        }\n    };\n\n    var __details_display = function (api, show) {\n        var ctx = api.context;\n\n        if (ctx.length && api.length) {\n            var row = ctx[0].aoData[ api[0] ];\n\n            if (row._details) {\n                row._detailsShow = show;\n\n                if (show) {\n                    row._details.insertAfter(row.nTr);\n                }\n                else {\n                    row._details.detach();\n                }\n\n                __details_events(ctx[0]);\n            }\n        }\n    };\n\n    var __details_events = function (settings)\n    {\n        var api = new _Api(settings);\n        var namespace = '.dt.DT_details';\n        var drawEvent = 'draw' + namespace;\n        var colvisEvent = 'column-visibility' + namespace;\n        var destroyEvent = 'destroy' + namespace;\n        var data = settings.aoData;\n\n        api.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent);\n\n        if (_pluck(data, '_details').length > 0) {\n            // On each draw, insert the required elements into the document\n            api.on(drawEvent, function (e, ctx) {\n                if (settings !== ctx) {\n                    return;\n                }\n\n                api.rows({page: 'current'}).eq(0).each(function (idx) {\n                    // Internal data grab\n                    var row = data[ idx ];\n\n                    if (row._detailsShow) {\n                        row._details.insertAfter(row.nTr);\n                    }\n                });\n            });\n\n            // Column visibility change - update the colspan\n            api.on(colvisEvent, function (e, ctx, idx, vis) {\n                if (settings !== ctx) {\n                    return;\n                }\n\n                // Update the colspan for the details rows (note, only if it already has\n                // a colspan)\n                var row, visible = _fnVisbleColumns(ctx);\n\n                for (var i = 0, ien = data.length; i < ien; i++) {\n                    row = data[i];\n\n                    if (row._details) {\n                        row._details.children('td[colspan]').attr('colspan', visible);\n                    }\n                }\n            });\n\n            // Table destroyed - nuke any child rows\n            api.on(destroyEvent, function (e, ctx) {\n                if (settings !== ctx) {\n                    return;\n                }\n\n                for (var i = 0, ien = data.length; i < ien; i++) {\n                    if (data[i]._details) {\n                        __details_remove(api, i);\n                    }\n                }\n            });\n        }\n    };\n\n    // Strings for the method names to help minification\n    var _emp = '';\n    var _child_obj = _emp + 'row().child';\n    var _child_mth = _child_obj + '()';\n\n    // data can be:\n    //  tr\n    //  string\n    //  jQuery or array of any of the above\n    _api_register(_child_mth, function (data, klass) {\n        var ctx = this.context;\n\n        if (data === undefined) {\n            // get\n            return ctx.length && this.length ?\n                    ctx[0].aoData[ this[0] ]._details :\n                    undefined;\n        }\n        else if (data === true) {\n            // show\n            this.child.show();\n        }\n        else if (data === false) {\n            // remove\n            __details_remove(this);\n        }\n        else if (ctx.length && this.length) {\n            // set\n            __details_add(ctx[0], ctx[0].aoData[ this[0] ], data, klass);\n        }\n\n        return this;\n    });\n\n    _api_register([\n        _child_obj + '.show()',\n        _child_mth + '.show()' // only when `child()` was called with parameters (without\n    ], function (show) {   // it returns an object and this method is not executed)\n        __details_display(this, true);\n        return this;\n    });\n\n    _api_register([\n        _child_obj + '.hide()',\n        _child_mth + '.hide()' // only when `child()` was called with parameters (without\n    ], function () {         // it returns an object and this method is not executed)\n        __details_display(this, false);\n        return this;\n    });\n\n    _api_register([\n        _child_obj + '.remove()',\n        _child_mth + '.remove()' // only when `child()` was called with parameters (without\n    ], function () {           // it returns an object and this method is not executed)\n        __details_remove(this);\n        return this;\n    });\n\n    _api_register(_child_obj + '.isShown()', function () {\n        var ctx = this.context;\n\n        if (ctx.length && this.length) {\n            // _detailsShown as false or undefined will fall through to return false\n            return ctx[0].aoData[ this[0] ]._detailsShow || false;\n        }\n        return false;\n    });\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Columns\n     *\n     * {integer}           - column index (>=0 count from left, <0 count from right)\n     * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n     * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n     * \"{string}:name\"     - column name\n     * \"{string}\"          - jQuery selector on column header nodes\n     *\n     */\n\n    // can be an array of these items, comma separated list, or an array of comma\n    // separated lists\n\n    var __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;\n\n    // r1 and r2 are redundant - but it means that the parameters match for the\n    // iterator callback in columns().data()\n    var __columnData = function (settings, column, r1, r2, rows) {\n        var a = [];\n        for (var row = 0, ien = rows.length; row < ien; row++) {\n            a.push(_fnGetCellData(settings, rows[row], column));\n        }\n        return a;\n    };\n\n    var __column_selector = function (settings, selector, opts)\n    {\n        var\n                columns = settings.aoColumns,\n                names = _pluck(columns, 'sName'),\n                nodes = _pluck(columns, 'nTh');\n\n        var run = function (s) {\n            var selInt = _intVal(s);\n\n            // Selector - all\n            if (s === '') {\n                return _range(columns.length);\n            }\n\n            // Selector - index\n            if (selInt !== null) {\n                return [selInt >= 0 ?\n                            selInt : // Count from left\n                            columns.length + selInt // Count from right (+ because its a negative value)\n                ];\n            }\n\n            // Selector = function\n            if (typeof s === 'function') {\n                var rows = _selector_row_indexes(settings, opts);\n\n                return $.map(columns, function (col, idx) {\n                    return s(\n                            idx,\n                            __columnData(settings, idx, 0, 0, rows),\n                            nodes[ idx ]\n                            ) ? idx : null;\n                });\n            }\n\n            // jQuery or string selector\n            var match = typeof s === 'string' ?\n                    s.match(__re_column_selector) :\n                    '';\n\n            if (match) {\n                switch (match[2]) {\n                    case 'visIdx':\n                    case 'visible':\n                        var idx = parseInt(match[1], 10);\n                        // Visible index given, convert to column index\n                        if (idx < 0) {\n                            // Counting from the right\n                            var visColumns = $.map(columns, function (col, i) {\n                                return col.bVisible ? i : null;\n                            });\n                            return [visColumns[ visColumns.length + idx ]];\n                        }\n                        // Counting from the left\n                        return [_fnVisibleToColumnIndex(settings, idx)];\n\n                    case 'name':\n                        // match by name. `names` is column index complete and in order\n                        return $.map(names, function (name, i) {\n                            return name === match[1] ? i : null;\n                        });\n\n                    default:\n                        return [];\n                }\n            }\n\n            // Cell in the table body\n            if (s.nodeName && s._DT_CellIndex) {\n                return [s._DT_CellIndex.column];\n            }\n\n            // jQuery selector on the TH elements for the columns\n            var jqResult = $(nodes)\n                    .filter(s)\n                    .map(function () {\n                        return $.inArray(this, nodes); // `nodes` is column index complete and in order\n                    })\n                    .toArray();\n\n            if (jqResult.length || !s.nodeName) {\n                return jqResult;\n            }\n\n            // Otherwise a node which might have a `dt-column` data attribute, or be\n            // a child or such an element\n            var host = $(s).closest('*[data-dt-column]');\n            return host.length ?\n                    [host.data('dt-column')] :\n                    [];\n        };\n\n        return _selector_run('column', selector, run, settings, opts);\n    };\n\n    var __setColumnVis = function (settings, column, vis) {\n        var\n                cols = settings.aoColumns,\n                col = cols[ column ],\n                data = settings.aoData,\n                row, cells, i, ien, tr;\n\n        // Get\n        if (vis === undefined) {\n            return col.bVisible;\n        }\n\n        // Set\n        // No change\n        if (col.bVisible === vis) {\n            return;\n        }\n\n        if (vis) {\n            // Insert column\n            // Need to decide if we should use appendChild or insertBefore\n            var insertBefore = $.inArray(true, _pluck(cols, 'bVisible'), column + 1);\n\n            for (i = 0, ien = data.length; i < ien; i++) {\n                tr = data[i].nTr;\n                cells = data[i].anCells;\n\n                if (tr) {\n                    // insertBefore can act like appendChild if 2nd arg is null\n                    tr.insertBefore(cells[ column ], cells[ insertBefore ] || null);\n                }\n            }\n        }\n        else {\n            // Remove column\n            $(_pluck(settings.aoData, 'anCells', column)).detach();\n        }\n\n        // Common actions\n        col.bVisible = vis;\n        _fnDrawHead(settings, settings.aoHeader);\n        _fnDrawHead(settings, settings.aoFooter);\n\n        _fnSaveState(settings);\n    };\n\n    _api_register('columns()', function (selector, opts) {\n        // argument shifting\n        if (selector === undefined) {\n            selector = '';\n        }\n        else if ($.isPlainObject(selector)) {\n            opts = selector;\n            selector = '';\n        }\n\n        opts = _selector_opts(opts);\n\n        var inst = this.iterator('table', function (settings) {\n            return __column_selector(settings, selector, opts);\n        }, 1);\n\n        // Want argument shifting here and in _row_selector?\n        inst.selector.cols = selector;\n        inst.selector.opts = opts;\n\n        return inst;\n    });\n\n    _api_registerPlural('columns().header()', 'column().header()', function (selector, opts) {\n        return this.iterator('column', function (settings, column) {\n            return settings.aoColumns[column].nTh;\n        }, 1);\n    });\n\n    _api_registerPlural('columns().footer()', 'column().footer()', function (selector, opts) {\n        return this.iterator('column', function (settings, column) {\n            return settings.aoColumns[column].nTf;\n        }, 1);\n    });\n\n    _api_registerPlural('columns().data()', 'column().data()', function () {\n        return this.iterator('column-rows', __columnData, 1);\n    });\n\n    _api_registerPlural('columns().dataSrc()', 'column().dataSrc()', function () {\n        return this.iterator('column', function (settings, column) {\n            return settings.aoColumns[column].mData;\n        }, 1);\n    });\n\n    _api_registerPlural('columns().cache()', 'column().cache()', function (type) {\n        return this.iterator('column-rows', function (settings, column, i, j, rows) {\n            return _pluck_order(settings.aoData, rows,\n                    type === 'search' ? '_aFilterData' : '_aSortData', column\n                    );\n        }, 1);\n    });\n\n    _api_registerPlural('columns().nodes()', 'column().nodes()', function () {\n        return this.iterator('column-rows', function (settings, column, i, j, rows) {\n            return _pluck_order(settings.aoData, rows, 'anCells', column);\n        }, 1);\n    });\n\n    _api_registerPlural('columns().visible()', 'column().visible()', function (vis, calc) {\n        var ret = this.iterator('column', function (settings, column) {\n            if (vis === undefined) {\n                return settings.aoColumns[ column ].bVisible;\n            } // else\n            __setColumnVis(settings, column, vis);\n        });\n\n        // Group the column visibility changes\n        if (vis !== undefined) {\n            // Second loop once the first is done for events\n            this.iterator('column', function (settings, column) {\n                _fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis, calc]);\n            });\n\n            if (calc === undefined || calc) {\n                this.columns.adjust();\n            }\n        }\n\n        return ret;\n    });\n\n    _api_registerPlural('columns().indexes()', 'column().index()', function (type) {\n        return this.iterator('column', function (settings, column) {\n            return type === 'visible' ?\n                    _fnColumnIndexToVisible(settings, column) :\n                    column;\n        }, 1);\n    });\n\n    _api_register('columns.adjust()', function () {\n        return this.iterator('table', function (settings) {\n            _fnAdjustColumnSizing(settings);\n        }, 1);\n    });\n\n    _api_register('column.index()', function (type, idx) {\n        if (this.context.length !== 0) {\n            var ctx = this.context[0];\n\n            if (type === 'fromVisible' || type === 'toData') {\n                return _fnVisibleToColumnIndex(ctx, idx);\n            }\n            else if (type === 'fromData' || type === 'toVisible') {\n                return _fnColumnIndexToVisible(ctx, idx);\n            }\n        }\n    });\n\n    _api_register('column()', function (selector, opts) {\n        return _selector_first(this.columns(selector, opts));\n    });\n\n    var __cell_selector = function (settings, selector, opts)\n    {\n        var data = settings.aoData;\n        var rows = _selector_row_indexes(settings, opts);\n        var cells = _removeEmpty(_pluck_order(data, rows, 'anCells'));\n        var allCells = $([].concat.apply([], cells));\n        var row;\n        var columns = settings.aoColumns.length;\n        var a, i, ien, j, o, host;\n\n        var run = function (s) {\n            var fnSelector = typeof s === 'function';\n\n            if (s === null || s === undefined || fnSelector) {\n                // All cells and function selectors\n                a = [];\n\n                for (i = 0, ien = rows.length; i < ien; i++) {\n                    row = rows[i];\n\n                    for (j = 0; j < columns; j++) {\n                        o = {\n                            row: row,\n                            column: j\n                        };\n\n                        if (fnSelector) {\n                            // Selector - function\n                            host = data[ row ];\n\n                            if (s(o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null)) {\n                                a.push(o);\n                            }\n                        }\n                        else {\n                            // Selector - all\n                            a.push(o);\n                        }\n                    }\n                }\n\n                return a;\n            }\n\n            // Selector - index\n            if ($.isPlainObject(s)) {\n                return [s];\n            }\n\n            // Selector - jQuery filtered cells\n            var jqResult = allCells\n                    .filter(s)\n                    .map(function (i, el) {\n                        return {// use a new object, in case someone changes the values\n                            row: el._DT_CellIndex.row,\n                            column: el._DT_CellIndex.column\n                        };\n                    })\n                    .toArray();\n\n            if (jqResult.length || !s.nodeName) {\n                return jqResult;\n            }\n\n            // Otherwise the selector is a node, and there is one last option - the\n            // element might be a child of an element which has dt-row and dt-column\n            // data attributes\n            host = $(s).closest('*[data-dt-row]');\n            return host.length ?\n                    [{\n                            row: host.data('dt-row'),\n                            column: host.data('dt-column')\n                        }] :\n                    [];\n        };\n\n        return _selector_run('cell', selector, run, settings, opts);\n    };\n\n    _api_register('cells()', function (rowSelector, columnSelector, opts) {\n        // Argument shifting\n        if ($.isPlainObject(rowSelector)) {\n            // Indexes\n            if (rowSelector.row === undefined) {\n                // Selector options in first parameter\n                opts = rowSelector;\n                rowSelector = null;\n            }\n            else {\n                // Cell index objects in first parameter\n                opts = columnSelector;\n                columnSelector = null;\n            }\n        }\n        if ($.isPlainObject(columnSelector)) {\n            opts = columnSelector;\n            columnSelector = null;\n        }\n\n        // Cell selector\n        if (columnSelector === null || columnSelector === undefined) {\n            return this.iterator('table', function (settings) {\n                return __cell_selector(settings, rowSelector, _selector_opts(opts));\n            });\n        }\n\n        // Row + column selector\n        var columns = this.columns(columnSelector, opts);\n        var rows = this.rows(rowSelector, opts);\n        var a, i, ien, j, jen;\n\n        var cells = this.iterator('table', function (settings, idx) {\n            a = [];\n\n            for (i = 0, ien = rows[idx].length; i < ien; i++) {\n                for (j = 0, jen = columns[idx].length; j < jen; j++) {\n                    a.push({\n                        row: rows[idx][i],\n                        column: columns[idx][j]\n                    });\n                }\n            }\n\n            return a;\n        }, 1);\n\n        $.extend(cells.selector, {\n            cols: columnSelector,\n            rows: rowSelector,\n            opts: opts\n        });\n\n        return cells;\n    });\n\n    _api_registerPlural('cells().nodes()', 'cell().node()', function () {\n        return this.iterator('cell', function (settings, row, column) {\n            var data = settings.aoData[ row ];\n\n            return data && data.anCells ?\n                    data.anCells[ column ] :\n                    undefined;\n        }, 1);\n    });\n\n    _api_register('cells().data()', function () {\n        return this.iterator('cell', function (settings, row, column) {\n            return _fnGetCellData(settings, row, column);\n        }, 1);\n    });\n\n    _api_registerPlural('cells().cache()', 'cell().cache()', function (type) {\n        type = type === 'search' ? '_aFilterData' : '_aSortData';\n\n        return this.iterator('cell', function (settings, row, column) {\n            return settings.aoData[ row ][ type ][ column ];\n        }, 1);\n    });\n\n    _api_registerPlural('cells().render()', 'cell().render()', function (type) {\n        return this.iterator('cell', function (settings, row, column) {\n            return _fnGetCellData(settings, row, column, type);\n        }, 1);\n    });\n\n    _api_registerPlural('cells().indexes()', 'cell().index()', function () {\n        return this.iterator('cell', function (settings, row, column) {\n            return {\n                row: row,\n                column: column,\n                columnVisible: _fnColumnIndexToVisible(settings, column)\n            };\n        }, 1);\n    });\n\n    _api_registerPlural('cells().invalidate()', 'cell().invalidate()', function (src) {\n        return this.iterator('cell', function (settings, row, column) {\n            _fnInvalidate(settings, row, src, column);\n        });\n    });\n\n    _api_register('cell()', function (rowSelector, columnSelector, opts) {\n        return _selector_first(this.cells(rowSelector, columnSelector, opts));\n    });\n\n    _api_register('cell().data()', function (data) {\n        var ctx = this.context;\n        var cell = this[0];\n\n        if (data === undefined) {\n            // Get\n            return ctx.length && cell.length ?\n                    _fnGetCellData(ctx[0], cell[0].row, cell[0].column) :\n                    undefined;\n        }\n\n        // Set\n        _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);\n        _fnInvalidate(ctx[0], cell[0].row, 'data', cell[0].column);\n\n        return this;\n    });\n\n    /**\n     * Get current ordering (sorting) that has been applied to the table.\n     *\n     * @returns {array} 2D array containing the sorting information for the first\n     *   table in the current context. Each element in the parent array represents\n     *   a column being sorted upon (i.e. multi-sorting with two columns would have\n     *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n     *   the column index that the sorting condition applies to, the second is the\n     *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n     *   index of the sorting order from the `column.sorting` initialisation array.\n     *//**\n      * Set the ordering for the table.\n      *\n      * @param {integer} order Column index to sort upon.\n      * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n      * @returns {DataTables.Api} this\n      *//**\n       * Set the ordering for the table.\n       *\n       * @param {array} order 1D array of sorting information to be applied.\n       * @param {array} [...] Optional additional sorting conditions\n       * @returns {DataTables.Api} this\n       *//**\n        * Set the ordering for the table.\n        *\n        * @param {array} order 2D array of sorting information to be applied.\n        * @returns {DataTables.Api} this\n        */\n    _api_register('order()', function (order, dir) {\n        var ctx = this.context;\n\n        if (order === undefined) {\n            // get\n            return ctx.length !== 0 ?\n                    ctx[0].aaSorting :\n                    undefined;\n        }\n\n        // set\n        if (typeof order === 'number') {\n            // Simple column / direction passed in\n            order = [[order, dir]];\n        }\n        else if (order.length && !$.isArray(order[0])) {\n            // Arguments passed in (list of 1D arrays)\n            order = Array.prototype.slice.call(arguments);\n        }\n        // otherwise a 2D array was passed in\n\n        return this.iterator('table', function (settings) {\n            settings.aaSorting = order.slice();\n        });\n    });\n\n    /**\n     * Attach a sort listener to an element for a given column\n     *\n     * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n     *   listener to. This can take the form of a single DOM node, a jQuery\n     *   collection of nodes or a jQuery selector which will identify the node(s).\n     * @param {integer} column the column that a click on this node will sort on\n     * @param {function} [callback] callback function when sort is run\n     * @returns {DataTables.Api} this\n     */\n    _api_register('order.listener()', function (node, column, callback) {\n        return this.iterator('table', function (settings) {\n            _fnSortAttachListener(settings, node, column, callback);\n        });\n    });\n\n    _api_register('order.fixed()', function (set) {\n        if (!set) {\n            var ctx = this.context;\n            var fixed = ctx.length ?\n                    ctx[0].aaSortingFixed :\n                    undefined;\n\n            return $.isArray(fixed) ?\n                    {pre: fixed} :\n                    fixed;\n        }\n\n        return this.iterator('table', function (settings) {\n            settings.aaSortingFixed = $.extend(true, {}, set);\n        });\n    });\n\n    // Order by the selected column(s)\n    _api_register([\n        'columns().order()',\n        'column().order()'\n    ], function (dir) {\n        var that = this;\n\n        return this.iterator('table', function (settings, i) {\n            var sort = [];\n\n            $.each(that[i], function (j, col) {\n                sort.push([col, dir]);\n            });\n\n            settings.aaSorting = sort;\n        });\n    });\n\n    _api_register('search()', function (input, regex, smart, caseInsen) {\n        var ctx = this.context;\n\n        if (input === undefined) {\n            // get\n            return ctx.length !== 0 ?\n                    ctx[0].oPreviousSearch.sSearch :\n                    undefined;\n        }\n\n        // set\n        return this.iterator('table', function (settings) {\n            if (!settings.oFeatures.bFilter) {\n                return;\n            }\n\n            _fnFilterComplete(settings, $.extend({}, settings.oPreviousSearch, {\n                \"sSearch\": input + \"\",\n                \"bRegex\": regex === null ? false : regex,\n                \"bSmart\": smart === null ? true : smart,\n                \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n            }), 1);\n        });\n    });\n\n    _api_registerPlural(\n            'columns().search()',\n            'column().search()',\n            function (input, regex, smart, caseInsen) {\n                return this.iterator('column', function (settings, column) {\n                    var preSearch = settings.aoPreSearchCols;\n\n                    if (input === undefined) {\n                        // get\n                        return preSearch[ column ].sSearch;\n                    }\n\n                    // set\n                    if (!settings.oFeatures.bFilter) {\n                        return;\n                    }\n\n                    $.extend(preSearch[ column ], {\n                        \"sSearch\": input + \"\",\n                        \"bRegex\": regex === null ? false : regex,\n                        \"bSmart\": smart === null ? true : smart,\n                        \"bCaseInsensitive\": caseInsen === null ? true : caseInsen\n                    });\n\n                    _fnFilterComplete(settings, settings.oPreviousSearch, 1);\n                });\n            }\n    );\n\n    /*\n     * State API methods\n     */\n\n    _api_register('state()', function () {\n        return this.context.length ?\n                this.context[0].oSavedState :\n                null;\n    });\n\n    _api_register('state.clear()', function () {\n        return this.iterator('table', function (settings) {\n            // Save an empty object\n            settings.fnStateSaveCallback.call(settings.oInstance, settings, {});\n        });\n    });\n\n    _api_register('state.loaded()', function () {\n        return this.context.length ?\n                this.context[0].oLoadedState :\n                null;\n    });\n\n    _api_register('state.save()', function () {\n        return this.iterator('table', function (settings) {\n            _fnSaveState(settings);\n        });\n    });\n\n    /**\n     * Provide a common method for plug-ins to check the version of DataTables being\n     * used, in order to ensure compatibility.\n     *\n     *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n     *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n     *  @returns {boolean} true if this version of DataTables is greater or equal to\n     *    the required version, or false if this version of DataTales is not\n     *    suitable\n     *  @static\n     *  @dtopt API-Static\n     *\n     *  @example\n     *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n     */\n    DataTable.versionCheck = DataTable.fnVersionCheck = function (version)\n    {\n        var aThis = DataTable.version.split('.');\n        var aThat = version.split('.');\n        var iThis, iThat;\n\n        for (var i = 0, iLen = aThat.length; i < iLen; i++) {\n            iThis = parseInt(aThis[i], 10) || 0;\n            iThat = parseInt(aThat[i], 10) || 0;\n\n            // Parts are the same, keep comparing\n            if (iThis === iThat) {\n                continue;\n            }\n\n            // Parts are different, return immediately\n            return iThis > iThat;\n        }\n\n        return true;\n    };\n\n    /**\n     * Check if a `<table>` node is a DataTable table already or not.\n     *\n     *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n     *      selector for the table to test. Note that if more than more than one\n     *      table is passed on, only the first will be checked\n     *  @returns {boolean} true the table given is a DataTable, or false otherwise\n     *  @static\n     *  @dtopt API-Static\n     *\n     *  @example\n     *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n     *      $('#example').dataTable();\n     *    }\n     */\n    DataTable.isDataTable = DataTable.fnIsDataTable = function (table)\n    {\n        var t = $(table).get(0);\n        var is = false;\n\n        if (table instanceof DataTable.Api) {\n            return true;\n        }\n\n        $.each(DataTable.settings, function (i, o) {\n            var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n            var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n            if (o.nTable === t || head === t || foot === t) {\n                is = true;\n            }\n        });\n\n        return is;\n    };\n\n    /**\n     * Get all DataTable tables that have been initialised - optionally you can\n     * select to get only currently visible tables.\n     *\n     *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n     *    or visible tables only.\n     *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n     *    DataTables\n     *  @static\n     *  @dtopt API-Static\n     *\n     *  @example\n     *    $.each( $.fn.dataTable.tables(true), function () {\n     *      $(table).DataTable().columns.adjust();\n     *    } );\n     */\n    DataTable.tables = DataTable.fnTables = function (visible)\n    {\n        var api = false;\n\n        if ($.isPlainObject(visible)) {\n            api = visible.api;\n            visible = visible.visible;\n        }\n\n        var a = $.map(DataTable.settings, function (o) {\n            if (!visible || (visible && $(o.nTable).is(':visible'))) {\n                return o.nTable;\n            }\n        });\n\n        return api ?\n                new _Api(a) :\n                a;\n    };\n\n    /**\n     * Convert from camel case parameters to Hungarian notation. This is made public\n     * for the extensions to provide the same ability as DataTables core to accept\n     * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n     * parameters.\n     *\n     *  @param {object} src The model object which holds all parameters that can be\n     *    mapped.\n     *  @param {object} user The object to convert from camel case to Hungarian.\n     *  @param {boolean} force When set to `true`, properties which already have a\n     *    Hungarian value in the `user` object will be overwritten. Otherwise they\n     *    won't be.\n     */\n    DataTable.camelToHungarian = _fnCamelToHungarian;\n\n    /**\n     *\n     */\n    _api_register('$()', function (selector, opts) {\n        var\n                rows = this.rows(opts).nodes(), // Get all rows\n                jqRows = $(rows);\n\n        return $([].concat(\n                jqRows.filter(selector).toArray(),\n                jqRows.find(selector).toArray()\n                ));\n    });\n\n    // jQuery functions to operate on the tables\n    $.each(['on', 'one', 'off'], function (i, key) {\n        _api_register(key + '()', function ( /* event, handler */ ) {\n            var args = Array.prototype.slice.call(arguments);\n\n            // Add the `dt` namespace automatically if it isn't already present\n            if (!args[0].match(/\\.dt\\b/)) {\n                args[0] += '.dt';\n            }\n\n            var inst = $(this.tables().nodes());\n            inst[key].apply(inst, args);\n            return this;\n        });\n    });\n\n    _api_register('clear()', function () {\n        return this.iterator('table', function (settings) {\n            _fnClearTable(settings);\n        });\n    });\n\n    _api_register('settings()', function () {\n        return new _Api(this.context, this.context);\n    });\n\n    _api_register('init()', function () {\n        var ctx = this.context;\n        return ctx.length ? ctx[0].oInit : null;\n    });\n\n    _api_register('data()', function () {\n        return this.iterator('table', function (settings) {\n            return _pluck(settings.aoData, '_aData');\n        }).flatten();\n    });\n\n    _api_register('destroy()', function (remove) {\n        remove = remove || false;\n\n        return this.iterator('table', function (settings) {\n            var orig = settings.nTableWrapper.parentNode;\n            var classes = settings.oClasses;\n            var table = settings.nTable;\n            var tbody = settings.nTBody;\n            var thead = settings.nTHead;\n            var tfoot = settings.nTFoot;\n            var jqTable = $(table);\n            var jqTbody = $(tbody);\n            var jqWrapper = $(settings.nTableWrapper);\n            var rows = $.map(settings.aoData, function (r) {\n                return r.nTr;\n            });\n            var i, ien;\n\n            // Flag to note that the table is currently being destroyed - no action\n            // should be taken\n            settings.bDestroying = true;\n\n            // Fire off the destroy callbacks for plug-ins etc\n            _fnCallbackFire(settings, \"aoDestroyCallback\", \"destroy\", [settings]);\n\n            // If not being removed from the document, make all columns visible\n            if (!remove) {\n                new _Api(settings).columns().visible(true);\n            }\n\n            // Blitz all `DT` namespaced events (these are internal events, the\n            // lowercase, `dt` events are user subscribed and they are responsible\n            // for removing them\n            jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n            $(window).off('.DT-' + settings.sInstance);\n\n            // When scrolling we had to break the table up - restore it\n            if (table != thead.parentNode) {\n                jqTable.children('thead').detach();\n                jqTable.append(thead);\n            }\n\n            if (tfoot && table != tfoot.parentNode) {\n                jqTable.children('tfoot').detach();\n                jqTable.append(tfoot);\n            }\n\n            settings.aaSorting = [];\n            settings.aaSortingFixed = [];\n            _fnSortingClasses(settings);\n\n            $(rows).removeClass(settings.asStripeClasses.join(' '));\n\n            $('th, td', thead).removeClass(classes.sSortable + ' ' +\n                    classes.sSortableAsc + ' ' + classes.sSortableDesc + ' ' + classes.sSortableNone\n                    );\n\n            if (settings.bJUI) {\n                $('th span.' + classes.sSortIcon + ', td span.' + classes.sSortIcon, thead).detach();\n                $('th, td', thead).each(function () {\n                    var wrapper = $('div.' + classes.sSortJUIWrapper, this);\n                    $(this).append(wrapper.contents());\n                    wrapper.detach();\n                });\n            }\n\n            // Add the TR elements back into the table in their original order\n            jqTbody.children().detach();\n            jqTbody.append(rows);\n\n            // Remove the DataTables generated nodes, events and classes\n            var removedMethod = remove ? 'remove' : 'detach';\n            jqTable[ removedMethod ]();\n            jqWrapper[ removedMethod ]();\n\n            // If we need to reattach the table to the document\n            if (!remove && orig) {\n                // insertBefore acts like appendChild if !arg[1]\n                orig.insertBefore(table, settings.nTableReinsertBefore);\n\n                // Restore the width of the original table - was read from the style property,\n                // so we can restore directly to that\n                jqTable\n                        .css('width', settings.sDestroyWidth)\n                        .removeClass(classes.sTable);\n\n                // If the were originally stripe classes - then we add them back here.\n                // Note this is not fool proof (for example if not all rows had stripe\n                // classes - but it's a good effort without getting carried away\n                ien = settings.asDestroyStripes.length;\n\n                if (ien) {\n                    jqTbody.children().each(function (i) {\n                        $(this).addClass(settings.asDestroyStripes[i % ien]);\n                    });\n                }\n            }\n\n            /* Remove the settings object from the settings array */\n            var idx = $.inArray(settings, DataTable.settings);\n            if (idx !== -1) {\n                DataTable.settings.splice(idx, 1);\n            }\n        });\n    });\n\n    // Add the `every()` method for rows, columns and cells in a compact form\n    $.each(['column', 'row', 'cell'], function (i, type) {\n        _api_register(type + 's().every()', function (fn) {\n            var opts = this.selector.opts;\n            var api = this;\n\n            return this.iterator(type, function (settings, arg1, arg2, arg3, arg4) {\n                // Rows and columns:\n                //  arg1 - index\n                //  arg2 - table counter\n                //  arg3 - loop counter\n                //  arg4 - undefined\n                // Cells:\n                //  arg1 - row index\n                //  arg2 - column index\n                //  arg3 - table counter\n                //  arg4 - loop counter\n                fn.call(\n                        api[ type ](\n                        arg1,\n                        type === 'cell' ? arg2 : opts,\n                        type === 'cell' ? opts : undefined\n                        ),\n                        arg1, arg2, arg3, arg4\n                        );\n            });\n        });\n    });\n\n    // i18n method for extensions to be able to use the language object from the\n    // DataTable\n    _api_register('i18n()', function (token, def, plural) {\n        var ctx = this.context[0];\n        var resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);\n\n        if (resolved === undefined) {\n            resolved = def;\n        }\n\n        if (plural !== undefined && $.isPlainObject(resolved)) {\n            resolved = resolved[ plural ] !== undefined ?\n                    resolved[ plural ] :\n                    resolved._;\n        }\n\n        return resolved.replace('%d', plural); // nb: plural might be undefined,\n    });\n\n    /**\n     * Version string for plug-ins to check compatibility. Allowed format is\n     * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n     * only for non-release builds. See http://semver.org/ for more information.\n     *  @member\n     *  @type string\n     *  @default Version number\n     */\n    DataTable.version = \"1.10.13-dev\";\n\n    /**\n     * Private data store, containing all of the settings objects that are\n     * created for the tables on a given page.\n     *\n     * Note that the `DataTable.settings` object is aliased to\n     * `jQuery.fn.dataTableExt` through which it may be accessed and\n     * manipulated, or `jQuery.fn.dataTable.settings`.\n     *  @member\n     *  @type array\n     *  @default []\n     *  @private\n     */\n    DataTable.settings = [];\n\n    /**\n     * Object models container, for the various models that DataTables has\n     * available to it. These models define the objects that are used to hold\n     * the active state and configuration of the table.\n     *  @namespace\n     */\n    DataTable.models = {};\n\n    /**\n     * Template object for the way in which DataTables holds information about\n     * search information for the global filter and individual column filters.\n     *  @namespace\n     */\n    DataTable.models.oSearch = {\n        /**\n         * Flag to indicate if the filtering should be case insensitive or not\n         *  @type boolean\n         *  @default true\n         */\n        \"bCaseInsensitive\": true,\n        /**\n         * Applied search term\n         *  @type string\n         *  @default <i>Empty string</i>\n         */\n        \"sSearch\": \"\",\n        /**\n         * Flag to indicate if the search term should be interpreted as a\n         * regular expression (true) or not (false) and therefore and special\n         * regex characters escaped.\n         *  @type boolean\n         *  @default false\n         */\n        \"bRegex\": false,\n        /**\n         * Flag to indicate if DataTables is to use its smart filtering or not.\n         *  @type boolean\n         *  @default true\n         */\n        \"bSmart\": true\n    };\n\n    /**\n     * Template object for the way in which DataTables holds information about\n     * each individual row. This is the object format used for the settings\n     * aoData array.\n     *  @namespace\n     */\n    DataTable.models.oRow = {\n        /**\n         * TR element for the row\n         *  @type node\n         *  @default null\n         */\n        \"nTr\": null,\n        /**\n         * Array of TD elements for each row. This is null until the row has been\n         * created.\n         *  @type array nodes\n         *  @default []\n         */\n        \"anCells\": null,\n        /**\n         * Data object from the original data source for the row. This is either\n         * an array if using the traditional form of DataTables, or an object if\n         * using mData options. The exact type will depend on the passed in\n         * data from the data source, or will be an array if using DOM a data\n         * source.\n         *  @type array|object\n         *  @default []\n         */\n        \"_aData\": [],\n        /**\n         * Sorting data cache - this array is ostensibly the same length as the\n         * number of columns (although each index is generated only as it is\n         * needed), and holds the data that is used for sorting each column in the\n         * row. We do this cache generation at the start of the sort in order that\n         * the formatting of the sort data need be done only once for each cell\n         * per sort. This array should not be read from or written to by anything\n         * other than the master sorting methods.\n         *  @type array\n         *  @default null\n         *  @private\n         */\n        \"_aSortData\": null,\n        /**\n         * Per cell filtering data cache. As per the sort data cache, used to\n         * increase the performance of the filtering in DataTables\n         *  @type array\n         *  @default null\n         *  @private\n         */\n        \"_aFilterData\": null,\n        /**\n         * Filtering data cache. This is the same as the cell filtering cache, but\n         * in this case a string rather than an array. This is easily computed with\n         * a join on `_aFilterData`, but is provided as a cache so the join isn't\n         * needed on every search (memory traded for performance)\n         *  @type array\n         *  @default null\n         *  @private\n         */\n        \"_sFilterRow\": null,\n        /**\n         * Cache of the class name that DataTables has applied to the row, so we\n         * can quickly look at this variable rather than needing to do a DOM check\n         * on className for the nTr property.\n         *  @type string\n         *  @default <i>Empty string</i>\n         *  @private\n         */\n        \"_sRowStripe\": \"\",\n        /**\n         * Denote if the original data source was from the DOM, or the data source\n         * object. This is used for invalidating data, so DataTables can\n         * automatically read data from the original source, unless uninstructed\n         * otherwise.\n         *  @type string\n         *  @default null\n         *  @private\n         */\n        \"src\": null,\n        /**\n         * Index in the aoData array. This saves an indexOf lookup when we have the\n         * object, but want to know the index\n         *  @type integer\n         *  @default -1\n         *  @private\n         */\n        \"idx\": -1\n    };\n\n    /**\n     * Template object for the column information object in DataTables. This object\n     * is held in the settings aoColumns array and contains all the information that\n     * DataTables needs about each individual column.\n     *\n     * Note that this object is related to {@link DataTable.defaults.column}\n     * but this one is the internal data store for DataTables's cache of columns.\n     * It should NOT be manipulated outside of DataTables. Any configuration should\n     * be done through the initialisation options.\n     *  @namespace\n     */\n    DataTable.models.oColumn = {\n        /**\n         * Column index. This could be worked out on-the-fly with $.inArray, but it\n         * is faster to just hold it as a variable\n         *  @type integer\n         *  @default null\n         */\n        \"idx\": null,\n        /**\n         * A list of the columns that sorting should occur on when this column\n         * is sorted. That this property is an array allows multi-column sorting\n         * to be defined for a column (for example first name / last name columns\n         * would benefit from this). The values are integers pointing to the\n         * columns to be sorted on (typically it will be a single integer pointing\n         * at itself, but that doesn't need to be the case).\n         *  @type array\n         */\n        \"aDataSort\": null,\n        /**\n         * Define the sorting directions that are applied to the column, in sequence\n         * as the column is repeatedly sorted upon - i.e. the first value is used\n         * as the sorting direction when the column if first sorted (clicked on).\n         * Sort it again (click again) and it will move on to the next index.\n         * Repeat until loop.\n         *  @type array\n         */\n        \"asSorting\": null,\n        /**\n         * Flag to indicate if the column is searchable, and thus should be included\n         * in the filtering or not.\n         *  @type boolean\n         */\n        \"bSearchable\": null,\n        /**\n         * Flag to indicate if the column is sortable or not.\n         *  @type boolean\n         */\n        \"bSortable\": null,\n        /**\n         * Flag to indicate if the column is currently visible in the table or not\n         *  @type boolean\n         */\n        \"bVisible\": null,\n        /**\n         * Store for manual type assignment using the `column.type` option. This\n         * is held in store so we can manipulate the column's `sType` property.\n         *  @type string\n         *  @default null\n         *  @private\n         */\n        \"_sManualType\": null,\n        /**\n         * Flag to indicate if HTML5 data attributes should be used as the data\n         * source for filtering or sorting. True is either are.\n         *  @type boolean\n         *  @default false\n         *  @private\n         */\n        \"_bAttrSrc\": false,\n        /**\n         * Developer definable function that is called whenever a cell is created (Ajax source,\n         * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n         * allowing you to modify the DOM element (add background colour for example) when the\n         * element is available.\n         *  @type function\n         *  @param {element} nTd The TD node that has been created\n         *  @param {*} sData The Data for the cell\n         *  @param {array|object} oData The data for the whole row\n         *  @param {int} iRow The row index for the aoData data store\n         *  @default null\n         */\n        \"fnCreatedCell\": null,\n        /**\n         * Function to get data from a cell in a column. You should <b>never</b>\n         * access data directly through _aData internally in DataTables - always use\n         * the method attached to this property. It allows mData to function as\n         * required. This function is automatically assigned by the column\n         * initialisation method\n         *  @type function\n         *  @param {array|object} oData The data array/object for the array\n         *    (i.e. aoData[]._aData)\n         *  @param {string} sSpecific The specific data type you want to get -\n         *    'display', 'type' 'filter' 'sort'\n         *  @returns {*} The data for the cell from the given row's data\n         *  @default null\n         */\n        \"fnGetData\": null,\n        /**\n         * Function to set data for a cell in the column. You should <b>never</b>\n         * set the data directly to _aData internally in DataTables - always use\n         * this method. It allows mData to function as required. This function\n         * is automatically assigned by the column initialisation method\n         *  @type function\n         *  @param {array|object} oData The data array/object for the array\n         *    (i.e. aoData[]._aData)\n         *  @param {*} sValue Value to set\n         *  @default null\n         */\n        \"fnSetData\": null,\n        /**\n         * Property to read the value for the cells in the column from the data\n         * source array / object. If null, then the default content is used, if a\n         * function is given then the return from the function is used.\n         *  @type function|int|string|null\n         *  @default null\n         */\n        \"mData\": null,\n        /**\n         * Partner property to mData which is used (only when defined) to get\n         * the data - i.e. it is basically the same as mData, but without the\n         * 'set' option, and also the data fed to it is the result from mData.\n         * This is the rendering method to match the data method of mData.\n         *  @type function|int|string|null\n         *  @default null\n         */\n        \"mRender\": null,\n        /**\n         * Unique header TH/TD element for this column - this is what the sorting\n         * listener is attached to (if sorting is enabled.)\n         *  @type node\n         *  @default null\n         */\n        \"nTh\": null,\n        /**\n         * Unique footer TH/TD element for this column (if there is one). Not used\n         * in DataTables as such, but can be used for plug-ins to reference the\n         * footer for each column.\n         *  @type node\n         *  @default null\n         */\n        \"nTf\": null,\n        /**\n         * The class to apply to all TD elements in the table's TBODY for the column\n         *  @type string\n         *  @default null\n         */\n        \"sClass\": null,\n        /**\n         * When DataTables calculates the column widths to assign to each column,\n         * it finds the longest string in each column and then constructs a\n         * temporary table and reads the widths from that. The problem with this\n         * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n         * string - thus the calculation can go wrong (doing it properly and putting\n         * it into an DOM object and measuring that is horribly(!) slow). Thus as\n         * a \"work around\" we provide this option. It will append its value to the\n         * text that is found to be the longest string for the column - i.e. padding.\n         *  @type string\n         */\n        \"sContentPadding\": null,\n        /**\n         * Allows a default value to be given for a column's data, and will be used\n         * whenever a null data source is encountered (this can be because mData\n         * is set to null, or because the data source itself is null).\n         *  @type string\n         *  @default null\n         */\n        \"sDefaultContent\": null,\n        /**\n         * Name for the column, allowing reference to the column by name as well as\n         * by index (needs a lookup to work by name).\n         *  @type string\n         */\n        \"sName\": null,\n        /**\n         * Custom sorting data type - defines which of the available plug-ins in\n         * afnSortData the custom sorting will use - if any is defined.\n         *  @type string\n         *  @default std\n         */\n        \"sSortDataType\": 'std',\n        /**\n         * Class to be applied to the header element when sorting on this column\n         *  @type string\n         *  @default null\n         */\n        \"sSortingClass\": null,\n        /**\n         * Class to be applied to the header element when sorting on this column -\n         * when jQuery UI theming is used.\n         *  @type string\n         *  @default null\n         */\n        \"sSortingClassJUI\": null,\n        /**\n         * Title of the column - what is seen in the TH element (nTh).\n         *  @type string\n         */\n        \"sTitle\": null,\n        /**\n         * Column sorting and filtering type\n         *  @type string\n         *  @default null\n         */\n        \"sType\": null,\n        /**\n         * Width of the column\n         *  @type string\n         *  @default null\n         */\n        \"sWidth\": null,\n        /**\n         * Width of the column when it was first \"encountered\"\n         *  @type string\n         *  @default null\n         */\n        \"sWidthOrig\": null\n    };\n\n    /*\n     * Developer note: The properties of the object below are given in Hungarian\n     * notation, that was used as the interface for DataTables prior to v1.10, however\n     * from v1.10 onwards the primary interface is camel case. In order to avoid\n     * breaking backwards compatibility utterly with this change, the Hungarian\n     * version is still, internally the primary interface, but is is not documented\n     * - hence the @name tags in each doc comment. This allows a Javascript function\n     * to create a map from Hungarian notation to camel case (going the other direction\n     * would require each property to be listed, which would at around 3K to the size\n     * of DataTables, while this method is about a 0.5K hit.\n     *\n     * Ultimately this does pave the way for Hungarian notation to be dropped\n     * completely, but that is a massive amount of work and will break current\n     * installs (therefore is on-hold until v2).\n     */\n\n    /**\n     * Initialisation options that can be given to DataTables at initialisation\n     * time.\n     *  @namespace\n     */\n    DataTable.defaults = {\n        /**\n         * An array of data to use for the table, passed in at initialisation which\n         * will be used in preference to any data which is already in the DOM. This is\n         * particularly useful for constructing tables purely in Javascript, for\n         * example with a custom Ajax call.\n         *  @type array\n         *  @default null\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.data\n         *\n         *  @example\n         *    // Using a 2D array data source\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"data\": [\n         *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n         *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n         *        ],\n         *        \"columns\": [\n         *          { \"title\": \"Engine\" },\n         *          { \"title\": \"Browser\" },\n         *          { \"title\": \"Platform\" },\n         *          { \"title\": \"Version\" },\n         *          { \"title\": \"Grade\" }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using an array of objects as a data source (`data`)\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"data\": [\n         *          {\n         *            \"engine\":   \"Trident\",\n         *            \"browser\":  \"Internet Explorer 4.0\",\n         *            \"platform\": \"Win 95+\",\n         *            \"version\":  4,\n         *            \"grade\":    \"X\"\n         *          },\n         *          {\n         *            \"engine\":   \"Trident\",\n         *            \"browser\":  \"Internet Explorer 5.0\",\n         *            \"platform\": \"Win 95+\",\n         *            \"version\":  5,\n         *            \"grade\":    \"C\"\n         *          }\n         *        ],\n         *        \"columns\": [\n         *          { \"title\": \"Engine\",   \"data\": \"engine\" },\n         *          { \"title\": \"Browser\",  \"data\": \"browser\" },\n         *          { \"title\": \"Platform\", \"data\": \"platform\" },\n         *          { \"title\": \"Version\",  \"data\": \"version\" },\n         *          { \"title\": \"Grade\",    \"data\": \"grade\" }\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"aaData\": null,\n        /**\n         * If ordering is enabled, then DataTables will perform a first pass sort on\n         * initialisation. You can define which column(s) the sort is performed\n         * upon, and the sorting direction, with this variable. The `sorting` array\n         * should contain an array for each column to be sorted initially containing\n         * the column's index and a direction string ('asc' or 'desc').\n         *  @type array\n         *  @default [[0,'asc']]\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.order\n         *\n         *  @example\n         *    // Sort by 3rd column first, and then 4th column\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"order\": [[2,'asc'], [3,'desc']]\n         *      } );\n         *    } );\n         *\n         *    // No initial sorting\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"order\": []\n         *      } );\n         *    } );\n         */\n        \"aaSorting\": [[0, 'asc']],\n        /**\n         * This parameter is basically identical to the `sorting` parameter, but\n         * cannot be overridden by user interaction with the table. What this means\n         * is that you could have a column (visible or hidden) which the sorting\n         * will always be forced on first - any sorting after that (from the user)\n         * will then be performed as required. This can be useful for grouping rows\n         * together.\n         *  @type array\n         *  @default null\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.orderFixed\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"orderFixed\": [[0,'asc']]\n         *      } );\n         *    } )\n         */\n        \"aaSortingFixed\": [],\n        /**\n         * DataTables can be instructed to load data to display in the table from a\n         * Ajax source. This option defines how that Ajax call is made and where to.\n         *\n         * The `ajax` property has three different modes of operation, depending on\n         * how it is defined. These are:\n         *\n         * * `string` - Set the URL from where the data should be loaded from.\n         * * `object` - Define properties for `jQuery.ajax`.\n         * * `function` - Custom data get function\n         *\n         * `string`\n         * --------\n         *\n         * As a string, the `ajax` property simply defines the URL from which\n         * DataTables will load data.\n         *\n         * `object`\n         * --------\n         *\n         * As an object, the parameters in the object are passed to\n         * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control\n         * of the Ajax request. DataTables has a number of default parameters which\n         * you can override using this option. Please refer to the jQuery\n         * documentation for a full description of the options available, although\n         * the following parameters provide additional options in DataTables or\n         * require special consideration:\n         *\n         * * `data` - As with jQuery, `data` can be provided as an object, but it\n         *   can also be used as a function to manipulate the data DataTables sends\n         *   to the server. The function takes a single parameter, an object of\n         *   parameters with the values that DataTables has readied for sending. An\n         *   object may be returned which will be merged into the DataTables\n         *   defaults, or you can add the items to the object that was passed in and\n         *   not return anything from the function. This supersedes `fnServerParams`\n         *   from DataTables 1.9-.\n         *\n         * * `dataSrc` - By default DataTables will look for the property `data` (or\n         *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n         *   from an Ajax source or for server-side processing - this parameter\n         *   allows that property to be changed. You can use Javascript dotted\n         *   object notation to get a data source for multiple levels of nesting, or\n         *   it my be used as a function. As a function it takes a single parameter,\n         *   the JSON returned from the server, which can be manipulated as\n         *   required, with the returned value being that used by DataTables as the\n         *   data source for the table. This supersedes `sAjaxDataProp` from\n         *   DataTables 1.9-.\n         *\n         * * `success` - Should not be overridden it is used internally in\n         *   DataTables. To manipulate / transform the data returned by the server\n         *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n         *\n         * `function`\n         * ----------\n         *\n         * As a function, making the Ajax call is left up to yourself allowing\n         * complete control of the Ajax request. Indeed, if desired, a method other\n         * than Ajax could be used to obtain the required data, such as Web storage\n         * or an AIR database.\n         *\n         * The function is given four parameters and no return is required. The\n         * parameters are:\n         *\n         * 1. _object_ - Data to send to the server\n         * 2. _function_ - Callback function that must be executed when the required\n         *    data has been obtained. That data should be passed into the callback\n         *    as the only parameter\n         * 3. _object_ - DataTables settings object for the table\n         *\n         * Note that this supersedes `fnServerData` from DataTables 1.9-.\n         *\n         *  @type string|object|function\n         *  @default null\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.ajax\n         *  @since 1.10.0\n         *\n         * @example\n         *   // Get JSON data from a file via Ajax.\n         *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).\n         *   $('#example').dataTable( {\n         *     \"ajax\": \"data.json\"\n         *   } );\n         *\n         * @example\n         *   // Get JSON data from a file via Ajax, using `dataSrc` to change\n         *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"dataSrc\": \"tableData\"\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Get JSON data from a file via Ajax, using `dataSrc` to read data\n         *   // from a plain array rather than an array in an object\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"dataSrc\": \"\"\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Manipulate the data returned from the server - add a link to data\n         *   // (note this can, should, be done using `render` for the column - this\n         *   // is just a simple example of how the data can be manipulated).\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"dataSrc\": function ( json ) {\n         *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {\n         *           json[i][0] = '<a href=\"/message/'+json[i][0]+'>View message</a>';\n         *         }\n         *         return json;\n         *       }\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Add data to the request\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"data\": function ( d ) {\n         *         return {\n         *           \"extra_search\": $('#extra').val()\n         *         };\n         *       }\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Send request as POST\n         *   $('#example').dataTable( {\n         *     \"ajax\": {\n         *       \"url\": \"data.json\",\n         *       \"type\": \"POST\"\n         *     }\n         *   } );\n         *\n         * @example\n         *   // Get the data from localStorage (could interface with a form for\n         *   // adding, editing and removing rows).\n         *   $('#example').dataTable( {\n         *     \"ajax\": function (data, callback, settings) {\n         *       callback(\n         *         JSON.parse( localStorage.getItem('dataTablesData') )\n         *       );\n         *     }\n         *   } );\n         */\n        \"ajax\": null,\n        /**\n         * This parameter allows you to readily specify the entries in the length drop\n         * down menu that DataTables shows when pagination is enabled. It can be\n         * either a 1D array of options which will be used for both the displayed\n         * option and the value, or a 2D array which will use the array in the first\n         * position as the value, and the array in the second position as the\n         * displayed options (useful for language strings such as 'All').\n         *\n         * Note that the `pageLength` property will be automatically set to the\n         * first value given in this array, unless `pageLength` is also provided.\n         *  @type array\n         *  @default [ 10, 25, 50, 100 ]\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.lengthMenu\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"lengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n         *      } );\n         *    } );\n         */\n        \"aLengthMenu\": [10, 25, 50, 100],\n        /**\n         * The `columns` option in the initialisation parameter allows you to define\n         * details about the way individual columns behave. For a full list of\n         * column options that can be set, please see\n         * {@link DataTable.defaults.column}. Note that if you use `columns` to\n         * define your columns, you must have an entry in the array for every single\n         * column that you have in your table (these can be null if you don't which\n         * to specify any options).\n         *  @member\n         *\n         *  @name DataTable.defaults.column\n         */\n        \"aoColumns\": null,\n        /**\n         * Very similar to `columns`, `columnDefs` allows you to target a specific\n         * column, multiple columns, or all columns, using the `targets` property of\n         * each object in the array. This allows great flexibility when creating\n         * tables, as the `columnDefs` arrays can be of any length, targeting the\n         * columns you specifically want. `columnDefs` may use any of the column\n         * options available: {@link DataTable.defaults.column}, but it _must_\n         * have `targets` defined in each object in the array. Values in the `targets`\n         * array may be:\n         *   <ul>\n         *     <li>a string - class name will be matched on the TH for the column</li>\n         *     <li>0 or a positive integer - column index counting from the left</li>\n         *     <li>a negative integer - column index counting from the right</li>\n         *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n         *   </ul>\n         *  @member\n         *\n         *  @name DataTable.defaults.columnDefs\n         */\n        \"aoColumnDefs\": null,\n        /**\n         * Basically the same as `search`, this parameter defines the individual column\n         * filtering state at initialisation time. The array must be of the same size\n         * as the number of columns, and each element be an object with the parameters\n         * `search` and `escapeRegex` (the latter is optional). 'null' is also\n         * accepted and the default will be used.\n         *  @type array\n         *  @default []\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.searchCols\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"searchCols\": [\n         *          null,\n         *          { \"search\": \"My filter\" },\n         *          null,\n         *          { \"search\": \"^[0-9]\", \"escapeRegex\": false }\n         *        ]\n         *      } );\n         *    } )\n         */\n        \"aoSearchCols\": [],\n        /**\n         * An array of CSS classes that should be applied to displayed rows. This\n         * array may be of any length, and DataTables will apply each class\n         * sequentially, looping when required.\n         *  @type array\n         *  @default null <i>Will take the values determined by the `oClasses.stripe*`\n         *    options</i>\n         *\n         *  @dtopt Option\n         *  @name DataTable.defaults.stripeClasses\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n         *      } );\n         *    } )\n         */\n        \"asStripeClasses\": null,\n        /**\n         * Enable or disable automatic column width calculation. This can be disabled\n         * as an optimisation (it takes some time to calculate the widths) if the\n         * tables widths are passed in using `columns`.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.autoWidth\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"autoWidth\": false\n         *      } );\n         *    } );\n         */\n        \"bAutoWidth\": true,\n        /**\n         * Deferred rendering can provide DataTables with a huge speed boost when you\n         * are using an Ajax or JS data source for the table. This option, when set to\n         * true, will cause DataTables to defer the creation of the table elements for\n         * each row until they are needed for a draw - saving a significant amount of\n         * time.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.deferRender\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"ajax\": \"sources/arrays.txt\",\n         *        \"deferRender\": true\n         *      } );\n         *    } );\n         */\n        \"bDeferRender\": false,\n        /**\n         * Replace a DataTable which matches the given selector and replace it with\n         * one which has the properties of the new initialisation object passed. If no\n         * table matches the selector, then the new DataTable will be constructed as\n         * per normal.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.destroy\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"srollY\": \"200px\",\n         *        \"paginate\": false\n         *      } );\n         *\n         *      // Some time later....\n         *      $('#example').dataTable( {\n         *        \"filter\": false,\n         *        \"destroy\": true\n         *      } );\n         *    } );\n         */\n        \"bDestroy\": false,\n        /**\n         * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n         * that it allows the end user to input multiple words (space separated) and\n         * will match a row containing those words, even if not in the order that was\n         * specified (this allow matching across multiple columns). Note that if you\n         * wish to use filtering in DataTables this must remain 'true' - to remove the\n         * default filtering input box and retain filtering abilities, please use\n         * {@link DataTable.defaults.dom}.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.searching\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"searching\": false\n         *      } );\n         *    } );\n         */\n        \"bFilter\": true,\n        /**\n         * Enable or disable the table information display. This shows information\n         * about the data that is currently visible on the page, including information\n         * about filtered data if that action is being performed.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.info\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"info\": false\n         *      } );\n         *    } );\n         */\n        \"bInfo\": true,\n        /**\n         * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\n         * slightly different and additional mark-up from what DataTables has\n         * traditionally used).\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.jQueryUI\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"jQueryUI\": true\n         *      } );\n         *    } );\n         */\n        \"bJQueryUI\": false,\n        /**\n         * Allows the end user to select the size of a formatted page from a select\n         * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.lengthChange\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"lengthChange\": false\n         *      } );\n         *    } );\n         */\n        \"bLengthChange\": true,\n        /**\n         * Enable or disable pagination.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.paging\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"paging\": false\n         *      } );\n         *    } );\n         */\n        \"bPaginate\": true,\n        /**\n         * Enable or disable the display of a 'processing' indicator when the table is\n         * being processed (e.g. a sort). This is particularly useful for tables with\n         * large amounts of data where it can take a noticeable amount of time to sort\n         * the entries.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.processing\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"processing\": true\n         *      } );\n         *    } );\n         */\n        \"bProcessing\": false,\n        /**\n         * Retrieve the DataTables object for the given selector. Note that if the\n         * table has already been initialised, this parameter will cause DataTables\n         * to simply return the object that has already been set up - it will not take\n         * account of any changes you might have made to the initialisation object\n         * passed to DataTables (setting this parameter to true is an acknowledgement\n         * that you understand this). `destroy` can be used to reinitialise a table if\n         * you need.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.retrieve\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      initTable();\n         *      tableActions();\n         *    } );\n         *\n         *    function initTable ()\n         *    {\n         *      return $('#example').dataTable( {\n         *        \"scrollY\": \"200px\",\n         *        \"paginate\": false,\n         *        \"retrieve\": true\n         *      } );\n         *    }\n         *\n         *    function tableActions ()\n         *    {\n         *      var table = initTable();\n         *      // perform API operations with oTable\n         *    }\n         */\n        \"bRetrieve\": false,\n        /**\n         * When vertical (y) scrolling is enabled, DataTables will force the height of\n         * the table's viewport to the given height at all times (useful for layout).\n         * However, this can look odd when filtering data down to a small data set,\n         * and the footer is left \"floating\" further down. This parameter (when\n         * enabled) will cause DataTables to collapse the table's viewport down when\n         * the result set will fit within the given Y height.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.scrollCollapse\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"scrollY\": \"200\",\n         *        \"scrollCollapse\": true\n         *      } );\n         *    } );\n         */\n        \"bScrollCollapse\": false,\n        /**\n         * Configure DataTables to use server-side processing. Note that the\n         * `ajax` parameter must also be given in order to give DataTables a\n         * source to obtain the required data for each draw.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.serverSide\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"serverSide\": true,\n         *        \"ajax\": \"xhr.php\"\n         *      } );\n         *    } );\n         */\n        \"bServerSide\": false,\n        /**\n         * Enable or disable sorting of columns. Sorting of individual columns can be\n         * disabled by the `sortable` option for each column.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.ordering\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"ordering\": false\n         *      } );\n         *    } );\n         */\n        \"bSort\": true,\n        /**\n         * Enable or display DataTables' ability to sort multiple columns at the\n         * same time (activated by shift-click by the user).\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.orderMulti\n         *\n         *  @example\n         *    // Disable multiple column sorting ability\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"orderMulti\": false\n         *      } );\n         *    } );\n         */\n        \"bSortMulti\": true,\n        /**\n         * Allows control over whether DataTables should use the top (true) unique\n         * cell that is found for a single column, or the bottom (false - default).\n         * This is useful when using complex headers.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.orderCellsTop\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"orderCellsTop\": true\n         *      } );\n         *    } );\n         */\n        \"bSortCellsTop\": false,\n        /**\n         * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n         * `sorting\\_3` to the columns which are currently being sorted on. This is\n         * presented as a feature switch as it can increase processing time (while\n         * classes are removed and added) so for large data sets you might want to\n         * turn this off.\n         *  @type boolean\n         *  @default true\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.orderClasses\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"orderClasses\": false\n         *      } );\n         *    } );\n         */\n        \"bSortClasses\": true,\n        /**\n         * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n         * used to save table display information such as pagination information,\n         * display length, filtering and sorting. As such when the end user reloads\n         * the page the display display will match what thy had previously set up.\n         *\n         * Due to the use of `localStorage` the default state saving is not supported\n         * in IE6 or 7. If state saving is required in those browsers, use\n         * `stateSaveCallback` to provide a storage solution such as cookies.\n         *  @type boolean\n         *  @default false\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.stateSave\n         *\n         *  @example\n         *    $(document).ready( function () {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true\n         *      } );\n         *    } );\n         */\n        \"bStateSave\": false,\n        /**\n         * This function is called when a TR element is created (and all TD child\n         * elements have been inserted), or registered if using a DOM source, allowing\n         * manipulation of the TR element (adding classes etc).\n         *  @type function\n         *  @param {node} row \"TR\" element for the current row\n         *  @param {array} data Raw data array for this row\n         *  @param {int} dataIndex The index of this row in the internal aoData array\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.createdRow\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"createdRow\": function( row, data, dataIndex ) {\n         *          // Bold the grade for all 'A' grade browsers\n         *          if ( data[4] == \"A\" )\n         *          {\n         *            $('td:eq(4)', row).html( '<b>A</b>' );\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnCreatedRow\": null,\n        /**\n         * This function is called on every 'draw' event, and allows you to\n         * dynamically modify any aspect you want about the created DOM.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.drawCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"drawCallback\": function( settings ) {\n         *          alert( 'DataTables has redrawn the table' );\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnDrawCallback\": null,\n        /**\n         * Identical to fnHeaderCallback() but for the table footer this function\n         * allows you to modify the table footer on every 'draw' event.\n         *  @type function\n         *  @param {node} foot \"TR\" element for the footer\n         *  @param {array} data Full table data (as derived from the original HTML)\n         *  @param {int} start Index for the current display starting point in the\n         *    display array\n         *  @param {int} end Index for the current display ending point in the\n         *    display array\n         *  @param {array int} display Index array to translate the visual position\n         *    to the full data array\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.footerCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"footerCallback\": function( tfoot, data, start, end, display ) {\n         *          tfoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+start;\n         *        }\n         *      } );\n         *    } )\n         */\n        \"fnFooterCallback\": null,\n        /**\n         * When rendering large numbers in the information element for the table\n         * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n         * to have a comma separator for the 'thousands' units (e.g. 1 million is\n         * rendered as \"1,000,000\") to help readability for the end user. This\n         * function will override the default method DataTables uses.\n         *  @type function\n         *  @member\n         *  @param {int} toFormat number to be formatted\n         *  @returns {string} formatted string for DataTables to show the number\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.formatNumber\n         *\n         *  @example\n         *    // Format a number using a single quote for the separator (note that\n         *    // this can also be done with the language.thousands option)\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"formatNumber\": function ( toFormat ) {\n         *          return toFormat.toString().replace(\n         *            /\\B(?=(\\d{3})+(?!\\d))/g, \"'\"\n         *          );\n         *        };\n         *      } );\n         *    } );\n         */\n        \"fnFormatNumber\": function (toFormat) {\n            return toFormat.toString().replace(\n                    /\\B(?=(\\d{3})+(?!\\d))/g,\n                    this.oLanguage.sThousands\n                    );\n       },\n        /**\n         * This function is called on every 'draw' event, and allows you to\n         * dynamically modify the header row. This can be used to calculate and\n         * display useful information about the table.\n         *  @type function\n         *  @param {node} head \"TR\" element for the header\n         *  @param {array} data Full table data (as derived from the original HTML)\n         *  @param {int} start Index for the current display starting point in the\n         *    display array\n         *  @param {int} end Index for the current display ending point in the\n         *    display array\n         *  @param {array int} display Index array to translate the visual position\n         *    to the full data array\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.headerCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"fheaderCallback\": function( head, data, start, end, display ) {\n         *          head.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(end-start)+\" records\";\n         *        }\n         *      } );\n         *    } )\n         */\n        \"fnHeaderCallback\": null,\n        /**\n         * The information element can be used to convey information about the current\n         * state of the table. Although the internationalisation options presented by\n         * DataTables are quite capable of dealing with most customisations, there may\n         * be times where you wish to customise the string further. This callback\n         * allows you to do exactly that.\n         *  @type function\n         *  @param {object} oSettings DataTables settings object\n         *  @param {int} start Starting position in data for the draw\n         *  @param {int} end End position in data for the draw\n         *  @param {int} max Total number of rows in the table (regardless of\n         *    filtering)\n         *  @param {int} total Total number of rows in the data set, after filtering\n         *  @param {string} pre The string that DataTables has formatted using it's\n         *    own rules\n         *  @returns {string} The string to be displayed in the information element.\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.infoCallback\n         *\n         *  @example\n         *    $('#example').dataTable( {\n         *      \"infoCallback\": function( settings, start, end, max, total, pre ) {\n         *        return start +\" to \"+ end;\n         *      }\n         *    } );\n         */\n        \"fnInfoCallback\": null,\n        /**\n         * Called when the table has been initialised. Normally DataTables will\n         * initialise sequentially and there will be no need for this function,\n         * however, this does not hold true when using external language information\n         * since that is obtained using an async XHR call.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @param {object} json The JSON object request from the server - only\n         *    present if client-side Ajax sourced data is used\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.initComplete\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"initComplete\": function(settings, json) {\n         *          alert( 'DataTables has finished its initialisation.' );\n         *        }\n         *      } );\n         *    } )\n         */\n        \"fnInitComplete\": null,\n        /**\n         * Called at the very start of each table draw and can be used to cancel the\n         * draw by returning false, any other return (including undefined) results in\n         * the full draw occurring).\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @returns {boolean} False will cancel the draw, anything else (including no\n         *    return) will allow it to complete.\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.preDrawCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"preDrawCallback\": function( settings ) {\n         *          if ( $('#test').val() == 1 ) {\n         *            return false;\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnPreDrawCallback\": null,\n        /**\n         * This function allows you to 'post process' each row after it have been\n         * generated for each table draw, but before it is rendered on screen. This\n         * function might be used for setting the row class name etc.\n         *  @type function\n         *  @param {node} row \"TR\" element for the current row\n         *  @param {array} data Raw data array for this row\n         *  @param {int} displayIndex The display index for the current table draw\n         *  @param {int} displayIndexFull The index of the data in the full list of\n         *    rows (after filtering)\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.rowCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"rowCallback\": function( row, data, displayIndex, displayIndexFull ) {\n         *          // Bold the grade for all 'A' grade browsers\n         *          if ( data[4] == \"A\" ) {\n         *            $('td:eq(4)', row).html( '<b>A</b>' );\n         *          }\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnRowCallback\": null,\n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         * This parameter allows you to override the default function which obtains\n         * the data from the server so something more suitable for your application.\n         * For example you could use POST data, or pull information from a Gears or\n         * AIR database.\n         *  @type function\n         *  @member\n         *  @param {string} source HTTP source to obtain the data from (`ajax`)\n         *  @param {array} data A key/value pair object containing the data to send\n         *    to the server\n         *  @param {function} callback to be called on completion of the data get\n         *    process that will draw the data on the page.\n         *  @param {object} settings DataTables settings object\n         *\n         *  @dtopt Callbacks\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.serverData\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        \"fnServerData\": null,\n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         *  It is often useful to send extra data to the server when making an Ajax\n         * request - for example custom filtering information, and this callback\n         * function makes it trivial to send extra information to the server. The\n         * passed in parameter is the data set that has been constructed by\n         * DataTables, and you can add to this or modify it as you require.\n         *  @type function\n         *  @param {array} data Data array (array of objects which are name/value\n         *    pairs) that has been constructed by DataTables and will be sent to the\n         *    server. In the case of Ajax sourced data with server-side processing\n         *    this will be an empty array, for server-side processing there will be a\n         *    significant number of parameters!\n         *  @returns {undefined} Ensure that you modify the data array passed in,\n         *    as this is passed by reference.\n         *\n         *  @dtopt Callbacks\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.serverParams\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        \"fnServerParams\": null,\n        /**\n         * Load the table state. With this function you can define from where, and how, the\n         * state of a table is loaded. By default DataTables will load from `localStorage`\n         * but you might wish to use a server-side database or cookies.\n         *  @type function\n         *  @member\n         *  @param {object} settings DataTables settings object\n         *  @param {object} callback Callback that can be executed when done. It\n         *    should be passed the loaded state object.\n         *  @return {object} The DataTables state object to be loaded\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateLoadCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateLoadCallback\": function (settings, callback) {\n         *          $.ajax( {\n         *            \"url\": \"/state_load\",\n         *            \"dataType\": \"json\",\n         *            \"success\": function (json) {\n         *              callback( json );\n         *            }\n         *          } );\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnStateLoadCallback\": function (settings) {\n            try {\n                return JSON.parse(\n                        (settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n                        'DataTables_' + settings.sInstance + '_' + location.pathname\n                        )\n                        );\n            } catch (e) {\n            }\n       },\n        /**\n         * Callback which allows modification of the saved state prior to loading that state.\n         * This callback is called when the table is loading state from the stored data, but\n         * prior to the settings object being modified by the saved state. Note that for\n         * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n         * a plug-in.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @param {object} data The state object that is to be loaded\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateLoadParams\n         *\n         *  @example\n         *    // Remove a saved filter, so filtering is never loaded\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateLoadParams\": function (settings, data) {\n         *          data.oSearch.sSearch = \"\";\n         *        }\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Disallow state loading by returning false\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateLoadParams\": function (settings, data) {\n         *          return false;\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnStateLoadParams\": null,\n        /**\n         * Callback that is called when the state has been loaded from the state saving method\n         * and the DataTables settings object has been modified as a result of the loaded state.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @param {object} data The state object that was loaded\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateLoaded\n         *\n         *  @example\n         *    // Show an alert with the filtering value that was saved\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateLoaded\": function (settings, data) {\n         *          alert( 'Saved filter was: '+data.oSearch.sSearch );\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnStateLoaded\": null,\n        /**\n         * Save the table state. This function allows you to define where and how the state\n         * information for the table is stored By default DataTables will use `localStorage`\n         * but you might wish to use a server-side database or cookies.\n         *  @type function\n         *  @member\n         *  @param {object} settings DataTables settings object\n         *  @param {object} data The state object to be saved\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateSaveCallback\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateSaveCallback\": function (settings, data) {\n         *          // Send an Ajax request to the server with the state object\n         *          $.ajax( {\n         *            \"url\": \"/state_save\",\n         *            \"data\": data,\n         *            \"dataType\": \"json\",\n         *            \"method\": \"POST\"\n         *            \"success\": function () {}\n         *          } );\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnStateSaveCallback\": function (settings, data) {\n            try {\n                (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n                        'DataTables_' + settings.sInstance + '_' + location.pathname,\n                        JSON.stringify(data)\n                        );\n            } catch (e) {\n            }\n       },\n        /**\n         * Callback which allows modification of the state to be saved. Called when the table\n         * has changed state a new state save is required. This method allows modification of\n         * the state saving object prior to actually doing the save, including addition or\n         * other state properties or modification. Note that for plug-in authors, you should\n         * use the `stateSaveParams` event to save parameters for a plug-in.\n         *  @type function\n         *  @param {object} settings DataTables settings object\n         *  @param {object} data The state object to be saved\n         *\n         *  @dtopt Callbacks\n         *  @name DataTable.defaults.stateSaveParams\n         *\n         *  @example\n         *    // Remove a saved filter, so filtering is never saved\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateSave\": true,\n         *        \"stateSaveParams\": function (settings, data) {\n         *          data.oSearch.sSearch = \"\";\n         *        }\n         *      } );\n         *    } );\n         */\n        \"fnStateSaveParams\": null,\n        /**\n         * Duration for which the saved state information is considered valid. After this period\n         * has elapsed the state will be returned to the default.\n         * Value is given in seconds.\n         *  @type int\n         *  @default 7200 <i>(2 hours)</i>\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.stateDuration\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"stateDuration\": 60*60*24; // 1 day\n         *      } );\n         *    } )\n         */\n        \"iStateDuration\": 7200,\n        /**\n         * When enabled DataTables will not make a request to the server for the first\n         * page draw - rather it will use the data already on the page (no sorting etc\n         * will be applied to it), thus saving on an XHR at load time. `deferLoading`\n         * is used to indicate that deferred loading is required, but it is also used\n         * to tell DataTables how many records there are in the full table (allowing\n         * the information element and pagination to be displayed correctly). In the case\n         * where a filtering is applied to the table on initial load, this can be\n         * indicated by giving the parameter as an array, where the first element is\n         * the number of records available after filtering and the second element is the\n         * number of records without filtering (allowing the table information element\n         * to be shown correctly).\n         *  @type int | array\n         *  @default null\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.deferLoading\n         *\n         *  @example\n         *    // 57 records available in the table, no filtering applied\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"serverSide\": true,\n         *        \"ajax\": \"scripts/server_processing.php\",\n         *        \"deferLoading\": 57\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"serverSide\": true,\n         *        \"ajax\": \"scripts/server_processing.php\",\n         *        \"deferLoading\": [ 57, 100 ],\n         *        \"search\": {\n         *          \"search\": \"my_filter\"\n         *        }\n         *      } );\n         *    } );\n         */\n        \"iDeferLoading\": null,\n        /**\n         * Number of rows to display on a single page when using pagination. If\n         * feature enabled (`lengthChange`) then the end user will be able to override\n         * this to a custom setting using a pop-up menu.\n         *  @type int\n         *  @default 10\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.pageLength\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"pageLength\": 50\n         *      } );\n         *    } )\n         */\n        \"iDisplayLength\": 10,\n        /**\n         * Define the starting point for data display when using DataTables with\n         * pagination. Note that this parameter is the number of records, rather than\n         * the page number, so if you have 10 records per page and want to start on\n         * the third page, it should be \"20\".\n         *  @type int\n         *  @default 0\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.displayStart\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"displayStart\": 20\n         *      } );\n         *    } )\n         */\n        \"iDisplayStart\":0,\n        /**\n         * By default DataTables allows keyboard navigation of the table (sorting, paging,\n         * and filtering) by adding a `tabindex` attribute to the required elements. This\n         * allows you to tab through the controls and press the enter key to activate them.\n         * The tabindex is default 0, meaning that the tab follows the flow of the document.\n         * You can overrule this using this parameter if you wish. Use a value of -1 to\n         * disable built-in keyboard navigation.\n         *  @type int\n         *  @default 0\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.tabIndex\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"tabIndex\": 1\n         *      } );\n         *    } );\n         */\n        \"iTabIndex\":0,\n        /**\n         * Classes that DataTables assigns to the various components and features\n         * that it adds to the HTML table. This allows classes to be configured\n         * during initialisation in addition to through the static\n         * {@link DataTable.ext.oStdClasses} object).\n         *  @namespace\n         *  @name DataTable.defaults.classes\n         */\n        \"oClasses\": {},\n        /**\n         * All strings that DataTables uses in the user interface that it creates\n         * are defined in this object, allowing you to modified them individually or\n         * completely replace them all as required.\n         *  @namespace\n         *  @name DataTable.defaults.language\n         */\n        \"oLanguage\": {\n            /**\n             * Strings that are used for WAI-ARIA labels and controls only (these are not\n             * actually visible on the page, but will be read by screenreaders, and thus\n             * must be internationalised as well).\n             *  @namespace\n             *  @name DataTable.defaults.language.aria\n             */\n            \"oAria\": {\n                /**\n                 * ARIA label that is added to the table headers when the column may be\n                 * sorted ascending by activing the column (click or return when focused).\n                 * Note that the column header is prefixed to this string.\n                 *  @type string\n                 *  @default : activate to sort column ascending\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.aria.sortAscending\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n                 *      $('#example').dataTable( {\n                 *        \"language\": {\n                 *          \"aria\": {\n                 *            \"sortAscending\": \" - click/return to sort ascending\"\n                 *          }\n                 *        }\n                 *      } );\n                 *    } );\n                 */\n                \"sSortAscending\": \": activate to sort column ascending\",\n                /**\n                 * ARIA label that is added to the table headers when the column may be\n                 * sorted descending by activing the column (click or return when focused).\n                 * Note that the column header is prefixed to this string.\n                 *  @type string\n                 *  @default : activate to sort column ascending\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.aria.sortDescending\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n                 *      $('#example').dataTable( {\n                 *        \"language\": {\n                 *          \"aria\": {\n                 *            \"sortDescending\": \" - click/return to sort descending\"\n                 *          }\n                 *        }\n                 *      } );\n                 *    } );\n                 */\n                \"sSortDescending\": \": activate to sort column descending\"\n            },\n            /**\n             * Pagination string used by DataTables for the built-in pagination\n             * control types.\n             *  @namespace\n             *  @name DataTable.defaults.language.paginate\n             */\n            \"oPaginate\": {\n                /**\n                 * Text to use when using the 'full_numbers' type of pagination for the\n                 * button to take the user to the first page.\n                 *  @type string\n                 *  @default First\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.paginate.first\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n                 *      $('#example').dataTable( {\n                 *        \"language\": {\n                 *          \"paginate\": {\n                 *            \"first\": \"First page\"\n                 *          }\n                 *        }\n                 *      } );\n                 *    } );\n                 */\n                \"sFirst\": \"First\",\n                /**\n                 * Text to use when using the 'full_numbers' type of pagination for the\n                 * button to take the user to the last page.\n                 *  @type string\n                 *  @default Last\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.paginate.last\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n                 *      $('#example').dataTable( {\n                 *        \"language\": {\n                 *          \"paginate\": {\n                 *            \"last\": \"Last page\"\n                 *          }\n                 *        }\n                 *      } );\n                 *    } );\n                 */\n                \"sLast\": \"Last\",\n                /**\n                 * Text to use for the 'next' pagination button (to take the user to the\n                 * next page).\n                 *  @type string\n                 *  @default Next\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.paginate.next\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n                 *      $('#example').dataTable( {\n                 *        \"language\": {\n                 *          \"paginate\": {\n                 *            \"next\": \"Next page\"\n                 *          }\n                 *        }\n                 *      } );\n                 *    } );\n                 */\n                \"sNext\": \"Next\",\n                /**\n                 * Text to use for the 'previous' pagination button (to take the user to\n                 * the previous page).\n                 *  @type string\n                 *  @default Previous\n                 *\n                 *  @dtopt Language\n                 *  @name DataTable.defaults.language.paginate.previous\n                 *\n                 *  @example\n                 *    $(document).ready( function() {\n                 *      $('#example').dataTable( {\n                 *        \"language\": {\n                 *          \"paginate\": {\n                 *            \"previous\": \"Previous page\"\n                 *          }\n                 *        }\n                 *      } );\n                 *    } );\n                 */\n                \"sPrevious\": \"Previous\"\n            },\n            /**\n             * This string is shown in preference to `zeroRecords` when the table is\n             * empty of data (regardless of filtering). Note that this is an optional\n             * parameter - if it is not given, the value of `zeroRecords` will be used\n             * instead (either the default or given value).\n             *  @type string\n             *  @default No data available in table\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.emptyTable\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"emptyTable\": \"No data available in table\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sEmptyTable\": \"No data available in table\",\n            /**\n             * This string gives information to the end user about the information\n             * that is current on display on the page. The following tokens can be\n             * used in the string and will be dynamically replaced as the table\n             * display updates. This tokens can be placed anywhere in the string, or\n             * removed as needed by the language requires:\n             *\n             * * `\\_START\\_` - Display index of the first record on the current page\n             * * `\\_END\\_` - Display index of the last record on the current page\n             * * `\\_TOTAL\\_` - Number of records in the table after filtering\n             * * `\\_MAX\\_` - Number of records in the table without filtering\n             * * `\\_PAGE\\_` - Current page number\n             * * `\\_PAGES\\_` - Total number of pages of data in the table\n             *\n             *  @type string\n             *  @default Showing _START_ to _END_ of _TOTAL_ entries\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.info\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"info\": \"Showing page _PAGE_ of _PAGES_\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n            /**\n             * Display information string for when the table is empty. Typically the\n             * format of this string should match `info`.\n             *  @type string\n             *  @default Showing 0 to 0 of 0 entries\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.infoEmpty\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"infoEmpty\": \"No entries to show\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n            /**\n             * When a user filters the information in a table, this string is appended\n             * to the information (`info`) to give an idea of how strong the filtering\n             * is. The variable _MAX_ is dynamically updated.\n             *  @type string\n             *  @default (filtered from _MAX_ total entries)\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.infoFiltered\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"infoFiltered\": \" - filtering from _MAX_ records\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n            /**\n             * If can be useful to append extra information to the info string at times,\n             * and this variable does exactly that. This information will be appended to\n             * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n             * being used) at all times.\n             *  @type string\n             *  @default <i>Empty string</i>\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.infoPostFix\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"infoPostFix\": \"All records shown are derived from real information.\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sInfoPostFix\": \"\",\n            /**\n             * This decimal place operator is a little different from the other\n             * language options since DataTables doesn't output floating point\n             * numbers, so it won't ever use this for display of a number. Rather,\n             * what this parameter does is modify the sort methods of the table so\n             * that numbers which are in a format which has a character other than\n             * a period (`.`) as a decimal place will be sorted numerically.\n             *\n             * Note that numbers with different decimal places cannot be shown in\n             * the same table and still be sortable, the table must be consistent.\n             * However, multiple different tables on the page can use different\n             * decimal place characters.\n             *  @type string\n             *  @default \n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.decimal\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"decimal\": \",\"\n             *          \"thousands\": \".\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sDecimal\": \"\",\n            /**\n             * DataTables has a build in number formatter (`formatNumber`) which is\n             * used to format large numbers that are used in the table information.\n             * By default a comma is used, but this can be trivially changed to any\n             * character you wish with this parameter.\n             *  @type string\n             *  @default ,\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.thousands\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"thousands\": \"'\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sThousands\": \",\",\n            /**\n             * Detail the action that will be taken when the drop down menu for the\n             * pagination length option is changed. The '_MENU_' variable is replaced\n             * with a default select list of 10, 25, 50 and 100, and can be replaced\n             * with a custom select box if required.\n             *  @type string\n             *  @default Show _MENU_ entries\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.lengthMenu\n             *\n             *  @example\n             *    // Language change only\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"lengthMenu\": \"Display _MENU_ records\"\n             *        }\n             *      } );\n             *    } );\n             *\n             *  @example\n             *    // Language and options change\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"lengthMenu\": 'Display <select>'+\n             *            '<option value=\"10\">10</option>'+\n             *            '<option value=\"20\">20</option>'+\n             *            '<option value=\"30\">30</option>'+\n             *            '<option value=\"40\">40</option>'+\n             *            '<option value=\"50\">50</option>'+\n             *            '<option value=\"-1\">All</option>'+\n             *            '</select> records'\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sLengthMenu\": \"Show _MENU_ entries\",\n            /**\n             * When using Ajax sourced data and during the first draw when DataTables is\n             * gathering the data, this message is shown in an empty row in the table to\n             * indicate to the end user the the data is being loaded. Note that this\n             * parameter is not used when loading data by server-side processing, just\n             * Ajax sourced data with client-side processing.\n             *  @type string\n             *  @default Loading...\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.loadingRecords\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"loadingRecords\": \"Please wait - loading...\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sLoadingRecords\": \"Loading...\",\n            /**\n             * Text which is displayed when the table is processing a user action\n             * (usually a sort command or similar).\n             *  @type string\n             *  @default Processing...\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.processing\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"processing\": \"DataTables is currently busy\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sProcessing\": \"Processing...\",\n            /**\n             * Details the actions that will be taken when the user types into the\n             * filtering input text box. The variable \"_INPUT_\", if used in the string,\n             * is replaced with the HTML text box for the filtering input allowing\n             * control over where it appears in the string. If \"_INPUT_\" is not given\n             * then the input box is appended to the string automatically.\n             *  @type string\n             *  @default Search:\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.search\n             *\n             *  @example\n             *    // Input text box will be appended at the end automatically\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"search\": \"Filter records:\"\n             *        }\n             *      } );\n             *    } );\n             *\n             *  @example\n             *    // Specify where the filter should appear\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"search\": \"Apply filter _INPUT_ to table\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sSearch\": \"Search:\",\n            /**\n             * Assign a `placeholder` attribute to the search `input` element\n             *  @type string\n             *  @default \n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.searchPlaceholder\n             */\n            \"sSearchPlaceholder\": \"\",\n            /**\n             * All of the language information can be stored in a file on the\n             * server-side, which DataTables will look up if this parameter is passed.\n             * It must store the URL of the language file, which is in a JSON format,\n             * and the object has the same properties as the oLanguage object in the\n             * initialiser object (i.e. the above parameters). Please refer to one of\n             * the example language files to see how this works in action.\n             *  @type string\n             *  @default <i>Empty string - i.e. disabled</i>\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.url\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"url\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sUrl\": \"\",\n            /**\n             * Text shown inside the table records when the is no information to be\n             * displayed after filtering. `emptyTable` is shown when there is simply no\n             * information in the table at all (regardless of filtering).\n             *  @type string\n             *  @default No matching records found\n             *\n             *  @dtopt Language\n             *  @name DataTable.defaults.language.zeroRecords\n             *\n             *  @example\n             *    $(document).ready( function() {\n             *      $('#example').dataTable( {\n             *        \"language\": {\n             *          \"zeroRecords\": \"No records to display\"\n             *        }\n             *      } );\n             *    } );\n             */\n            \"sZeroRecords\": \"No matching records found\"\n       },\n        /**\n         * This parameter allows you to have define the global filtering state at\n         * initialisation time. As an object the `search` parameter must be\n         * defined, but all other parameters are optional. When `regex` is true,\n         * the search string will be treated as a regular expression, when false\n         * (default) it will be treated as a straight string. When `smart`\n         * DataTables will use it's smart filtering methods (to word match at\n         * any point in the data), when false this will not be done.\n         *  @namespace\n         *  @extends DataTable.models.oSearch\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.search\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"search\": {\"search\": \"Initial search\"}\n         *      } );\n         *    } )\n         */\n        \"oSearch\": $.extend({}, DataTable.models.oSearch),\n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         * By default DataTables will look for the property `data` (or `aaData` for\n         * compatibility with DataTables 1.9-) when obtaining data from an Ajax\n         * source or for server-side processing - this parameter allows that\n         * property to be changed. You can use Javascript dotted object notation to\n         * get a data source for multiple levels of nesting.\n         *  @type string\n         *  @default data\n         *\n         *  @dtopt Options\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.ajaxDataProp\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        \"sAjaxDataProp\": \"data\",\n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         * You can instruct DataTables to load data from an external\n         * source using this parameter (use aData if you want to pass data in you\n         * already have). Simply provide a url a JSON object can be obtained from.\n         *  @type string\n         *  @default null\n         *\n         *  @dtopt Options\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.ajaxSource\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        \"sAjaxSource\": null,\n        /**\n         * This initialisation variable allows you to specify exactly where in the\n         * DOM you want DataTables to inject the various controls it adds to the page\n         * (for example you might want the pagination controls at the top of the\n         * table). DIV elements (with or without a custom class) can also be added to\n         * aid styling. The follow syntax is used:\n         *   <ul>\n         *     <li>The following options are allowed:\n         *       <ul>\n         *         <li>'l' - Length changing</li>\n         *         <li>'f' - Filtering input</li>\n         *         <li>'t' - The table!</li>\n         *         <li>'i' - Information</li>\n         *         <li>'p' - Pagination</li>\n         *         <li>'r' - pRocessing</li>\n         *       </ul>\n         *     </li>\n         *     <li>The following constants are allowed:\n         *       <ul>\n         *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n         *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n         *       </ul>\n         *     </li>\n         *     <li>The following syntax is expected:\n         *       <ul>\n         *         <li>'&lt;' and '&gt;' - div elements</li>\n         *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n         *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n         *       </ul>\n         *     </li>\n         *     <li>Examples:\n         *       <ul>\n         *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n         *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n         *       </ul>\n         *     </li>\n         *   </ul>\n         *  @type string\n         *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>\n         *    <\"H\"lfr>t<\"F\"ip> <i>(when `jQueryUI` is true)</i>\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.dom\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"dom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n         *      } );\n         *    } );\n         */\n        \"sDom\": \"lfrtip\",\n        /**\n         * Search delay option. This will throttle full table searches that use the\n         * DataTables provided search input element (it does not effect calls to\n         * `dt-api search()`, providing a delay before the search is made.\n         *  @type integer\n         *  @default 0\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.searchDelay\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"searchDelay\": 200\n         *      } );\n         *    } )\n         */\n        \"searchDelay\": null,\n        /**\n         * DataTables features four different built-in options for the buttons to\n         * display for pagination control:\n         *\n         * * `simple` - 'Previous' and 'Next' buttons only\n         * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n         * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n         * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus\n         *   page numbers\n         *  \n         * Further methods can be added using {@link DataTable.ext.oPagination}.\n         *  @type string\n         *  @default simple_numbers\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.pagingType\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"pagingType\": \"full_numbers\"\n         *      } );\n         *    } )\n         */\n        \"sPaginationType\": \"simple_numbers\",\n        /**\n         * Enable horizontal scrolling. When a table is too wide to fit into a\n         * certain layout, or you have a large number of columns in the table, you\n         * can enable x-scrolling to show the table in a viewport, which can be\n         * scrolled. This property can be `true` which will allow the table to\n         * scroll horizontally when needed, or any CSS unit, or a number (in which\n         * case it will be treated as a pixel measurement). Setting as simply `true`\n         * is recommended.\n         *  @type boolean|string\n         *  @default <i>blank string - i.e. disabled</i>\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.scrollX\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"scrollX\": true,\n         *        \"scrollCollapse\": true\n         *      } );\n         *    } );\n         */\n        \"sScrollX\": \"\",\n        /**\n         * This property can be used to force a DataTable to use more width than it\n         * might otherwise do when x-scrolling is enabled. For example if you have a\n         * table which requires to be well spaced, this parameter is useful for\n         * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n         * any CSS unit, or a number (in which case it will be treated as a pixel\n         * measurement).\n         *  @type string\n         *  @default <i>blank string - i.e. disabled</i>\n         *\n         *  @dtopt Options\n         *  @name DataTable.defaults.scrollXInner\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"scrollX\": \"100%\",\n         *        \"scrollXInner\": \"110%\"\n         *      } );\n         *    } );\n         */\n        \"sScrollXInner\": \"\",\n        /**\n         * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n         * to the given height, and enable scrolling for any data which overflows the\n         * current viewport. This can be used as an alternative to paging to display\n         * a lot of data in a small area (although paging and scrolling can both be\n         * enabled at the same time). This property can be any CSS unit, or a number\n         * (in which case it will be treated as a pixel measurement).\n         *  @type string\n         *  @default <i>blank string - i.e. disabled</i>\n         *\n         *  @dtopt Features\n         *  @name DataTable.defaults.scrollY\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"scrollY\": \"200px\",\n         *        \"paginate\": false\n         *      } );\n         *    } );\n         */\n        \"sScrollY\": \"\",\n        /**\n         * __Deprecated__ The functionality provided by this parameter has now been\n         * superseded by that provided through `ajax`, which should be used instead.\n         *\n         * Set the HTTP method that is used to make the Ajax call for server-side\n         * processing or Ajax sourced data.\n         *  @type string\n         *  @default GET\n         *\n         *  @dtopt Options\n         *  @dtopt Server-side\n         *  @name DataTable.defaults.serverMethod\n         *\n         *  @deprecated 1.10. Please use `ajax` for this functionality now.\n         */\n        \"sServerMethod\": \"GET\",\n        /**\n         * DataTables makes use of renderers when displaying HTML elements for\n         * a table. These renderers can be added or modified by plug-ins to\n         * generate suitable mark-up for a site. For example the Bootstrap\n         * integration plug-in for DataTables uses a paging button renderer to\n         * display pagination buttons in the mark-up required by Bootstrap.\n         *\n         * For further information about the renderers available see\n         * DataTable.ext.renderer\n         *  @type string|object\n         *  @default null\n         *\n         *  @name DataTable.defaults.renderer\n         *\n         */\n        \"renderer\": null,\n        /**\n         * Set the data property name that DataTables should use to get a row's id\n         * to set as the `id` property in the node.\n         *  @type string\n         *  @default DT_RowId\n         *\n         *  @name DataTable.defaults.rowId\n         */\n        \"rowId\": \"DT_RowId\"\n    };\n\n    _fnHungarianMap(DataTable.defaults);\n\n    /*\n     * Developer note - See note in model.defaults.js about the use of Hungarian\n     * notation and camel case.\n     */\n\n    /**\n     * Column options that can be given to DataTables at initialisation time.\n     *  @namespace\n     */\n    DataTable.defaults.column = {\n        /**\n         * Define which column(s) an order will occur on for this column. This\n         * allows a column's ordering to take multiple columns into account when\n         * doing a sort or use the data from a different column. For example first\n         * name / last name columns make sense to do a multi-column sort over the\n         * two columns.\n         *  @type array|int\n         *  @default null <i>Takes the value of the column index automatically</i>\n         *\n         *  @name DataTable.defaults.column.orderData\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"orderData\": [ 0, 1 ], \"targets\": [ 0 ] },\n         *          { \"orderData\": [ 1, 0 ], \"targets\": [ 1 ] },\n         *          { \"orderData\": 2, \"targets\": [ 2 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"orderData\": [ 0, 1 ] },\n         *          { \"orderData\": [ 1, 0 ] },\n         *          { \"orderData\": 2 },\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"aDataSort\": null,\n        \"iDataSort\": -1,\n        /**\n         * You can control the default ordering direction, and even alter the\n         * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n         * using this parameter.\n         *  @type array\n         *  @default [ 'asc', 'desc' ]\n         *\n         *  @name DataTable.defaults.column.orderSequence\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"orderSequence\": [ \"asc\" ], \"targets\": [ 1 ] },\n         *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ], \"targets\": [ 2 ] },\n         *          { \"orderSequence\": [ \"desc\" ], \"targets\": [ 3 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          null,\n         *          { \"orderSequence\": [ \"asc\" ] },\n         *          { \"orderSequence\": [ \"desc\", \"asc\", \"asc\" ] },\n         *          { \"orderSequence\": [ \"desc\" ] },\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"asSorting\": ['asc', 'desc'],\n        /**\n         * Enable or disable filtering on the data in this column.\n         *  @type boolean\n         *  @default true\n         *\n         *  @name DataTable.defaults.column.searchable\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"searchable\": false, \"targets\": [ 0 ] }\n         *        ] } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"searchable\": false },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ] } );\n         *    } );\n         */\n        \"bSearchable\": true,\n        /**\n         * Enable or disable ordering on this column.\n         *  @type boolean\n         *  @default true\n         *\n         *  @name DataTable.defaults.column.orderable\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"orderable\": false, \"targets\": [ 0 ] }\n         *        ] } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"orderable\": false },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ] } );\n         *    } );\n         */\n        \"bSortable\": true,\n        /**\n         * Enable or disable the display of this column.\n         *  @type boolean\n         *  @default true\n         *\n         *  @name DataTable.defaults.column.visible\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"visible\": false, \"targets\": [ 0 ] }\n         *        ] } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"visible\": false },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ] } );\n         *    } );\n         */\n        \"bVisible\": true,\n        /**\n         * Developer definable function that is called whenever a cell is created (Ajax source,\n         * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n         * allowing you to modify the DOM element (add background colour for example) when the\n         * element is available.\n         *  @type function\n         *  @param {element} td The TD node that has been created\n         *  @param {*} cellData The Data for the cell\n         *  @param {array|object} rowData The data for the whole row\n         *  @param {int} row The row index for the aoData data store\n         *  @param {int} col The column index for aoColumns\n         *\n         *  @name DataTable.defaults.column.createdCell\n         *  @dtopt Columns\n         *\n         *  @example\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [3],\n         *          \"createdCell\": function (td, cellData, rowData, row, col) {\n         *            if ( cellData == \"1.7\" ) {\n         *              $(td).css('color', 'blue')\n         *            }\n         *          }\n         *        } ]\n         *      });\n         *    } );\n         */\n        \"fnCreatedCell\": null,\n        /**\n         * This parameter has been replaced by `data` in DataTables to ensure naming\n         * consistency. `dataProp` can still be used, as there is backwards\n         * compatibility in DataTables for this option, but it is strongly\n         * recommended that you use `data` in preference to `dataProp`.\n         *  @name DataTable.defaults.column.dataProp\n         */\n\n        /**\n         * This property can be used to read data from any data source property,\n         * including deeply nested objects / properties. `data` can be given in a\n         * number of different ways which effect its behaviour:\n         *\n         * * `integer` - treated as an array index for the data source. This is the\n         *   default that DataTables uses (incrementally increased for each column).\n         * * `string` - read an object property from the data source. There are\n         *   three 'special' options that can be used in the string to alter how\n         *   DataTables reads the data from the source object:\n         *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n         *      Javascript to read from nested objects, so to can the options\n         *      specified in `data`. For example: `browser.version` or\n         *      `browser.name`. If your object parameter name contains a period, use\n         *      `\\\\` to escape it - i.e. `first\\\\.name`.\n         *    * `[]` - Array notation. DataTables can automatically combine data\n         *      from and array source, joining the data with the characters provided\n         *      between the two brackets. For example: `name[, ]` would provide a\n         *      comma-space separated list from the source array. If no characters\n         *      are provided between the brackets, the original array source is\n         *      returned.\n         *    * `()` - Function notation. Adding `()` to the end of a parameter will\n         *      execute a function of the name given. For example: `browser()` for a\n         *      simple function on the data source, `browser.version()` for a\n         *      function in a nested property or even `browser().version` to get an\n         *      object property if the function called returns an object. Note that\n         *      function notation is recommended for use in `render` rather than\n         *      `data` as it is much simpler to use as a renderer.\n         * * `null` - use the original data source for the row rather than plucking\n         *   data directly from it. This action has effects on two other\n         *   initialisation options:\n         *    * `defaultContent` - When null is given as the `data` option and\n         *      `defaultContent` is specified for the column, the value defined by\n         *      `defaultContent` will be used for the cell.\n         *    * `render` - When null is used for the `data` option and the `render`\n         *      option is specified for the column, the whole data source for the\n         *      row is used for the renderer.\n         * * `function` - the function given will be executed whenever DataTables\n         *   needs to set or get the data for a cell in the column. The function\n         *   takes three parameters:\n         *    * Parameters:\n         *      * `{array|object}` The data source for the row\n         *      * `{string}` The type call data requested - this will be 'set' when\n         *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n         *        when gathering data. Note that when `undefined` is given for the\n         *        type DataTables expects to get the raw data for the object back<\n         *      * `{*}` Data to set when the second parameter is 'set'.\n         *    * Return:\n         *      * The return value from the function is not required when 'set' is\n         *        the type of call, but otherwise the return is what will be used\n         *        for the data requested.\n         *\n         * Note that `data` is a getter and setter option. If you just require\n         * formatting of data for output, you will likely want to use `render` which\n         * is simply a getter and thus simpler to use.\n         *\n         * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n         * name change reflects the flexibility of this property and is consistent\n         * with the naming of mRender. If 'mDataProp' is given, then it will still\n         * be used by DataTables, as it automatically maps the old name to the new\n         * if required.\n         *\n         *  @type string|int|function|null\n         *  @default null <i>Use automatically calculated column index</i>\n         *\n         *  @name DataTable.defaults.column.data\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Read table data from objects\n         *    // JSON structure for each row:\n         *    //   {\n         *    //      \"engine\": {value},\n         *    //      \"browser\": {value},\n         *    //      \"platform\": {value},\n         *    //      \"version\": {value},\n         *    //      \"grade\": {value}\n         *    //   }\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"ajaxSource\": \"sources/objects.txt\",\n         *        \"columns\": [\n         *          { \"data\": \"engine\" },\n         *          { \"data\": \"browser\" },\n         *          { \"data\": \"platform\" },\n         *          { \"data\": \"version\" },\n         *          { \"data\": \"grade\" }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Read information from deeply nested objects\n         *    // JSON structure for each row:\n         *    //   {\n         *    //      \"engine\": {value},\n         *    //      \"browser\": {value},\n         *    //      \"platform\": {\n         *    //         \"inner\": {value}\n         *    //      },\n         *    //      \"details\": [\n         *    //         {value}, {value}\n         *    //      ]\n         *    //   }\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"ajaxSource\": \"sources/deep.txt\",\n         *        \"columns\": [\n         *          { \"data\": \"engine\" },\n         *          { \"data\": \"browser\" },\n         *          { \"data\": \"platform.inner\" },\n         *          { \"data\": \"platform.details.0\" },\n         *          { \"data\": \"platform.details.1\" }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `data` as a function to provide different information for\n         *    // sorting, filtering and display. In this case, currency (price)\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": function ( source, type, val ) {\n         *            if (type === 'set') {\n         *              source.price = val;\n         *              // Store the computed dislay and filter values for efficiency\n         *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n         *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n         *              return;\n         *            }\n         *            else if (type === 'display') {\n         *              return source.price_display;\n         *            }\n         *            else if (type === 'filter') {\n         *              return source.price_filter;\n         *            }\n         *            // 'sort', 'type' and undefined all just use the integer\n         *            return source.price;\n         *          }\n         *        } ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using default content\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": null,\n         *          \"defaultContent\": \"Click to edit\"\n         *        } ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using array notation - outputting a list from an array\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": \"name[, ]\"\n         *        } ]\n         *      } );\n         *    } );\n         *\n         */\n        \"mData\": null,\n        /**\n         * This property is the rendering partner to `data` and it is suggested that\n         * when you want to manipulate data for display (including filtering,\n         * sorting etc) without altering the underlying data for the table, use this\n         * property. `render` can be considered to be the the read only companion to\n         * `data` which is read / write (then as such more complex). Like `data`\n         * this option can be given in a number of different ways to effect its\n         * behaviour:\n         *\n         * * `integer` - treated as an array index for the data source. This is the\n         *   default that DataTables uses (incrementally increased for each column).\n         * * `string` - read an object property from the data source. There are\n         *   three 'special' options that can be used in the string to alter how\n         *   DataTables reads the data from the source object:\n         *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n         *      Javascript to read from nested objects, so to can the options\n         *      specified in `data`. For example: `browser.version` or\n         *      `browser.name`. If your object parameter name contains a period, use\n         *      `\\\\` to escape it - i.e. `first\\\\.name`.\n         *    * `[]` - Array notation. DataTables can automatically combine data\n         *      from and array source, joining the data with the characters provided\n         *      between the two brackets. For example: `name[, ]` would provide a\n         *      comma-space separated list from the source array. If no characters\n         *      are provided between the brackets, the original array source is\n         *      returned.\n         *    * `()` - Function notation. Adding `()` to the end of a parameter will\n         *      execute a function of the name given. For example: `browser()` for a\n         *      simple function on the data source, `browser.version()` for a\n         *      function in a nested property or even `browser().version` to get an\n         *      object property if the function called returns an object.\n         * * `object` - use different data for the different data types requested by\n         *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n         *   of the object is the data type the property refers to and the value can\n         *   defined using an integer, string or function using the same rules as\n         *   `render` normally does. Note that an `_` option _must_ be specified.\n         *   This is the default value to use if you haven't specified a value for\n         *   the data type requested by DataTables.\n         * * `function` - the function given will be executed whenever DataTables\n         *   needs to set or get the data for a cell in the column. The function\n         *   takes three parameters:\n         *    * Parameters:\n         *      * {array|object} The data source for the row (based on `data`)\n         *      * {string} The type call data requested - this will be 'filter',\n         *        'display', 'type' or 'sort'.\n         *      * {array|object} The full data source for the row (not based on\n         *        `data`)\n         *    * Return:\n         *      * The return value from the function is what will be used for the\n         *        data requested.\n         *\n         *  @type string|int|function|object|null\n         *  @default null Use the data source value.\n         *\n         *  @name DataTable.defaults.column.render\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Create a comma separated list from an array of objects\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"ajaxSource\": \"sources/deep.txt\",\n         *        \"columns\": [\n         *          { \"data\": \"engine\" },\n         *          { \"data\": \"browser\" },\n         *          {\n         *            \"data\": \"platform\",\n         *            \"render\": \"[, ].name\"\n         *          }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Execute a function to obtain data\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": null, // Use the full data source object for the renderer's source\n         *          \"render\": \"browserName()\"\n         *        } ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // As an object, extracting different data for the different types\n         *    // This would be used with a data source such as:\n         *    //   { \"phone\": 5552368, \"phone_filter\": \"5552368 555-2368\", \"phone_display\": \"555-2368\" }\n         *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`\n         *    // (which has both forms) is used for filtering for if a user inputs either format, while\n         *    // the formatted phone number is the one that is shown in the table.\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": null, // Use the full data source object for the renderer's source\n         *          \"render\": {\n         *            \"_\": \"phone\",\n         *            \"filter\": \"phone_filter\",\n         *            \"display\": \"phone_display\"\n         *          }\n         *        } ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Use as a function to create a link from the data source\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"data\": \"download_link\",\n         *          \"render\": function ( data, type, full ) {\n         *            return '<a href=\"'+data+'\">Download</a>';\n         *          }\n         *        } ]\n         *      } );\n         *    } );\n         */\n        \"mRender\": null,\n        /**\n         * Change the cell type created for the column - either TD cells or TH cells. This\n         * can be useful as TH cells have semantic meaning in the table body, allowing them\n         * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n         *  @type string\n         *  @default td\n         *\n         *  @name DataTable.defaults.column.cellType\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Make the first column use TH cells\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [ {\n         *          \"targets\": [ 0 ],\n         *          \"cellType\": \"th\"\n         *        } ]\n         *      } );\n         *    } );\n         */\n        \"sCellType\": \"td\",\n        /**\n         * Class to give to each cell in this column.\n         *  @type string\n         *  @default <i>Empty string</i>\n         *\n         *  @name DataTable.defaults.column.class\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"class\": \"my_class\", \"targets\": [ 0 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"class\": \"my_class\" },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sClass\": \"\",\n        /**\n         * When DataTables calculates the column widths to assign to each column,\n         * it finds the longest string in each column and then constructs a\n         * temporary table and reads the widths from that. The problem with this\n         * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n         * string - thus the calculation can go wrong (doing it properly and putting\n         * it into an DOM object and measuring that is horribly(!) slow). Thus as\n         * a \"work around\" we provide this option. It will append its value to the\n         * text that is found to be the longest string for the column - i.e. padding.\n         * Generally you shouldn't need this!\n         *  @type string\n         *  @default <i>Empty string<i>\n         *\n         *  @name DataTable.defaults.column.contentPadding\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          null,\n         *          null,\n         *          null,\n         *          {\n         *            \"contentPadding\": \"mmm\"\n         *          }\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sContentPadding\": \"\",\n        /**\n         * Allows a default value to be given for a column's data, and will be used\n         * whenever a null data source is encountered (this can be because `data`\n         * is set to null, or because the data source itself is null).\n         *  @type string\n         *  @default null\n         *\n         *  @name DataTable.defaults.column.defaultContent\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          {\n         *            \"data\": null,\n         *            \"defaultContent\": \"Edit\",\n         *            \"targets\": [ -1 ]\n         *          }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          null,\n         *          null,\n         *          null,\n         *          {\n         *            \"data\": null,\n         *            \"defaultContent\": \"Edit\"\n         *          }\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sDefaultContent\": null,\n        /**\n         * This parameter is only used in DataTables' server-side processing. It can\n         * be exceptionally useful to know what columns are being displayed on the\n         * client side, and to map these to database fields. When defined, the names\n         * also allow DataTables to reorder information from the server if it comes\n         * back in an unexpected order (i.e. if you switch your columns around on the\n         * client-side, your server-side code does not also need updating).\n         *  @type string\n         *  @default <i>Empty string</i>\n         *\n         *  @name DataTable.defaults.column.name\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"name\": \"engine\", \"targets\": [ 0 ] },\n         *          { \"name\": \"browser\", \"targets\": [ 1 ] },\n         *          { \"name\": \"platform\", \"targets\": [ 2 ] },\n         *          { \"name\": \"version\", \"targets\": [ 3 ] },\n         *          { \"name\": \"grade\", \"targets\": [ 4 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"name\": \"engine\" },\n         *          { \"name\": \"browser\" },\n         *          { \"name\": \"platform\" },\n         *          { \"name\": \"version\" },\n         *          { \"name\": \"grade\" }\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sName\": \"\",\n        /**\n         * Defines a data source type for the ordering which can be used to read\n         * real-time information from the table (updating the internally cached\n         * version) prior to ordering. This allows ordering to occur on user\n         * editable elements such as form inputs.\n         *  @type string\n         *  @default std\n         *\n         *  @name DataTable.defaults.column.orderDataType\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"orderDataType\": \"dom-text\", \"targets\": [ 2, 3 ] },\n         *          { \"type\": \"numeric\", \"targets\": [ 3 ] },\n         *          { \"orderDataType\": \"dom-select\", \"targets\": [ 4 ] },\n         *          { \"orderDataType\": \"dom-checkbox\", \"targets\": [ 5 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          null,\n         *          null,\n         *          { \"orderDataType\": \"dom-text\" },\n         *          { \"orderDataType\": \"dom-text\", \"type\": \"numeric\" },\n         *          { \"orderDataType\": \"dom-select\" },\n         *          { \"orderDataType\": \"dom-checkbox\" }\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sSortDataType\": \"std\",\n        /**\n         * The title of this column.\n         *  @type string\n         *  @default null <i>Derived from the 'TH' value for this column in the\n         *    original HTML table.</i>\n         *\n         *  @name DataTable.defaults.column.title\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"title\": \"My column title\", \"targets\": [ 0 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"title\": \"My column title\" },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sTitle\": null,\n        /**\n         * The type allows you to specify how the data for this column will be\n         * ordered. Four types (string, numeric, date and html (which will strip\n         * HTML tags before ordering)) are currently available. Note that only date\n         * formats understood by Javascript's Date() object will be accepted as type\n         * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n         * 'numeric', 'date' or 'html' (by default). Further types can be adding\n         * through plug-ins.\n         *  @type string\n         *  @default null <i>Auto-detected from raw data</i>\n         *\n         *  @name DataTable.defaults.column.type\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"type\": \"html\", \"targets\": [ 0 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"type\": \"html\" },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sType\": null,\n        /**\n         * Defining the width of the column, this parameter may take any CSS value\n         * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n         * been given a specific width through this interface ensuring that the table\n         * remains readable.\n         *  @type string\n         *  @default null <i>Automatic</i>\n         *\n         *  @name DataTable.defaults.column.width\n         *  @dtopt Columns\n         *\n         *  @example\n         *    // Using `columnDefs`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columnDefs\": [\n         *          { \"width\": \"20%\", \"targets\": [ 0 ] }\n         *        ]\n         *      } );\n         *    } );\n         *\n         *  @example\n         *    // Using `columns`\n         *    $(document).ready( function() {\n         *      $('#example').dataTable( {\n         *        \"columns\": [\n         *          { \"width\": \"20%\" },\n         *          null,\n         *          null,\n         *          null,\n         *          null\n         *        ]\n         *      } );\n         *    } );\n         */\n        \"sWidth\": null\n    };\n\n    _fnHungarianMap(DataTable.defaults.column);\n\n    /**\n     * DataTables settings object - this holds all the information needed for a\n     * given table, including configuration, data and current application of the\n     * table options. DataTables does not have a single instance for each DataTable\n     * with the settings attached to that instance, but rather instances of the\n     * DataTable \"class\" are created on-the-fly as needed (typically by a\n     * $().dataTable() call) and the settings object is then applied to that\n     * instance.\n     *\n     * Note that this object is related to {@link DataTable.defaults} but this\n     * one is the internal data store for DataTables's cache of columns. It should\n     * NOT be manipulated outside of DataTables. Any configuration should be done\n     * through the initialisation options.\n     *  @namespace\n     *  @todo Really should attach the settings object to individual instances so we\n     *    don't need to create new instances on each $().dataTable() call (if the\n     *    table already exists). It would also save passing oSettings around and\n     *    into every single function. However, this is a very significant\n     *    architecture change for DataTables and will almost certainly break\n     *    backwards compatibility with older installations. This is something that\n     *    will be done in 2.0.\n     */\n    DataTable.models.oSettings = {\n        /**\n         * Primary features of DataTables and their enablement state.\n         *  @namespace\n         */\n        \"oFeatures\": {\n            /**\n             * Flag to say if DataTables should automatically try to calculate the\n             * optimum table and columns widths (true) or not (false).\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bAutoWidth\": null,\n            /**\n             * Delay the creation of TR and TD elements until they are actually\n             * needed by a driven page draw. This can give a significant speed\n             * increase for Ajax source and Javascript source data, but makes no\n             * difference at all fro DOM and server-side processing tables.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bDeferRender\": null,\n            /**\n             * Enable filtering on the table or not. Note that if this is disabled\n             * then there is no filtering at all on the table, including fnFilter.\n             * To just remove the filtering input use sDom and remove the 'f' option.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bFilter\": null,\n            /**\n             * Table information element (the 'Showing x of y records' div) enable\n             * flag.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bInfo\": null,\n            /**\n             * Present a user control allowing the end user to change the page size\n             * when pagination is enabled.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bLengthChange\": null,\n            /**\n             * Pagination enabled or not. Note that if this is disabled then length\n             * changing must also be disabled.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bPaginate\": null,\n            /**\n             * Processing indicator enable flag whenever DataTables is enacting a\n             * user request - typically an Ajax request for server-side processing.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bProcessing\": null,\n            /**\n             * Server-side processing enabled flag - when enabled DataTables will\n             * get all data from the server for every draw - there is no filtering,\n             * sorting or paging done on the client-side.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bServerSide\": null,\n            /**\n             * Sorting enablement flag.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bSort\": null,\n            /**\n             * Multi-column sorting\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bSortMulti\": null,\n            /**\n             * Apply a class to the columns which are being sorted to provide a\n             * visual highlight or not. This can slow things down when enabled since\n             * there is a lot of DOM interaction.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bSortClasses\": null,\n            /**\n             * State saving enablement flag.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bStateSave\": null\n       },\n        /**\n         * Scrolling settings for a table.\n         *  @namespace\n         */\n        \"oScroll\": {\n            /**\n             * When the table is shorter in height than sScrollY, collapse the\n             * table container down to the height of the table (when true).\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type boolean\n             */\n            \"bCollapse\": null,\n            /**\n             * Width of the scrollbar for the web-browser's platform. Calculated\n             * during table initialisation.\n             *  @type int\n             *  @default 0\n             */\n            \"iBarWidth\": 0,\n            /**\n             * Viewport width for horizontal scrolling. Horizontal scrolling is\n             * disabled if an empty string.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type string\n             */\n            \"sX\": null,\n            /**\n             * Width to expand the table to when using x-scrolling. Typically you\n             * should not need to use this.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type string\n             *  @deprecated\n             */\n            \"sXInner\": null,\n            /**\n             * Viewport height for vertical scrolling. Vertical scrolling is disabled\n             * if an empty string.\n             * Note that this parameter will be set by the initialisation routine. To\n             * set a default use {@link DataTable.defaults}.\n             *  @type string\n             */\n            \"sY\": null\n        },\n        /**\n         * Language information for the table.\n         *  @namespace\n         *  @extends DataTable.defaults.oLanguage\n         */\n        \"oLanguage\": {\n            /**\n             * Information callback function. See\n             * {@link DataTable.defaults.fnInfoCallback}\n             *  @type function\n             *  @default null\n             */\n            \"fnInfoCallback\": null\n        },\n        /**\n         * Browser support parameters\n         *  @namespace\n         */\n        \"oBrowser\": {\n            /**\n             * Indicate if the browser incorrectly calculates width:100% inside a\n             * scrolling element (IE6/7)\n             *  @type boolean\n             *  @default false\n             */\n            \"bScrollOversize\": false,\n            /**\n             * Determine if the vertical scrollbar is on the right or left of the\n             * scrolling container - needed for rtl language layout, although not\n             * all browsers move the scrollbar (Safari).\n             *  @type boolean\n             *  @default false\n             */\n            \"bScrollbarLeft\": false,\n            /**\n             * Flag for if `getBoundingClientRect` is fully supported or not\n             *  @type boolean\n             *  @default false\n             */\n            \"bBounding\": false,\n            /**\n             * Browser scrollbar width\n             *  @type integer\n             *  @default 0\n             */\n            \"barWidth\": 0\n       },\n        \"ajax\": null,\n        /**\n         * Array referencing the nodes which are used for the features. The\n         * parameters of this object match what is allowed by sDom - i.e.\n         *   <ul>\n         *     <li>'l' - Length changing</li>\n         *     <li>'f' - Filtering input</li>\n         *     <li>'t' - The table!</li>\n         *     <li>'i' - Information</li>\n         *     <li>'p' - Pagination</li>\n         *     <li>'r' - pRocessing</li>\n         *   </ul>\n         *  @type array\n         *  @default []\n         */\n        \"aanFeatures\": [],\n        /**\n         * Store data information - see {@link DataTable.models.oRow} for detailed\n         * information.\n         *  @type array\n         *  @default []\n         */\n        \"aoData\": [],\n        /**\n         * Array of indexes which are in the current display (after filtering etc)\n         *  @type array\n         *  @default []\n         */\n        \"aiDisplay\": [],\n        /**\n         * Array of indexes for display - no filtering\n         *  @type array\n         *  @default []\n         */\n        \"aiDisplayMaster\": [],\n        /**\n         * Map of row ids to data indexes\n         *  @type object\n         *  @default {}\n         */\n        \"aIds\": {},\n        /**\n         * Store information about each column that is in use\n         *  @type array\n         *  @default []\n         */\n        \"aoColumns\": [],\n        /**\n         * Store information about the table's header\n         *  @type array\n         *  @default []\n         */\n        \"aoHeader\": [],\n        /**\n         * Store information about the table's footer\n         *  @type array\n         *  @default []\n         */\n        \"aoFooter\": [],\n        /**\n         * Store the applied global search information in case we want to force a\n         * research or compare the old search to a new one.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @namespace\n         *  @extends DataTable.models.oSearch\n         */\n        \"oPreviousSearch\": {},\n        /**\n         * Store the applied search for each column - see\n         * {@link DataTable.models.oSearch} for the format that is used for the\n         * filtering information for each column.\n         *  @type array\n         *  @default []\n         */\n        \"aoPreSearchCols\": [],\n        /**\n         * Sorting that is applied to the table. Note that the inner arrays are\n         * used in the following manner:\n         * <ul>\n         *   <li>Index 0 - column number</li>\n         *   <li>Index 1 - current sorting direction</li>\n         * </ul>\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type array\n         *  @todo These inner arrays should really be objects\n         */\n        \"aaSorting\": null,\n        /**\n         * Sorting that is always applied to the table (i.e. prefixed in front of\n         * aaSorting).\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type array\n         *  @default []\n         */\n        \"aaSortingFixed\": [],\n        /**\n         * Classes to use for the striping of a table.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type array\n         *  @default []\n         */\n        \"asStripeClasses\": null,\n        /**\n         * If restoring a table - we should restore its striping classes as well\n         *  @type array\n         *  @default []\n         */\n        \"asDestroyStripes\": [],\n        /**\n         * If restoring a table - we should restore its width\n         *  @type int\n         *  @default 0\n         */\n        \"sDestroyWidth\": 0,\n        /**\n         * Callback functions array for every time a row is inserted (i.e. on a draw).\n         *  @type array\n         *  @default []\n         */\n        \"aoRowCallback\": [],\n        /**\n         * Callback functions for the header on each draw.\n         *  @type array\n         *  @default []\n         */\n        \"aoHeaderCallback\": [],\n        /**\n         * Callback function for the footer on each draw.\n         *  @type array\n         *  @default []\n         */\n        \"aoFooterCallback\": [],\n        /**\n         * Array of callback functions for draw callback functions\n         *  @type array\n         *  @default []\n         */\n        \"aoDrawCallback\": [],\n        /**\n         * Array of callback functions for row created function\n         *  @type array\n         *  @default []\n         */\n        \"aoRowCreatedCallback\": [],\n        /**\n         * Callback functions for just before the table is redrawn. A return of\n         * false will be used to cancel the draw.\n         *  @type array\n         *  @default []\n         */\n        \"aoPreDrawCallback\": [],\n        /**\n         * Callback functions for when the table has been initialised.\n         *  @type array\n         *  @default []\n         */\n        \"aoInitComplete\": [],\n        /**\n         * Callbacks for modifying the settings to be stored for state saving, prior to\n         * saving state.\n         *  @type array\n         *  @default []\n         */\n        \"aoStateSaveParams\": [],\n        /**\n         * Callbacks for modifying the settings that have been stored for state saving\n         * prior to using the stored values to restore the state.\n         *  @type array\n         *  @default []\n         */\n        \"aoStateLoadParams\": [],\n        /**\n         * Callbacks for operating on the settings object once the saved state has been\n         * loaded\n         *  @type array\n         *  @default []\n         */\n        \"aoStateLoaded\": [],\n        /**\n         * Cache the table ID for quick access\n         *  @type string\n         *  @default <i>Empty string</i>\n         */\n        \"sTableId\": \"\",\n        /**\n         * The TABLE node for the main table\n         *  @type node\n         *  @default null\n         */\n        \"nTable\": null,\n        /**\n         * Permanent ref to the thead element\n         *  @type node\n         *  @default null\n         */\n        \"nTHead\": null,\n        /**\n         * Permanent ref to the tfoot element - if it exists\n         *  @type node\n         *  @default null\n         */\n        \"nTFoot\": null,\n        /**\n         * Permanent ref to the tbody element\n         *  @type node\n         *  @default null\n         */\n        \"nTBody\": null,\n        /**\n         * Cache the wrapper node (contains all DataTables controlled elements)\n         *  @type node\n         *  @default null\n         */\n        \"nTableWrapper\": null,\n        /**\n         * Indicate if when using server-side processing the loading of data\n         * should be deferred until the second draw.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type boolean\n         *  @default false\n         */\n        \"bDeferLoading\": false,\n        /**\n         * Indicate if all required information has been read in\n         *  @type boolean\n         *  @default false\n         */\n        \"bInitialised\": false,\n        /**\n         * Information about open rows. Each object in the array has the parameters\n         * 'nTr' and 'nParent'\n         *  @type array\n         *  @default []\n         */\n        \"aoOpenRows\": [],\n        /**\n         * Dictate the positioning of DataTables' control elements - see\n         * {@link DataTable.model.oInit.sDom}.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         *  @default null\n         */\n        \"sDom\": null,\n        /**\n         * Search delay (in mS)\n         *  @type integer\n         *  @default null\n         */\n        \"searchDelay\": null,\n        /**\n         * Which type of pagination should be used.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         *  @default two_button\n         */\n        \"sPaginationType\": \"two_button\",\n        /**\n         * The state duration (for `stateSave`) in seconds.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type int\n         *  @default 0\n         */\n        \"iStateDuration\": 0,\n        /**\n         * Array of callback functions for state saving. Each array element is an\n         * object with the following parameters:\n         *   <ul>\n         *     <li>function:fn - function to call. Takes two parameters, oSettings\n         *       and the JSON string to save that has been thus far created. Returns\n         *       a JSON string to be inserted into a json object\n         *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n         *     <li>string:sName - name of callback</li>\n         *   </ul>\n         *  @type array\n         *  @default []\n         */\n        \"aoStateSave\": [],\n        /**\n         * Array of callback functions for state loading. Each array element is an\n         * object with the following parameters:\n         *   <ul>\n         *     <li>function:fn - function to call. Takes two parameters, oSettings\n         *       and the object stored. May return false to cancel state loading</li>\n         *     <li>string:sName - name of callback</li>\n         *   </ul>\n         *  @type array\n         *  @default []\n         */\n        \"aoStateLoad\": [],\n        /**\n         * State that was saved. Useful for back reference\n         *  @type object\n         *  @default null\n         */\n        \"oSavedState\": null,\n        /**\n         * State that was loaded. Useful for back reference\n         *  @type object\n         *  @default null\n         */\n        \"oLoadedState\": null,\n        /**\n         * Source url for AJAX data for the table.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         *  @default null\n         */\n        \"sAjaxSource\": null,\n        /**\n         * Property from a given object from which to read the table data from. This\n         * can be an empty string (when not server-side processing), in which case\n         * it is  assumed an an array is given directly.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         */\n        \"sAjaxDataProp\": null,\n        /**\n         * Note if draw should be blocked while getting data\n         *  @type boolean\n         *  @default true\n         */\n        \"bAjaxDataGet\": true,\n        /**\n         * The last jQuery XHR object that was used for server-side data gathering.\n         * This can be used for working with the XHR information in one of the\n         * callbacks\n         *  @type object\n         *  @default null\n         */\n        \"jqXHR\": null,\n        /**\n         * JSON returned from the server in the last Ajax request\n         *  @type object\n         *  @default undefined\n         */\n        \"json\": undefined,\n        /**\n         * Data submitted as part of the last Ajax request\n         *  @type object\n         *  @default undefined\n         */\n        \"oAjaxData\": undefined,\n        /**\n         * Function to get the server-side data.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type function\n         */\n        \"fnServerData\": null,\n        /**\n         * Functions which are called prior to sending an Ajax request so extra\n         * parameters can easily be sent to the server\n         *  @type array\n         *  @default []\n         */\n        \"aoServerParams\": [],\n        /**\n         * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n         * required).\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type string\n         */\n        \"sServerMethod\": null,\n        /**\n         * Format numbers for display.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type function\n         */\n        \"fnFormatNumber\": null,\n        /**\n         * List of options that can be used for the user selectable length menu.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type array\n         *  @default []\n         */\n        \"aLengthMenu\": null,\n        /**\n         * Counter for the draws that the table does. Also used as a tracker for\n         * server-side processing\n         *  @type int\n         *  @default 0\n         */\n        \"iDraw\": 0,\n        /**\n         * Indicate if a redraw is being done - useful for Ajax\n         *  @type boolean\n         *  @default false\n         */\n        \"bDrawing\": false,\n        /**\n         * Draw index (iDraw) of the last error when parsing the returned data\n         *  @type int\n         *  @default -1\n         */\n        \"iDrawError\": -1,\n        /**\n         * Paging display length\n         *  @type int\n         *  @default 10\n         */\n        \"_iDisplayLength\": 10,\n        /**\n         * Paging start point - aiDisplay index\n         *  @type int\n         *  @default 0\n         */\n        \"_iDisplayStart\": 0,\n        /**\n         * Server-side processing - number of records in the result set\n         * (i.e. before filtering), Use fnRecordsTotal rather than\n         * this property to get the value of the number of records, regardless of\n         * the server-side processing setting.\n         *  @type int\n         *  @default 0\n         *  @private\n         */\n        \"_iRecordsTotal\": 0,\n        /**\n         * Server-side processing - number of records in the current display set\n         * (i.e. after filtering). Use fnRecordsDisplay rather than\n         * this property to get the value of the number of records, regardless of\n         * the server-side processing setting.\n         *  @type boolean\n         *  @default 0\n         *  @private\n         */\n        \"_iRecordsDisplay\": 0,\n        /**\n         * Flag to indicate if jQuery UI marking and classes should be used.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type boolean\n         */\n        \"bJUI\": null,\n        /**\n         * The classes to use for the table\n         *  @type object\n         *  @default {}\n         */\n        \"oClasses\": {},\n        /**\n         * Flag attached to the settings object so you can check in the draw\n         * callback if filtering has been done in the draw. Deprecated in favour of\n         * events.\n         *  @type boolean\n         *  @default false\n         *  @deprecated\n         */\n        \"bFiltered\": false,\n        /**\n         * Flag attached to the settings object so you can check in the draw\n         * callback if sorting has been done in the draw. Deprecated in favour of\n         * events.\n         *  @type boolean\n         *  @default false\n         *  @deprecated\n         */\n        \"bSorted\": false,\n        /**\n         * Indicate that if multiple rows are in the header and there is more than\n         * one unique cell per column, if the top one (true) or bottom one (false)\n         * should be used for sorting / title by DataTables.\n         * Note that this parameter will be set by the initialisation routine. To\n         * set a default use {@link DataTable.defaults}.\n         *  @type boolean\n         */\n        \"bSortCellsTop\": null,\n        /**\n         * Initialisation object that is used for the table\n         *  @type object\n         *  @default null\n         */\n        \"oInit\": null,\n        /**\n         * Destroy callback functions - for plug-ins to attach themselves to the\n         * destroy so they can clean up markup and events.\n         *  @type array\n         *  @default []\n         */\n        \"aoDestroyCallback\": [],\n        /**\n         * Get the number of records in the current record set, before filtering\n         *  @type function\n         */\n        \"fnRecordsTotal\": function ()\n        {\n            return _fnDataSource(this) == 'ssp' ?\n                    this._iRecordsTotal * 1 :\n                    this.aiDisplayMaster.length;\n        },\n        /**\n         * Get the number of records in the current record set, after filtering\n         *  @type function\n         */\n        \"fnRecordsDisplay\": function ()\n        {\n            return _fnDataSource(this) == 'ssp' ?\n                    this._iRecordsDisplay * 1 :\n                    this.aiDisplay.length;\n        },\n        /**\n         * Get the display end point - aiDisplay index\n         *  @type function\n         */\n        \"fnDisplayEnd\": function ()\n        {\n            var\n                    len = this._iDisplayLength,\n                    start = this._iDisplayStart,\n                    calc = start + len,\n                    records = this.aiDisplay.length,\n                    features = this.oFeatures,\n                    paginate = features.bPaginate;\n\n            if (features.bServerSide) {\n                return paginate === false || len === -1 ?\n                        start + records :\n                        Math.min(start + len, this._iRecordsDisplay);\n            }\n            else {\n                return !paginate || calc > records || len === -1 ?\n                        records :\n                        calc;\n            }\n        },\n        /**\n         * The DataTables object for this table\n         *  @type object\n         *  @default null\n         */\n        \"oInstance\": null,\n        /**\n         * Unique identifier for each instance of the DataTables object. If there\n         * is an ID on the table node, then it takes that value, otherwise an\n         * incrementing internal counter is used.\n         *  @type string\n         *  @default null\n         */\n        \"sInstance\": null,\n        /**\n         * tabindex attribute value that is added to DataTables control elements, allowing\n         * keyboard navigation of the table and its controls.\n         */\n        \"iTabIndex\": 0,\n        /**\n         * DIV container for the footer scrolling table if scrolling\n         */\n        \"nScrollHead\": null,\n        /**\n         * DIV container for the footer scrolling table if scrolling\n         */\n        \"nScrollFoot\": null,\n        /**\n         * Last applied sort\n         *  @type array\n         *  @default []\n         */\n        \"aLastSort\": [],\n        /**\n         * Stored plug-in instances\n         *  @type object\n         *  @default {}\n         */\n        \"oPlugins\": {},\n        /**\n         * Function used to get a row's id from the row's data\n         *  @type function\n         *  @default null\n         */\n        \"rowIdFn\": null,\n        /**\n         * Data location where to store a row's id\n         *  @type string\n         *  @default null\n         */\n        \"rowId\": null\n    };\n\n    /**\n     * Extension object for DataTables that is used to provide all extension\n     * options.\n     *\n     * Note that the `DataTable.ext` object is available through\n     * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n     * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n     *  @namespace\n     *  @extends DataTable.models.ext\n     */\n\n    /**\n     * DataTables extensions\n     * \n     * This namespace acts as a collection area for plug-ins that can be used to\n     * extend DataTables capabilities. Indeed many of the build in methods\n     * use this method to provide their own capabilities (sorting methods for\n     * example).\n     *\n     * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n     * reasons\n     *\n     *  @namespace\n     */\n    DataTable.ext = _ext = {\n        /**\n         * Buttons. For use with the Buttons extension for DataTables. This is\n         * defined here so other extensions can define buttons regardless of load\n         * order. It is _not_ used by DataTables core.\n         *\n         *  @type object\n         *  @default {}\n         */\n        buttons: {},\n        /**\n         * Element class names\n         *\n         *  @type object\n         *  @default {}\n         */\n        classes: {},\n        /**\n         * DataTables build type (expanded by the download builder)\n         *\n         *  @type string\n         */\n        builder: \"-source-\",\n        /**\n         * Error reporting.\n         * \n         * How should DataTables report an error. Can take the value 'alert',\n         * 'throw', 'none' or a function.\n         *\n         *  @type string|function\n         *  @default alert\n         */\n        errMode: \"alert\",\n        /**\n         * Feature plug-ins.\n         * \n         * This is an array of objects which describe the feature plug-ins that are\n         * available to DataTables. These feature plug-ins are then available for\n         * use through the `dom` initialisation option.\n         * \n         * Each feature plug-in is described by an object which must have the\n         * following properties:\n         * \n         * * `fnInit` - function that is used to initialise the plug-in,\n         * * `cFeature` - a character so the feature can be enabled by the `dom`\n         *   instillation option. This is case sensitive.\n         *\n         * The `fnInit` function has the following input parameters:\n         *\n         * 1. `{object}` DataTables settings object: see\n         *    {@link DataTable.models.oSettings}\n         *\n         * And the following return is expected:\n         * \n         * * {node|null} The element which contains your feature. Note that the\n         *   return may also be void if your plug-in does not require to inject any\n         *   DOM elements into DataTables control (`dom`) - for example this might\n         *   be useful when developing a plug-in which allows table control via\n         *   keyboard entry\n         *\n         *  @type array\n         *\n         *  @example\n         *    $.fn.dataTable.ext.features.push( {\n         *      \"fnInit\": function( oSettings ) {\n         *        return new TableTools( { \"oDTSettings\": oSettings } );\n         *      },\n         *      \"cFeature\": \"T\"\n         *    } );\n         */\n        feature: [],\n        /**\n         * Row searching.\n         * \n         * This method of searching is complimentary to the default type based\n         * searching, and a lot more comprehensive as it allows you complete control\n         * over the searching logic. Each element in this array is a function\n         * (parameters described below) that is called for every row in the table,\n         * and your logic decides if it should be included in the searching data set\n         * or not.\n         *\n         * Searching functions have the following input parameters:\n         *\n         * 1. `{object}` DataTables settings object: see\n         *    {@link DataTable.models.oSettings}\n         * 2. `{array|object}` Data for the row to be processed (same as the\n         *    original format that was passed in as the data source, or an array\n         *    from a DOM data source\n         * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n         *    can be useful to retrieve the `TR` element if you need DOM interaction.\n         *\n         * And the following return is expected:\n         *\n         * * {boolean} Include the row in the searched result set (true) or not\n         *   (false)\n         *\n         * Note that as with the main search ability in DataTables, technically this\n         * is \"filtering\", since it is subtractive. However, for consistency in\n         * naming we call it searching here.\n         *\n         *  @type array\n         *  @default []\n         *\n         *  @example\n         *    // The following example shows custom search being applied to the\n         *    // fourth column (i.e. the data[3] index) based on two input values\n         *    // from the end-user, matching the data in a certain range.\n         *    $.fn.dataTable.ext.search.push(\n         *      function( settings, data, dataIndex ) {\n         *        var min = document.getElementById('min').value * 1;\n         *        var max = document.getElementById('max').value * 1;\n         *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n         *\n         *        if ( min == \"\" && max == \"\" ) {\n         *          return true;\n         *        }\n         *        else if ( min == \"\" && version < max ) {\n         *          return true;\n         *        }\n         *        else if ( min < version && \"\" == max ) {\n         *          return true;\n         *        }\n         *        else if ( min < version && version < max ) {\n         *          return true;\n         *        }\n         *        return false;\n         *      }\n         *    );\n         */\n        search: [],\n        /**\n         * Selector extensions\n         *\n         * The `selector` option can be used to extend the options available for the\n         * selector modifier options (`selector-modifier` object data type) that\n         * each of the three built in selector types offer (row, column and cell +\n         * their plural counterparts). For example the Select extension uses this\n         * mechanism to provide an option to select only rows, columns and cells\n         * that have been marked as selected by the end user (`{selected: true}`),\n         * which can be used in conjunction with the existing built in selector\n         * options.\n         *\n         * Each property is an array to which functions can be pushed. The functions\n         * take three attributes:\n         *\n         * * Settings object for the host table\n         * * Options object (`selector-modifier` object type)\n         * * Array of selected item indexes\n         *\n         * The return is an array of the resulting item indexes after the custom\n         * selector has been applied.\n         *\n         *  @type object\n         */\n        selector: {\n            cell: [],\n            column: [],\n            row: []\n       },\n        /**\n         * Internal functions, exposed for used in plug-ins.\n         * \n         * Please note that you should not need to use the internal methods for\n         * anything other than a plug-in (and even then, try to avoid if possible).\n         * The internal function may change between releases.\n         *\n         *  @type object\n         *  @default {}\n         */\n        internal: {},\n        /**\n         * Legacy configuration options. Enable and disable legacy options that\n         * are available in DataTables.\n         *\n         *  @type object\n         */\n        legacy: {\n            /**\n             * Enable / disable DataTables 1.9 compatible server-side processing\n             * requests\n             *\n             *  @type boolean\n             *  @default null\n             */\n            ajax: null\n       },\n        /**\n         * Pagination plug-in methods.\n         * \n         * Each entry in this object is a function and defines which buttons should\n         * be shown by the pagination rendering method that is used for the table:\n         * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n         * buttons are displayed in the document, while the functions here tell it\n         * what buttons to display. This is done by returning an array of button\n         * descriptions (what each button will do).\n         *\n         * Pagination types (the four built in options and any additional plug-in\n         * options defined here) can be used through the `paginationType`\n         * initialisation parameter.\n         *\n         * The functions defined take two parameters:\n         *\n         * 1. `{int} page` The current page index\n         * 2. `{int} pages` The number of pages in the table\n         *\n         * Each function is expected to return an array where each element of the\n         * array can be one of:\n         *\n         * * `first` - Jump to first page when activated\n         * * `last` - Jump to last page when activated\n         * * `previous` - Show previous page when activated\n         * * `next` - Show next page when activated\n         * * `{int}` - Show page of the index given\n         * * `{array}` - A nested array containing the above elements to add a\n         *   containing 'DIV' element (might be useful for styling).\n         *\n         * Note that DataTables v1.9- used this object slightly differently whereby\n         * an object with two functions would be defined for each plug-in. That\n         * ability is still supported by DataTables 1.10+ to provide backwards\n         * compatibility, but this option of use is now decremented and no longer\n         * documented in DataTables 1.10+.\n         *\n         *  @type object\n         *  @default {}\n         *\n         *  @example\n         *    // Show previous, next and current page buttons only\n         *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n         *      return [ 'previous', page, 'next' ];\n         *    };\n         */\n        pager: {},\n        renderer: {\n            pageButton: {},\n            header: {}\n       },\n        /**\n         * Ordering plug-ins - custom data source\n         * \n         * The extension options for ordering of data available here is complimentary\n         * to the default type based ordering that DataTables typically uses. It\n         * allows much greater control over the the data that is being used to\n         * order a column, but is necessarily therefore more complex.\n         * \n         * This type of ordering is useful if you want to do ordering based on data\n         * live from the DOM (for example the contents of an 'input' element) rather\n         * than just the static string that DataTables knows of.\n         * \n         * The way these plug-ins work is that you create an array of the values you\n         * wish to be ordering for the column in question and then return that\n         * array. The data in the array much be in the index order of the rows in\n         * the table (not the currently ordering order!). Which order data gathering\n         * function is run here depends on the `dt-init columns.orderDataType`\n         * parameter that is used for the column (if any).\n         *\n         * The functions defined take two parameters:\n         *\n         * 1. `{object}` DataTables settings object: see\n         *    {@link DataTable.models.oSettings}\n         * 2. `{int}` Target column index\n         *\n         * Each function is expected to return an array:\n         *\n         * * `{array}` Data for the column to be ordering upon\n         *\n         *  @type array\n         *\n         *  @example\n         *    // Ordering using `input` node values\n         *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n         *    {\n         *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n         *        return $('input', td).val();\n         *      } );\n         *    }\n         */\n        order: {},\n        /**\n         * Type based plug-ins.\n         *\n         * Each column in DataTables has a type assigned to it, either by automatic\n         * detection or by direct assignment using the `type` option for the column.\n         * The type of a column will effect how it is ordering and search (plug-ins\n         * can also make use of the column type if required).\n         *\n         * @namespace\n         */\n        type: {\n            /**\n             * Type detection functions.\n             *\n             * The functions defined in this object are used to automatically detect\n             * a column's type, making initialisation of DataTables super easy, even\n             * when complex data is in the table.\n             *\n             * The functions defined take two parameters:\n             *\n             *  1. `{*}` Data from the column cell to be analysed\n             *  2. `{settings}` DataTables settings object. This can be used to\n             *     perform context specific type detection - for example detection\n             *     based on language settings such as using a comma for a decimal\n             *     place. Generally speaking the options from the settings will not\n             *     be required\n             *\n             * Each function is expected to return:\n             *\n             * * `{string|null}` Data type detected, or null if unknown (and thus\n             *   pass it on to the other type detection functions.\n             *\n             *  @type array\n             *\n             *  @example\n             *    // Currency type detection plug-in:\n             *    $.fn.dataTable.ext.type.detect.push(\n             *      function ( data, settings ) {\n             *        // Check the numeric part\n             *        if ( ! $.isNumeric( data.substring(1) ) ) {\n             *          return null;\n             *        }\n             *\n             *        // Check prefixed by currency\n             *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n             *          return 'currency';\n             *        }\n             *        return null;\n             *      }\n             *    );\n             */\n            detect: [],\n            /**\n             * Type based search formatting.\n             *\n             * The type based searching functions can be used to pre-format the\n             * data to be search on. For example, it can be used to strip HTML\n             * tags or to de-format telephone numbers for numeric only searching.\n             *\n             * Note that is a search is not defined for a column of a given type,\n             * no search formatting will be performed.\n             * \n             * Pre-processing of searching data plug-ins - When you assign the sType\n             * for a column (or have it automatically detected for you by DataTables\n             * or a type detection plug-in), you will typically be using this for\n             * custom sorting, but it can also be used to provide custom searching\n             * by allowing you to pre-processing the data and returning the data in\n             * the format that should be searched upon. This is done by adding\n             * functions this object with a parameter name which matches the sType\n             * for that target column. This is the corollary of <i>afnSortData</i>\n             * for searching data.\n             *\n             * The functions defined take a single parameter:\n             *\n             *  1. `{*}` Data from the column cell to be prepared for searching\n             *\n             * Each function is expected to return:\n             *\n             * * `{string|null}` Formatted string that will be used for the searching.\n             *\n             *  @type object\n             *  @default {}\n             *\n             *  @example\n             *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n             *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n             *    }\n             */\n            search: {},\n            /**\n             * Type based ordering.\n             *\n             * The column type tells DataTables what ordering to apply to the table\n             * when a column is sorted upon. The order for each type that is defined,\n             * is defined by the functions available in this object.\n             *\n             * Each ordering option can be described by three properties added to\n             * this object:\n             *\n             * * `{type}-pre` - Pre-formatting function\n             * * `{type}-asc` - Ascending order function\n             * * `{type}-desc` - Descending order function\n             *\n             * All three can be used together, only `{type}-pre` or only\n             * `{type}-asc` and `{type}-desc` together. It is generally recommended\n             * that only `{type}-pre` is used, as this provides the optimal\n             * implementation in terms of speed, although the others are provided\n             * for compatibility with existing Javascript sort functions.\n             *\n             * `{type}-pre`: Functions defined take a single parameter:\n             *\n             *  1. `{*}` Data from the column cell to be prepared for ordering\n             *\n             * And return:\n             *\n             * * `{*}` Data to be sorted upon\n             *\n             * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n             * functions, taking two parameters:\n             *\n             *  1. `{*}` Data to compare to the second parameter\n             *  2. `{*}` Data to compare to the first parameter\n             *\n             * And returning:\n             *\n             * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n             *   than the second parameter, ===0 if the two parameters are equal and\n             *   >0 if the first parameter should be sorted height than the second\n             *   parameter.\n             * \n             *  @type object\n             *  @default {}\n             *\n             *  @example\n             *    // Numeric ordering of formatted numbers with a pre-formatter\n             *    $.extend( $.fn.dataTable.ext.type.order, {\n             *      \"string-pre\": function(x) {\n             *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n             *        return parseFloat( a );\n             *      }\n             *    } );\n             *\n             *  @example\n             *    // Case-sensitive string ordering, with no pre-formatting method\n             *    $.extend( $.fn.dataTable.ext.order, {\n             *      \"string-case-asc\": function(x,y) {\n             *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n             *      },\n             *      \"string-case-desc\": function(x,y) {\n             *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n             *      }\n             *    } );\n             */\n            order: {}\n        },\n        /**\n         * Unique DataTables instance counter\n         *\n         * @type int\n         * @private\n         */\n        _unique:0,\n        //\n        // Depreciated\n        // The following properties are retained for backwards compatiblity only.\n        // The should not be used in new projects and will be removed in a future\n        // version\n        //\n\n        /**\n         * Version check function.\n         *  @type function\n         *  @depreciated Since 1.10\n         */\n        fnVersionCheck: DataTable.fnVersionCheck,\n        /**\n         * Index for what 'this' index API functions should use\n         *  @type int\n         *  @deprecated Since v1.10\n         */\n        iApiIndex:0,\n        /**\n         * jQuery UI class container\n         *  @type object\n         *  @deprecated Since v1.10\n         */\n        oJUIClasses: {},\n        /**\n         * Software version\n         *  @type string\n         *  @deprecated Since v1.10\n         */\n        sVersion: DataTable.version\n    };\n\n    //\n    // Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n    //\n    $.extend(_ext, {\n        afnFiltering: _ext.search,\n        aTypes: _ext.type.detect,\n        ofnSearch: _ext.type.search,\n        oSort: _ext.type.order,\n        afnSortData: _ext.order,\n        aoFeatures: _ext.feature,\n        oApi: _ext.internal,\n        oStdClasses: _ext.classes,\n        oPagination: _ext.pager\n    });\n\n    $.extend(DataTable.ext.classes, {\n        \"sTable\": \"dataTable\",\n        \"sNoFooter\": \"no-footer\",\n        /* Paging buttons */\n        \"sPageButton\": \"paginate_button\",\n        \"sPageButtonActive\": \"current\",\n        \"sPageButtonDisabled\": \"disabled\",\n        /* Striping classes */\n        \"sStripeOdd\": \"odd\",\n        \"sStripeEven\": \"even\",\n        /* Empty row */\n        \"sRowEmpty\": \"dataTables_empty\",\n        /* Features */\n        \"sWrapper\": \"dataTables_wrapper\",\n        \"sFilter\": \"dataTables_filter\",\n        \"sInfo\": \"dataTables_info\",\n        \"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n        \"sLength\": \"dataTables_length\",\n        \"sProcessing\": \"dataTables_processing\",\n        /* Sorting */\n        \"sSortAsc\": \"sorting_asc\",\n        \"sSortDesc\": \"sorting_desc\",\n        \"sSortable\": \"sorting\", /* Sortable in both directions */\n        \"sSortableAsc\": \"sorting_asc_disabled\",\n        \"sSortableDesc\": \"sorting_desc_disabled\",\n        \"sSortableNone\": \"sorting_disabled\",\n        \"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\n        /* Filtering */\n        \"sFilterInput\": \"\",\n        /* Page length */\n        \"sLengthSelect\": \"\",\n        /* Scrolling */\n        \"sScrollWrapper\": \"dataTables_scroll\",\n        \"sScrollHead\": \"dataTables_scrollHead\",\n        \"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n        \"sScrollBody\": \"dataTables_scrollBody\",\n        \"sScrollFoot\": \"dataTables_scrollFoot\",\n        \"sScrollFootInner\": \"dataTables_scrollFootInner\",\n        /* Misc */\n        \"sHeaderTH\": \"\",\n        \"sFooterTH\": \"\",\n        // Deprecated\n        \"sSortJUIAsc\": \"\",\n        \"sSortJUIDesc\": \"\",\n        \"sSortJUI\": \"\",\n        \"sSortJUIAscAllowed\": \"\",\n        \"sSortJUIDescAllowed\": \"\",\n        \"sSortJUIWrapper\": \"\",\n        \"sSortIcon\": \"\",\n        \"sJUIHeader\": \"\",\n        \"sJUIFooter\": \"\"\n    });\n\n    (function () {\n\n        // Reused strings for better compression. Closure compiler appears to have a\n        // weird edge case where it is trying to expand strings rather than use the\n        // variable version. This results in about 200 bytes being added, for very\n        // little preference benefit since it this run on script load only.\n        var _empty = '';\n        _empty = '';\n\n        var _stateDefault = _empty + 'ui-state-default';\n        var _sortIcon = _empty + 'css_right ui-icon ui-icon-';\n        var _headerFooter = _empty + 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix';\n\n        $.extend(DataTable.ext.oJUIClasses, DataTable.ext.classes, {\n            /* Full numbers paging buttons */\n            \"sPageButton\": \"fg-button ui-button \" + _stateDefault,\n            \"sPageButtonActive\": \"ui-state-disabled\",\n            \"sPageButtonDisabled\": \"ui-state-disabled\",\n            /* Features */\n            \"sPaging\": \"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi \" +\n                    \"ui-buttonset-multi paging_\", /* Note that the type is postfixed */\n\n            /* Sorting */\n            \"sSortAsc\": _stateDefault + \" sorting_asc\",\n            \"sSortDesc\": _stateDefault + \" sorting_desc\",\n            \"sSortable\": _stateDefault + \" sorting\",\n            \"sSortableAsc\": _stateDefault + \" sorting_asc_disabled\",\n            \"sSortableDesc\": _stateDefault + \" sorting_desc_disabled\",\n            \"sSortableNone\": _stateDefault + \" sorting_disabled\",\n            \"sSortJUIAsc\": _sortIcon + \"triangle-1-n\",\n            \"sSortJUIDesc\": _sortIcon + \"triangle-1-s\",\n            \"sSortJUI\": _sortIcon + \"carat-2-n-s\",\n            \"sSortJUIAscAllowed\": _sortIcon + \"carat-1-n\",\n            \"sSortJUIDescAllowed\": _sortIcon + \"carat-1-s\",\n            \"sSortJUIWrapper\": \"DataTables_sort_wrapper\",\n            \"sSortIcon\": \"DataTables_sort_icon\",\n            /* Scrolling */\n            \"sScrollHead\": \"dataTables_scrollHead \" + _stateDefault,\n            \"sScrollFoot\": \"dataTables_scrollFoot \" + _stateDefault,\n            /* Misc */\n            \"sHeaderTH\": _stateDefault,\n            \"sFooterTH\": _stateDefault,\n            \"sJUIHeader\": _headerFooter + \" ui-corner-tl ui-corner-tr\",\n            \"sJUIFooter\": _headerFooter + \" ui-corner-bl ui-corner-br\"\n        });\n\n    }());\n\n    var extPagination = DataTable.ext.pager;\n\n    function _numbers(page, pages) {\n        var\n                numbers = [],\n                buttons = extPagination.numbers_length,\n                half = Math.floor(buttons / 2),\n                i = 1;\n\n        if (pages <= buttons) {\n            numbers = _range(0, pages);\n        }\n        else if (page <= half) {\n            numbers = _range(0, buttons - 2);\n            numbers.push('ellipsis');\n            numbers.push(pages - 1);\n        }\n        else if (page >= pages - 1 - half) {\n            numbers = _range(pages - (buttons - 2), pages);\n            numbers.splice(0, 0, 'ellipsis'); // no unshift in ie6\n            numbers.splice(0, 0, 0);\n        }\n        else {\n            numbers = _range(page - half + 2, page + half - 1);\n            numbers.push('ellipsis');\n            numbers.push(pages - 1);\n            numbers.splice(0, 0, 'ellipsis');\n            numbers.splice(0, 0, 0);\n        }\n\n        numbers.DT_el = 'span';\n        return numbers;\n    }\n\n    $.extend(extPagination, {\n        simple: function (page, pages) {\n            return ['previous', 'next'];\n        },\n        full: function (page, pages) {\n            return ['first', 'previous', 'next', 'last'];\n        },\n        numbers: function (page, pages) {\n            return [_numbers(page, pages)];\n        },\n        simple_numbers: function (page, pages) {\n            return ['previous', _numbers(page, pages), 'next'];\n        },\n        full_numbers: function (page, pages) {\n            return ['first', 'previous', _numbers(page, pages), 'next', 'last'];\n        },\n        // For testing and plug-ins to use\n        _numbers: _numbers,\n        // Number of number buttons (including ellipsis) to show. _Must be odd!_\n        numbers_length: 7\n    });\n\n    $.extend(true, DataTable.ext.renderer, {\n        pageButton: {\n            _: function (settings, host, idx, buttons, page, pages) {\n                var classes = settings.oClasses;\n                var lang = settings.oLanguage.oPaginate;\n                var aria = settings.oLanguage.oAria.paginate || {};\n                var btnDisplay, btnClass, counter = 0;\n\n                var attach = function (container, buttons) {\n                    var i, ien, node, button;\n                    var clickHandler = function (e) {\n                        _fnPageChange(settings, e.data.action, true);\n                    };\n\n                    for (i = 0, ien = buttons.length; i < ien; i++) {\n                        button = buttons[i];\n\n                        if ($.isArray(button)) {\n                            var inner = $('<' + (button.DT_el || 'div') + '/>')\n                                    .appendTo(container);\n                            attach(inner, button);\n                        }\n                        else {\n                            btnDisplay = null;\n                            btnClass = '';\n\n                            switch (button) {\n                                case 'ellipsis':\n                                    container.append('<span class=\"ellipsis\">&#x2026;</span>');\n                                    break;\n\n                                case 'first':\n                                    btnDisplay = lang.sFirst;\n                                    btnClass = button + (page > 0 ?\n                                            '' : ' ' + classes.sPageButtonDisabled);\n                                    break;\n\n                                case 'previous':\n                                    btnDisplay = lang.sPrevious;\n                                    btnClass = button + (page > 0 ?\n                                            '' : ' ' + classes.sPageButtonDisabled);\n                                    break;\n\n                                case 'next':\n                                    btnDisplay = lang.sNext;\n                                    btnClass = button + (page < pages - 1 ?\n                                            '' : ' ' + classes.sPageButtonDisabled);\n                                    break;\n\n                                case 'last':\n                                    btnDisplay = lang.sLast;\n                                    btnClass = button + (page < pages - 1 ?\n                                            '' : ' ' + classes.sPageButtonDisabled);\n                                    break;\n\n                                default:\n                                    btnDisplay = button + 1;\n                                    btnClass = page === button ?\n                                            classes.sPageButtonActive : '';\n                                    break;\n                            }\n\n                            if (btnDisplay !== null) {\n                                node = $('<a>', {\n                                    'class': classes.sPageButton + ' ' + btnClass,\n                                    'aria-controls': settings.sTableId,\n                                    'aria-label': aria[ button ],\n                                    'data-dt-idx': counter,\n                                    'tabindex': settings.iTabIndex,\n                                    'id': idx === 0 && typeof button === 'string' ?\n                                            settings.sTableId + '_' + button :\n                                            null\n                                })\n                                        .html(btnDisplay)\n                                        .appendTo(container);\n\n                                _fnBindAction(\n                                        node, {action: button}, clickHandler\n                                        );\n\n                                counter++;\n                            }\n                        }\n                    }\n                };\n\n                // IE9 throws an 'unknown error' if document.activeElement is used\n                // inside an iframe or frame. Try / catch the error. Not good for\n                // accessibility, but neither are frames.\n                var activeEl;\n\n                try {\n                    // Because this approach is destroying and recreating the paging\n                    // elements, focus is lost on the select button which is bad for\n                    // accessibility. So we want to restore focus once the draw has\n                    // completed\n                    activeEl = $(host).find(document.activeElement).data('dt-idx');\n                }\n                catch (e) {\n                }\n\n                attach($(host).empty(), buttons);\n\n                if (activeEl) {\n                    $(host).find('[data-dt-idx=' + activeEl + ']').focus();\n                }\n            }\n        }\n    });\n\n    // Built in type detection. See model.ext.aTypes for information about\n    // what is required from this methods.\n    $.extend(DataTable.ext.type.detect, [\n        // Plain numbers - first since V8 detects some plain numbers as dates\n        // e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).\n        function (d, settings)\n        {\n            var decimal = settings.oLanguage.sDecimal;\n            return _isNumber(d, decimal) ? 'num' + decimal : null;\n        },\n        // Dates (only those recognised by the browser's Date.parse)\n        function (d, settings)\n        {\n            // V8 will remove any unknown characters at the start and end of the\n            // expression, leading to false matches such as `$245.12` or `10%` being\n            // a valid date. See forum thread 18941 for detail.\n            if (d && !(d instanceof Date) && (!_re_date_start.test(d) || !_re_date_end.test(d))) {\n                return null;\n            }\n            var parsed = Date.parse(d);\n            return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n        },\n        // Formatted numbers\n        function (d, settings)\n        {\n            var decimal = settings.oLanguage.sDecimal;\n            return _isNumber(d, decimal, true) ? 'num-fmt' + decimal : null;\n        },\n        // HTML numeric\n        function (d, settings)\n        {\n            var decimal = settings.oLanguage.sDecimal;\n            return _htmlNumeric(d, decimal) ? 'html-num' + decimal : null;\n        },\n        // HTML numeric, formatted\n        function (d, settings)\n        {\n            var decimal = settings.oLanguage.sDecimal;\n            return _htmlNumeric(d, decimal, true) ? 'html-num-fmt' + decimal : null;\n        },\n        // HTML (this is strict checking - there must be html)\n        function (d, settings)\n        {\n            return _empty(d) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n                    'html' : null;\n        }\n    ]);\n\n    // Filter formatting functions. See model.ext.ofnSearch for information about\n    // what is required from these methods.\n    // \n    // Note that additional search methods are added for the html numbers and\n    // html formatted numbers by `_addNumericSort()` when we know what the decimal\n    // place is\n\n    $.extend(DataTable.ext.type.search, {\n        html: function (data) {\n            return _empty(data) ?\n                    data :\n                    typeof data === 'string' ?\n                    data\n                    .replace(_re_new_lines, \" \")\n                    .replace(_re_html, \"\") :\n                    '';\n        },\n        string: function (data) {\n            return _empty(data) ?\n                    data :\n                    typeof data === 'string' ?\n                    data.replace(_re_new_lines, \" \") :\n                    data;\n        }\n    });\n\n    var __numericReplace = function (d, decimalPlace, re1, re2) {\n        if (d !== 0 && (!d || d === '-')) {\n            return -Infinity;\n        }\n\n        // If a decimal place other than `.` is used, it needs to be given to the\n        // function so we can detect it and replace with a `.` which is the only\n        // decimal place Javascript recognises - it is not locale aware.\n        if (decimalPlace) {\n            d = _numToDecimal(d, decimalPlace);\n        }\n\n        if (d.replace) {\n            if (re1) {\n                d = d.replace(re1, '');\n            }\n\n            if (re2) {\n                d = d.replace(re2, '');\n            }\n        }\n\n        return d * 1;\n    };\n\n    // Add the numeric 'deformatting' functions for sorting and search. This is done\n    // in a function to provide an easy ability for the language options to add\n    // additional methods if a non-period decimal place is used.\n    function _addNumericSort(decimalPlace) {\n        $.each(\n                {\n                    // Plain numbers\n                    \"num\": function (d) {\n                        return __numericReplace(d, decimalPlace);\n                    },\n                    // Formatted numbers\n                    \"num-fmt\": function (d) {\n                        return __numericReplace(d, decimalPlace, _re_formatted_numeric);\n                    },\n                    // HTML numeric\n                    \"html-num\": function (d) {\n                        return __numericReplace(d, decimalPlace, _re_html);\n                    },\n                    // HTML numeric, formatted\n                    \"html-num-fmt\": function (d) {\n                        return __numericReplace(d, decimalPlace, _re_html, _re_formatted_numeric);\n                    }\n                },\n        function (key, fn) {\n            // Add the ordering method\n            _ext.type.order[ key + decimalPlace + '-pre' ] = fn;\n\n            // For HTML types add a search formatter that will strip the HTML\n            if (key.match(/^html\\-/)) {\n                _ext.type.search[ key + decimalPlace ] = _ext.type.search.html;\n            }\n        }\n        );\n    }\n\n    // Default sort methods\n    $.extend(_ext.type.order, {\n        // Dates\n        \"date-pre\": function (d) {\n            return Date.parse(d) || -Infinity;\n        },\n        // html\n        \"html-pre\": function (a) {\n            return _empty(a) ?\n                    '' :\n                    a.replace ?\n                    a.replace(/<.*?>/g, \"\").toLowerCase() :\n                    a + '';\n        },\n        // string\n        \"string-pre\": function (a) {\n            // This is a little complex, but faster than always calling toString,\n            // http://jsperf.com/tostring-v-check\n            return _empty(a) ?\n                    '' :\n                    typeof a === 'string' ?\n                    a.toLowerCase() :\n                    !a.toString ?\n                    '' :\n                    a.toString();\n        },\n        // string-asc and -desc are retained only for compatibility with the old\n        // sort methods\n        \"string-asc\": function (x, y) {\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n        },\n        \"string-desc\": function (x, y) {\n            return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n        }\n    });\n\n    // Numeric sorting types - order doesn't matter here\n    _addNumericSort('');\n\n    $.extend(true, DataTable.ext.renderer, {\n        header: {\n            _: function (settings, cell, column, classes) {\n                // No additional mark-up required\n                // Attach a sort listener to update on sort - note that using the\n                // `DT` namespace will allow the event to be removed automatically\n                // on destroy, while the `dt` namespaced event is the one we are\n                // listening for\n                $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n                    if (settings !== ctx) { // need to check this this is the host\n                        return;               // table, not a nested one\n                    }\n\n                    var colIdx = column.idx;\n\n                    cell\n                            .removeClass(\n                                    column.sSortingClass + ' ' +\n                                    classes.sSortAsc + ' ' +\n                                    classes.sSortDesc\n                                    )\n                            .addClass(columns[ colIdx ] == 'asc' ?\n                                    classes.sSortAsc : columns[ colIdx ] == 'desc' ?\n                                    classes.sSortDesc :\n                                    column.sSortingClass\n                                    );\n                });\n            },\n            jqueryui: function (settings, cell, column, classes) {\n                $('<div/>')\n                        .addClass(classes.sSortJUIWrapper)\n                        .append(cell.contents())\n                        .append($('<span/>')\n                                .addClass(classes.sSortIcon + ' ' + column.sSortingClassJUI)\n                                )\n                        .appendTo(cell);\n\n                // Attach a sort listener to update on sort\n                $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting, columns) {\n                    if (settings !== ctx) {\n                        return;\n                    }\n\n                    var colIdx = column.idx;\n\n                    cell\n                            .removeClass(classes.sSortAsc + \" \" + classes.sSortDesc)\n                            .addClass(columns[ colIdx ] == 'asc' ?\n                                    classes.sSortAsc : columns[ colIdx ] == 'desc' ?\n                                    classes.sSortDesc :\n                                    column.sSortingClass\n                                    );\n\n                    cell\n                            .find('span.' + classes.sSortIcon)\n                            .removeClass(\n                                    classes.sSortJUIAsc + \" \" +\n                                    classes.sSortJUIDesc + \" \" +\n                                    classes.sSortJUI + \" \" +\n                                    classes.sSortJUIAscAllowed + \" \" +\n                                    classes.sSortJUIDescAllowed\n                                    )\n                            .addClass(columns[ colIdx ] == 'asc' ?\n                                    classes.sSortJUIAsc : columns[ colIdx ] == 'desc' ?\n                                    classes.sSortJUIDesc :\n                                    column.sSortingClassJUI\n                                    );\n                });\n            }\n        }\n    });\n\n    /*\n     * Public helper functions. These aren't used internally by DataTables, or\n     * called by any of the options passed into DataTables, but they can be used\n     * externally by developers working with DataTables. They are helper functions\n     * to make working with DataTables a little bit easier.\n     */\n\n    var __htmlEscapeEntities = function (d) {\n        return typeof d === 'string' ?\n                d.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') :\n                d;\n    };\n\n    /**\n     * Helpers for `columns.render`.\n     *\n     * The options defined here can be used with the `columns.render` initialisation\n     * option to provide a display renderer. The following functions are defined:\n     *\n     * * `number` - Will format numeric data (defined by `columns.data`) for\n     *   display, retaining the original unformatted data for sorting and filtering.\n     *   It takes 5 parameters:\n     *   * `string` - Thousands grouping separator\n     *   * `string` - Decimal point indicator\n     *   * `integer` - Number of decimal points to show\n     *   * `string` (optional) - Prefix.\n     *   * `string` (optional) - Postfix (/suffix).\n     * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n     *   parameters.\n     *\n     * @example\n     *   // Column definition using the number renderer\n     *   {\n     *     data: \"salary\",\n     *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n     *   }\n     *\n     * @namespace\n     */\n    DataTable.render = {\n        number: function (thousands, decimal, precision, prefix, postfix) {\n            return {\n                display: function (d) {\n                    if (typeof d !== 'number' && typeof d !== 'string') {\n                        return d;\n                    }\n\n                    var negative = d < 0 ? '-' : '';\n                    var flo = parseFloat(d);\n\n                    // If NaN then there isn't much formatting that we can do - just\n                    // return immediately, escaping any HTML (this was supposed to\n                    // be a number after all)\n                    if (isNaN(flo)) {\n                        return __htmlEscapeEntities(d);\n                    }\n\n                    flo = flo.toFixed(precision);\n                    d = Math.abs(flo);\n\n                    var intPart = parseInt(d, 10);\n                    var floatPart = precision ?\n                            decimal + (d - intPart).toFixed(precision).substring(2) :\n                            '';\n\n                    return negative + (prefix || '') +\n                            intPart.toString().replace(\n                            /\\B(?=(\\d{3})+(?!\\d))/g, thousands\n                            ) +\n                            floatPart +\n                            (postfix || '');\n                }\n            };\n        },\n        text: function () {\n            return {\n                display: __htmlEscapeEntities\n            };\n        }\n    };\n\n    /*\n     * This is really a good bit rubbish this method of exposing the internal methods\n     * publicly... - To be fixed in 2.0 using methods on the prototype\n     */\n\n    /**\n     * Create a wrapper function for exporting an internal functions to an external API.\n     *  @param {string} fn API function name\n     *  @returns {function} wrapped function\n     *  @memberof DataTable#internal\n     */\n    function _fnExternApiFunc(fn)\n    {\n        return function () {\n            var args = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat(\n                    Array.prototype.slice.call(arguments)\n                    );\n            return DataTable.ext.internal[fn].apply(this, args);\n        };\n    }\n\n    /**\n     * Reference to internal functions for use by plug-in developers. Note that\n     * these methods are references to internal functions and are considered to be\n     * private. If you use these methods, be aware that they are liable to change\n     * between versions.\n     *  @namespace\n     */\n    $.extend(DataTable.ext.internal, {\n        _fnExternApiFunc: _fnExternApiFunc,\n        _fnBuildAjax: _fnBuildAjax,\n        _fnAjaxUpdate: _fnAjaxUpdate,\n        _fnAjaxParameters: _fnAjaxParameters,\n        _fnAjaxUpdateDraw: _fnAjaxUpdateDraw,\n        _fnAjaxDataSrc: _fnAjaxDataSrc,\n        _fnAddColumn: _fnAddColumn,\n        _fnColumnOptions: _fnColumnOptions,\n        _fnAdjustColumnSizing: _fnAdjustColumnSizing,\n        _fnVisibleToColumnIndex: _fnVisibleToColumnIndex,\n        _fnColumnIndexToVisible: _fnColumnIndexToVisible,\n        _fnVisbleColumns: _fnVisbleColumns,\n        _fnGetColumns: _fnGetColumns,\n        _fnColumnTypes: _fnColumnTypes,\n        _fnApplyColumnDefs: _fnApplyColumnDefs,\n        _fnHungarianMap: _fnHungarianMap,\n        _fnCamelToHungarian: _fnCamelToHungarian,\n        _fnLanguageCompat: _fnLanguageCompat,\n        _fnBrowserDetect: _fnBrowserDetect,\n        _fnAddData: _fnAddData,\n        _fnAddTr: _fnAddTr,\n        _fnNodeToDataIndex: _fnNodeToDataIndex,\n        _fnNodeToColumnIndex: _fnNodeToColumnIndex,\n        _fnGetCellData: _fnGetCellData,\n        _fnSetCellData: _fnSetCellData,\n        _fnSplitObjNotation: _fnSplitObjNotation,\n        _fnGetObjectDataFn: _fnGetObjectDataFn,\n        _fnSetObjectDataFn: _fnSetObjectDataFn,\n        _fnGetDataMaster: _fnGetDataMaster,\n        _fnClearTable: _fnClearTable,\n        _fnDeleteIndex: _fnDeleteIndex,\n        _fnInvalidate: _fnInvalidate,\n        _fnGetRowElements: _fnGetRowElements,\n        _fnCreateTr: _fnCreateTr,\n        _fnBuildHead: _fnBuildHead,\n        _fnDrawHead: _fnDrawHead,\n        _fnDraw: _fnDraw,\n        _fnReDraw: _fnReDraw,\n        _fnAddOptionsHtml: _fnAddOptionsHtml,\n        _fnDetectHeader: _fnDetectHeader,\n        _fnGetUniqueThs: _fnGetUniqueThs,\n        _fnFeatureHtmlFilter: _fnFeatureHtmlFilter,\n        _fnFilterComplete: _fnFilterComplete,\n        _fnFilterCustom: _fnFilterCustom,\n        _fnFilterColumn: _fnFilterColumn,\n        _fnFilter: _fnFilter,\n        _fnFilterCreateSearch: _fnFilterCreateSearch,\n        _fnEscapeRegex: _fnEscapeRegex,\n        _fnFilterData: _fnFilterData,\n        _fnFeatureHtmlInfo: _fnFeatureHtmlInfo,\n        _fnUpdateInfo: _fnUpdateInfo,\n        _fnInfoMacros: _fnInfoMacros,\n        _fnInitialise: _fnInitialise,\n        _fnInitComplete: _fnInitComplete,\n        _fnLengthChange: _fnLengthChange,\n        _fnFeatureHtmlLength: _fnFeatureHtmlLength,\n        _fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,\n        _fnPageChange: _fnPageChange,\n        _fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,\n        _fnProcessingDisplay: _fnProcessingDisplay,\n        _fnFeatureHtmlTable: _fnFeatureHtmlTable,\n        _fnScrollDraw: _fnScrollDraw,\n        _fnApplyToChildren: _fnApplyToChildren,\n        _fnCalculateColumnWidths: _fnCalculateColumnWidths,\n        _fnThrottle: _fnThrottle,\n        _fnConvertToWidth: _fnConvertToWidth,\n        _fnGetWidestNode: _fnGetWidestNode,\n        _fnGetMaxLenString: _fnGetMaxLenString,\n        _fnStringToCss: _fnStringToCss,\n        _fnSortFlatten: _fnSortFlatten,\n        _fnSort: _fnSort,\n        _fnSortAria: _fnSortAria,\n        _fnSortListener: _fnSortListener,\n        _fnSortAttachListener: _fnSortAttachListener,\n        _fnSortingClasses: _fnSortingClasses,\n        _fnSortData: _fnSortData,\n        _fnSaveState: _fnSaveState,\n        _fnLoadState: _fnLoadState,\n        _fnSettingsFromNode: _fnSettingsFromNode,\n        _fnLog: _fnLog,\n        _fnMap: _fnMap,\n        _fnBindAction: _fnBindAction,\n        _fnCallbackReg: _fnCallbackReg,\n        _fnCallbackFire: _fnCallbackFire,\n        _fnLengthOverflow: _fnLengthOverflow,\n        _fnRenderer: _fnRenderer,\n        _fnDataSource: _fnDataSource,\n        _fnRowAttributes: _fnRowAttributes,\n        _fnCalculateEnd: function () {\n        } // Used by a lot of plug-ins, but redundant\n        // in 1.10, so this dead-end function is\n        // added to prevent errors\n    });\n\n    // jQuery access\n    $.fn.dataTable = DataTable;\n\n    // Provide access to the host jQuery object (circular reference)\n    DataTable.$ = $;\n\n    // Legacy aliases\n    $.fn.dataTableSettings = DataTable.settings;\n    $.fn.dataTableExt = DataTable.ext;\n\n    // With a capital `D` we return a DataTables API instance rather than a\n    // jQuery object\n    $.fn.DataTable = function (opts) {\n        return $(this).dataTable(opts).api();\n    };\n\n    // All properties that are available to $.fn.dataTable should also be\n    // available on $.fn.DataTable\n    $.each(DataTable, function (prop, val) {\n        $.fn.DataTable[ prop ] = val;\n    });\n\n    // Information about events fired by DataTables - for documentation.\n    /**\n     * Draw event, fired whenever the table is redrawn on the page, at the same\n     * point as fnDrawCallback. This may be useful for binding events or\n     * performing calculations when the table is altered at all.\n     *  @name DataTable#draw.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     */\n\n    /**\n     * Search event, fired when the searching applied to the table (using the\n     * built-in global search, or column filters) is altered.\n     *  @name DataTable#search.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     */\n\n    /**\n     * Page change event, fired when the paging of the table is altered.\n     *  @name DataTable#page.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     */\n\n    /**\n     * Order event, fired when the ordering applied to the table is altered.\n     *  @name DataTable#order.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     */\n\n    /**\n     * DataTables initialisation complete event, fired when the table is fully\n     * drawn, including Ajax data loaded, if Ajax data is required.\n     *  @name DataTable#init.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} oSettings DataTables settings object\n     *  @param {object} json The JSON object request from the server - only\n     *    present if client-side Ajax sourced data is used</li></ol>\n     */\n\n    /**\n     * State save event, fired when the table has changed state a new state save\n     * is required. This event allows modification of the state saving object\n     * prior to actually doing the save, including addition or other state\n     * properties (for plug-ins) or modification of a DataTables core property.\n     *  @name DataTable#stateSaveParams.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} oSettings DataTables settings object\n     *  @param {object} json The state information to be saved\n     */\n\n    /**\n     * State load event, fired when the table is loading state from the stored\n     * data, but prior to the settings object being modified by the saved state\n     * - allowing modification of the saved state is required or loading of\n     * state for a plug-in.\n     *  @name DataTable#stateLoadParams.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} oSettings DataTables settings object\n     *  @param {object} json The saved state information\n     */\n\n    /**\n     * State loaded event, fired when state has been loaded from stored data and\n     * the settings object has been modified by the loaded data.\n     *  @name DataTable#stateLoaded.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} oSettings DataTables settings object\n     *  @param {object} json The saved state information\n     */\n\n    /**\n     * Processing event, fired when DataTables is doing some kind of processing\n     * (be it, order, searcg or anything else). It can be used to indicate to\n     * the end user that there is something happening, or that something has\n     * finished.\n     *  @name DataTable#processing.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} oSettings DataTables settings object\n     *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n     */\n\n    /**\n     * Ajax (XHR) event, fired whenever an Ajax request is completed from a\n     * request to made to the server for new data. This event is called before\n     * DataTables processed the returned data, so it can also be used to pre-\n     * process the data returned from the server, if needed.\n     *\n     * Note that this trigger is called in `fnServerData`, if you override\n     * `fnServerData` and which to use this event, you need to trigger it in you\n     * success function.\n     *  @name DataTable#xhr.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     *  @param {object} json JSON returned from the server\n     *\n     *  @example\n     *     // Use a custom property returned from the server in another DOM element\n     *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n     *       $('#status').html( json.status );\n     *     } );\n     *\n     *  @example\n     *     // Pre-process the data returned from the server\n     *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {\n     *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {\n     *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;\n     *       }\n     *       // Note no return - manipulate the data directly in the JSON object.\n     *     } );\n     */\n\n    /**\n     * Destroy event, fired when the DataTable is destroyed by calling fnDestroy\n     * or passing the bDestroy:true parameter in the initialisation object. This\n     * can be used to remove bound events, added DOM nodes, etc.\n     *  @name DataTable#destroy.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     */\n\n    /**\n     * Page length change event, fired when number of records to show on each\n     * page (the length) is changed.\n     *  @name DataTable#length.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     *  @param {integer} len New length\n     */\n\n    /**\n     * Column sizing has changed.\n     *  @name DataTable#column-sizing.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     */\n\n    /**\n     * Column visibility has changed.\n     *  @name DataTable#column-visibility.dt\n     *  @event\n     *  @param {event} e jQuery event object\n     *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n     *  @param {int} column Column index\n     *  @param {bool} vis `false` if column now hidden, or `true` if visible\n     */\n\n    return $.fn.dataTable;\n}));\n\n"],"file":"jquery.dataTables.min.js"}